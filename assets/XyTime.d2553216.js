import{r as A,h as c,g as m,R as C,M as R,d as w,S as l,n as T}from"./index.1d7144b8.js";import{T as L,G as E}from"./TimeSlider.f59ec47d.js";import{b as S}from"./index.d10190c4.js";import{c as x}from"./index.7080a99e.js";import{u as _}from"./util.5fe75924.js";import{C as $}from"./CollapsiblePanel.c7402232.js";import{D as I}from"./DrawingTool.dcd0790f.js";import{H as F}from"./HTTPFileSystem.33aea9ff.js";import{L as O}from"./LegendBox.9918cd96.js";import{L as P}from"./LegendStore.64d2f56a.js";import{D as B,S as V}from"./deckgl.8395df4c.js";import"./layer.0cd20467.js";import{t as j}from"./index.01e94811.js";import{S as N}from"./text-layer.c8c59efd.js";import{D as Y}from"./data-filter-extension.4c0d9778.js";import{Z as W}from"./ZoomButtons.6b3cc4d8.js";import"./path-layer.4a6bc071.js";import"./extends.946277fc.js";import"./layer-extension.7ccbe2ef.js";class p extends N{constructor(){super(...arguments),this.MAX_COLORS=21,this.uniformColors=new Array(this.MAX_COLORS*3),this.uniformBreakpoints=new Array(this.MAX_COLORS-1)}initializeState(e){super.initializeState(e),this.getAttributeManager().addInstanced({instanceValue:{accessor:"getValue",size:1,defaultValue:0,transition:!0}})}getShaders(){return{...super.getShaders(),inject:{"vs:#decl":`
            #define MAX_COLORS 21
            #define MAX_BREAKPOINTS 20
            uniform int numBreakpoints;
            uniform vec3 colors[MAX_COLORS];
            uniform float breakpoints[MAX_BREAKPOINTS];
            attribute float instanceValue;
            `,"vs:DECKGL_FILTER_COLOR":`
            // geometry.pickingColor = instancePickingColors;
            picking_setPickingColor(geometry.pickingColor);

            int lastBreakpoint = numBreakpoints;

            for(int i=0; i < MAX_BREAKPOINTS; ++i) {
              if (instanceValue < breakpoints[i]) {
                color = vec4(colors[i], 1.0);
                return;
              }
              if (i == lastBreakpoint) {
                color = vec4(colors[i], 1.0);
                return;
              }
            }
            color = vec4(1.0, 0.0, 0.0, 1.0);
            return;
          `}}}draw({uniforms:e}){const{colors:i,breakpoints:s}=this.props;i.map((n,o)=>{this.uniformColors[o*3]=n[0]/256,this.uniformColors[o*3+1]=n[1]/256,this.uniformColors[o*3+2]=n[2]/256}),s.map((n,o)=>{this.uniformBreakpoints[o]=n});const r={...e,colors:this.uniformColors,breakpoints:this.uniformBreakpoints,numBreakpoints:s.length};super.draw({uniforms:r})}}p.layerName="ScatterplotColorBinsLayer";p.defaultProps={colors:[[128,128,128],[128,128,128]],breakpoints:[0]};const X=new Y({filterSize:1});function G(t){const e=t;try{const i=j(e),s=("00"+i.minutes).slice(-2);return`${i.hours}:${s}`}catch{return"00:00"}}const H={pitch:0,zoom:11,bearing:0,longitude:13.38,latitude:52.5};function q({viewId:t=0,pointLayers:e=[],timeFilter:i=[],dark:s=!1,colors:r=[[1,0,0],[.25,.25,1]],breakpoints:n=[0],radius:o=5,mapIsIndependent:h=!1}){const[d,g]=A.exports.useState(H);c[t]=()=>{g(m.state.viewState)};function k(a){!a.latitude||(a.center||(a.center=[0,0]),a.center[0]=a.longitude,a.center[1]=a.latitude,g(a),h||m.commit("setMapCamera",a))}function b(a){var y;if(a.index<0)return null;const u=(y=a==null?void 0:a.layer)==null?void 0:y.id;if(u===void 0)return null;const f=e[u].time[a.index],D=G(f),M=e[u].value[a.index];return{html:`        <table style="font-size: 0.9rem">
        <tr>
          <td>Value</td>
          <td style="padding-left: 0.5rem;"><b>${Math.round(1e6*M)/1e6}</b></td>
        </tr><tr>
          <td style="text-align: right;">Time</td>
          <td style="padding-left: 0.5rem;"><b>${D}</b></td>
        </tr>
        </table>
      `,style:s?{color:"#ccc",backgroundColor:"#2a3c4f"}:{color:"#223",backgroundColor:"white"}}}const z=e.map((a,u)=>{const f=a.timeRange[0]>i[1]||a.timeRange[1]<i[0];return new p({data:{length:a.time.length,attributes:{getPosition:{value:a.coordinates,size:2},getFilterValue:{value:a.time,size:1},getValue:{value:a.value,size:1}}},autoHighlight:!0,breakpoints:n,colors:r,extensions:[X],id:u,filled:!0,filterRange:i.length?i:null,getRadius:o,highlightColor:[255,0,224],opacity:1,parameters:{depthTest:!1},pickable:!0,radiusScale:1,stroked:!1,updateTriggers:{getPosition:e,getFillColor:e,getFilterValue:i},visible:!f})});return C.createElement(B,{layers:z,controller:!0,useDevicePixels:!0,viewState:d,onViewStateChange:a=>k(a.viewState),pickingRadius:4,onClick:b,getTooltip:b},C.createElement(V,{mapStyle:m.getters.mapStyle,preventStyleDiffing:!0,mapboxApiAccessToken:R}))}function U(){return new Worker("/assets/XytDataParser.worker.06df230e.js",{type:"module"})}const Z={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count",promptCRS:`Enter the coordinate reference system, e.g. EPSG:25832

These coordinates are not in long/lat format. To fix this permanently, convert them to long/lat or add "# EPSG:xxxx" to your CSV header`},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D H\xF6he",showDetails:"Details anzeigen",selection:"Ausgew\xE4hlt",areas:"Orte",count:"Anzahl"}}},K=w({name:"XYTime",i18n:Z,components:{CollapsiblePanel:$,DrawingTool:I,LegendBox:O,TimeSlider:L,ZoomButtons:W,XyTimeDeckMap:q},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean},data:()=>({guiConfig:{buckets:7,exponent:4,radius:5,"clip max":100,"color ramp":"viridis",colorRamps:["bathymetry","electric","inferno","jet","magma","par","viridis"],flip:!1,"manual breaks":""},viewId:`xyt-id-${Math.floor(1e12*Math.random())}`,configId:`gui-config-${Math.floor(1e12*Math.random())}`,timeLabels:[0,1],startTime:0,isAnimating:!1,timeFilter:[0,3599],colors:[[128,128,128],[128,128,128]],breakpoints:[0],range:[1/0,-1/0],timeRange:[1/0,-1/0],legendStore:null,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",radius:250,maxHeight:0,center:null,zoom:9},YAMLrequirementsXY:{file:""},columnLookup:[],gzipWorker:null,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",center:null,zoom:9,buckets:5,exponent:4,clipMax:100,radius:5,colorRamp:"viridis",flip:!1,breakpoints:""},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},pointLayers:[],isLoaded:!1,animator:null,guiController:null,resizer:null,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",ANIMATE_SPEED:4,animationElapsedTime:0}),async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),await this.buildThumbnail(),!this.thumbnail&&(this.setupLogoMover(),this.setupGui(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.isLoaded||await this.loadFiles())},beforeDestroy(){c[this.viewId]=void 0,delete c[this.viewId];try{this.gzipWorker&&(this.gzipWorker.postMessage({terminate:!0}),this.gzipWorker.terminate()),this.guiController&&this.guiController.destroy()}catch(t){console.warn(t)}this.animator&&window.cancelAnimationFrame(this.animator),this.$store.commit("setFullScreen",!1)},computed:{fileApi(){return new F(this.fileSystem,m)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]},urlThumbnail(){return this.thumbnailUrl}},watch:{"$store.state.viewState"(){c[this.viewId]&&c[this.viewId]()}},methods:{handleTimeSliderValues(t){this.animationElapsedTime=t[0],this.timeFilter=t,this.timeLabels=[this.convertSecondsToClockTimeMinutes(t[0]),this.convertSecondsToClockTimeMinutes(t[1])]},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`id-${this.viewId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`${this.viewId}`),e=t==null?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const i=t.clientWidth>640?"280px":"36px";e.style.right=i}},setupGui(){this.guiController=new E({title:"Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const t=this.guiController;t.add(this.guiConfig,"radius",1,20,1);const e=t.addFolder("colors");e.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(this.setColors),e.add(this.guiConfig,"flip").onChange(this.setColors);const i=t.addFolder("breakpoints");i.add(this.guiConfig,"buckets",2,19,1).onChange(this.setColors),i.add(this.guiConfig,"clip max",0,100,1).onChange(this.setColors),i.add(this.guiConfig,"exponent",1,10,1).onChange(this.setColors),i.add(this.guiConfig,"manual breaks").onChange(this.setColors)},async solveProjection(){if(!this.thumbnail){console.log("WHAT PROJECTION:");try{const t=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=S.parse(t)}catch(t){console.error(t)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},this.config);return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.setConfigForRawCSV()},setConfigForRawCSV(){let t="EPSG:4326";this.vizDetails=Object.assign(this.vizDetails,{title:"Point Data: "+this.myState.yamlConfig,description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:t,center:this.vizDetails.center,zoom:this.vizDetails.zoom}),this.$emit("title",this.vizDetails.title||this.vizDetails.file)},async loadStandaloneYAMLConfig(){try{const t=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,e=await this.fileApi.getFileText(t);this.standaloneYAMLconfig=Object.assign({},S.parse(e)),this.validateYAML(),this.setVizDetails()}catch{console.log("failed"),this.$store.commit("setStatus",{type:l.ERROR,msg:"File not found",desc:`Could not find: ${this.myState.subfolder}/${this.myState.yamlConfig}`})}},validateYAML(){const t=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let e={};t?(console.log("has yaml"),e=this.standaloneYAMLconfig):(console.log("no yaml"),e=this.config);for(const i in this.YAMLrequirementsXY)i in e||this.$store.commit("setStatus",{type:l.ERROR,msg:`YAML file missing required key: ${i}`,desc:"Check this.YAMLrequirementsXY for required keys"});e.radius==0&&this.$store.commit("setStatus",{type:l.WARNING,msg:"Radius set to zero",desc:"Radius can not be zero, preset value used instead. "}),(e.zoom<5||e.zoom>20)&&this.$store.commit("setStatus",{type:l.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const t=this.vizDetails.title?this.vizDetails.title:"Point Data: "+this.vizDetails.file;this.$emit("title",t),this.vizDetails.buckets&&(this.guiConfig.buckets=this.vizDetails.buckets),this.vizDetails.exponent&&(this.guiConfig.exponent=this.vizDetails.exponent),this.vizDetails.radius&&(this.guiConfig.radius=this.vizDetails.radius),this.vizDetails.clipMax&&(this.guiConfig["clip max"]=this.vizDetails.clipMax),this.vizDetails.colorRamp&&(this.guiConfig["color ramp"]=this.vizDetails.colorRamp),this.vizDetails.breakpoints&&(this.guiConfig["manual breaks"]=this.vizDetails.breakpoints)},setManualBreakpoints(){const t=this.guiConfig["manual breaks"].split(",").map(e=>Number.parseFloat(e.trim()));this.breakpoints=t,this.guiConfig.buckets=1+t.length},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),i=_.arrayBufferToBase64(e);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(t){console.error(t)}},async parseCSVFile(t){this.myState.statusMessage="Loading file...";let e=0;this.gzipWorker=new U,this.gzipWorker.onmessage=async i=>{if(i.data.status)this.myState.statusMessage=i.data.status;else if(i.data.error)this.myState.statusMessage=i.data.error,this.$store.commit("setStatus",{type:l.ERROR,msg:"XYT Loading Error",desc:`Error loading: ${this.myState.subfolder}/${this.vizDetails.file}`});else if(i.data.finished)this.finishedLoadingData(e,i.data);else if(i.data.needCRS){this.gzipWorker&&this.gzipWorker.terminate();let s=prompt(""+this.$t("promptCRS"))||"EPSG:25833";Number.isFinite(parseInt(s))&&(s=`EPSG:${s}`),this.vizDetails.projection=s.toUpperCase(),this.parseCSVFile(t)}else{const s=i.data.time.length;e||this.setFirstZoom(i.data.coordinates,s),e+=s,this.timeRange=[Math.min(this.timeRange[0],i.data.time[0]),Math.max(this.timeRange[1],i.data.time[s-1])],this.pointLayers.push(i.data)}},this.gzipWorker.postMessage({filepath:t,fileSystem:this.fileSystem,projection:this.vizDetails.projection})},setFirstZoom(t,e){const i=.5*(t[0]+t[e*2-2]),s=.5*(t[1]+t[e*2-1]);Number.isFinite(i)&&Number.isFinite(s)&&m.commit("setMapCamera",Object.assign({},m.state.viewState,{longitude:i,latitude:s,zoom:10}))},finishedLoadingData(t,e){console.log("ALL DONE",{totalRows:t,data:e.range,time:this.timeRange}),this.myState.statusMessage="",this.timeFilter=[this.timeRange[0],this.timeRange[0]+3599],this.isLoaded=!0,this.range=e.range,this.gzipWorker&&this.gzipWorker.terminate(),this.setColors(),this.moveLogo()},animate(){if(!this.isAnimating)return;this.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.startTime);const t=this.animationElapsedTime+this.timeRange[0];t>this.timeRange[1]&&(this.startTime=Date.now(),this.animationElapsedTime=0);const e=this.timeFilter[1]-this.timeFilter[0];this.timeFilter=[t,t+e],this.animator=window.requestAnimationFrame(this.animate)},toggleAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.animationElapsedTime=this.timeFilter[0]-this.timeRange[0],this.startTime=Date.now()-this.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},setColors(){const t=this.guiConfig.exponent;let e=x({colormap:this.guiConfig["color ramp"],nshades:256,format:"rba",alpha:1}).map(o=>[o[0],o[1],o[2]]);this.guiConfig.flip&&(e=e.reverse());const i=256/(this.guiConfig.buckets-1),s=[];for(let o=0;o<this.guiConfig.buckets-1;o++)s.push(e[Math.round(i*o)]);s.push(e[255]),this.colors=s;const n=Math.pow(this.range[1],1/t)*this.guiConfig["clip max"]/100;if(this.guiConfig["manual breaks"])this.setManualBreakpoints();else if(!this.vizDetails.breakpoints){const o=[];for(let h=1;h<this.guiConfig.buckets;h++){const d=n*h/this.guiConfig.buckets,g=Math.pow(d,t);o.push(g)}this.breakpoints=o}this.isLoaded&&this.setLegend(s,this.breakpoints)},setLegend(t,e){this.range[1]-this.range[0]!==0&&(this.legendStore=new P,this.legendStore.setLegendSection({section:"Legend",column:"Legend",values:t.map((i,s)=>{const r=e[s==0?s:s-1];let n=""+Math.round(1e6*r)/1e6;return s==0&&(n="< "+n),s==t.length-1&&(n="> "+n),{label:n,value:i}})}))},async loadFiles(){await this.fileApi.getChromePermission(this.fileSystem.handle);try{let t=`${this.myState.subfolder}/${this.vizDetails.file}`;await this.parseCSVFile(t),this.$emit("isLoaded")}catch(t){console.error(t),this.myState.statusMessage=""+t,this.$store.commit("setStatus",{type:l.ERROR,msg:"Loading/Parsing Error",desc:"Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}"})}},convertSecondsToClockTimeMinutes(t){const e=Math.floor(t/3600),i=Math.floor((t-e*3600)/60),s=t-e*3600-i*60,r={h:`${e}`,m:`${i}`.padStart(2,"0"),s:`${s}`.padStart(2,"0")};return`${r.h}:${r.m}`}}});var J=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"viz-plugin",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false",id:`id-${t.viewId}`}},[t.thumbnail?t._e():i("xy-time-deck-map",{staticClass:"map-layer",attrs:{viewId:t.viewId,pointLayers:t.pointLayers,timeFilter:t.timeFilter,dark:this.$store.state.isDarkMode,colors:this.colors,breakpoints:this.breakpoints,radius:this.guiConfig.radius,mapIsIndependent:!1}}),t.thumbnail?t._e():i("zoom-buttons",{attrs:{corner:"bottom"}}),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),i("div",{staticClass:"bottom-right"},[t.legendStore?i("div",{staticClass:"legend-area"},[i("legend-box",{attrs:{legendStore:t.legendStore}})],1):t._e()]),t.isLoaded?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,activeTimeExtent:t.timeFilter,labels:t.timeLabels,isAnimating:t.isAnimating},on:{timeExtent:t.handleTimeSliderValues,toggleAnimation:t.toggleAnimation,drag:function(s){t.isAnimating=!1}}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e()],1)},Q=[];const v={};var tt=T(K,J,Q,!1,et,"64e7f868",null,null);function et(t){for(let e in v)this[e]=v[e]}var kt=function(){return tt.exports}();export{kt as default};
//# sourceMappingURL=XyTime.d2553216.js.map
