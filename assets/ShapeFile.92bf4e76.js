import{b as Ct,r as I,g as $,h as F,R as Z,M as Dt,d as U,m as wt,C as Q,n as B,D as tt,S as Ft,j as Lt}from"./index.1d7144b8.js";import{r as St}from"./index.a906c0e7.js";import{l as $t,C as et}from"./Coords.820cd7bc.js";import{r as xt}from"./index.028cf17b.js";import{c as st}from"./turf.es.943b3175.js";import{b as it}from"./index.d10190c4.js";import{D as Mt,S as kt}from"./deckgl.8395df4c.js";import"./layer.0cd20467.js";import{O as Nt}from"./LineOffsetLayer.89fca247.js";import{P as _t}from"./PathOffsetLayer.49496748.js";import{G as jt,D as It}from"./DrawingTool.dcd0790f.js";import{r as at}from"./cubehelix.15b78c18.js";import{D as zt}from"./data-filter-extension.4c0d9778.js";import{C as x}from"./ColorsAndWidths.b0ff51a4.js";import{V as Et}from"./VizConfigurator.ac3cf377.js";import{Z as Ot}from"./ZoomButtons.6b3cc4d8.js";import{H as Tt}from"./HTTPFileSystem.33aea9ff.js";import{D as Pt,c as Jt,g as At}from"./DashboardDataManager.6cb84912.js";import{a as Vt}from"./util.5fe75924.js";import{L as Wt}from"./LegendStore.64d2f56a.js";import{m as Rt}from"./min.4e1438e9.js";import{s as Ut}from"./sum.da638719.js";import"./extends.946277fc.js";import"./line-layer.ca4a1987.js";import"./path-layer.4a6bc071.js";import"./text-layer.c8c59efd.js";import"./layer-extension.7ccbe2ef.js";import"./threshold.d4cae24d.js";import"./index.5877f313.js";import"./rainbow.d98e4227.js";import"./index.39efad9c.js";import"./LegendBox.9918cd96.js";import"./RoadNetworkLoader.worker.655695af.js";function Bt(t){if(!(o=t.length))return[];for(var e=-1,i=Rt(t,Ht),s=new Array(i);++e<i;)for(var a=-1,o,n=s[e]=new Array(o);++a<o;)n[a]=t[a][e];return s}function Ht(t){return t.length}function Gt(){return Bt(arguments)}var W=Ct($t),H=W.hasOwnProperty("default")?W.default:W;function qt(t){return t.length>=2&&typeof t[0]=="number"&&typeof t[1]=="number"}function z(t,e){return qt(t)?e(t):t.map(function(i){return z(i,e)})}function Kt(t){if(t==null||typeof t!="object")return t;var e=t.constructor();for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);return e}function E(t,e,i){if(i==null)return i;var s=Kt(i),a=E.bind(this,t,e);switch(i.type){case"Feature":s.geometry=a(i.geometry);break;case"FeatureCollection":s.features=s.features.map(a);break;case"GeometryCollection":s.geometries=s.geometries.map(a);break;default:t(s);break}return e&&e(s),s}function ut(t,e){var i=t.crs,s;if(i===void 0)throw new Error('Unable to detect CRS, GeoJSON has no "crs" property.');if(i.type==="name"?s=e[i.properties.name]:i.type==="EPSG"&&(s=e["EPSG:"+i.properties.code]),!s)throw new Error("CRS defined in crs section could not be identified: "+JSON.stringify(i));return s}function ot(t,e){return typeof t=="string"||t instanceof String?e[t]||H.Proj(t):t}function Yt(t){var e=[Number.MAX_VALUE,Number.MAX_VALUE],i=[-Number.MAX_VALUE,-Number.MAX_VALUE];return E(function(s){z(s.coordinates,function(a){e[0]=Math.min(e[0],a[0]),e[1]=Math.min(e[1],a[1]),i[0]=Math.max(i[0],a[0]),i[1]=Math.max(i[1],a[1])})},null,t),[e[0],e[1],i[0],i[1]]}function nt(t,e,i,s){s=s||{},e?e=ot(e,s):e=ut(t,s),i=ot(i,s);var a=H(e,i).forward.bind(a);function o(l){var c=a(l);return l.length===3&&l[2]!==void 0&&c[2]===void 0&&(c[2]=l[2]),c}var n=function(l){l.crs&&delete l.crs,l.coordinates=z(l.coordinates,o)},r=function(l){l.bbox&&(l.bbox=Yt(l))};return E(n,r,t)}var Xt={detectCrs:ut,reproject:nt,reverse:function(t){return E(function(e){e.coordinates=z(e.coordinates,function(i){return[i[1],i[0]]})},null,t)},toWgs84:function(t,e,i){return nt(t,e,H.WGS84,i)}};function Zt(t){return t>=55296&&t<=56319}function Qt(t){return t>=56320&&t<=57343}var te=function(e,i,s){if(typeof i!="string")throw new Error("Input must be string");for(var a=i.length,o=0,n,r,l=0;l<a;l+=1){if(n=i.charCodeAt(l),r=i[l],Zt(n)&&Qt(i.charCodeAt(l+1))&&(l+=1,r+=i[l]),o+=e(r),o===s)return i.slice(0,l+1);if(o>s)return i.slice(0,l-r.length+1)}return i};function ee(t){return t>=55296&&t<=56319}function se(t){return t>=56320&&t<=57343}var ie=function(e){if(typeof e!="string")throw new Error("Input must be string");for(var i=e.length,s=0,a=null,o=null,n=0;n<i;n++)a=e.charCodeAt(n),se(a)?o!=null&&ee(o)?s+=1:s+=3:a<=127?s+=1:a>=128&&a<=2047?s+=2:a>=2048&&a<=65535&&(s+=3),o=a;return s},ae=te,oe=ie,ne=ae.bind(null,oe),re=ne,le=/[\/\?<>\\:\*\|"]/g,de=/[\x00-\x1f\x80-\x9f]/g,ce=/^\.+$/,ue=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,he=/[\. ]+$/;function rt(t,e){if(typeof t!="string")throw new Error("Input must be string");var i=t.replace(le,e).replace(de,e).replace(ce,e).replace(ue,e).replace(he,e);return re(i,255)}var fe=function(t,e){var i=e&&e.replacement||"",s=rt(t,i);return i===""?s:rt(s,"")};function me(t,e){const{transitions:i,updateTriggers:s}=t.props,a={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const o in e){const n=e[o];let r=t.props[o];o.startsWith("get")&&(r=t.getSubLayerAccessor(r),a.updateTriggers[n]=s[o],i&&(a.transitions[n]=i[o])),a[n]=r}return a}const pe={NONE:0,LEFT:1,RIGHT:2},R={type:_t,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}};class G extends jt{constructor(e){super(e)}_renderLineLayers(){const{extruded:e,stroked:i}=this.props,{layerProps:s}=this.state,a="polygons-stroke",o="linestrings",n=!e&&i&&this.shouldRenderSubLayer(a,s.polygonsOutline.data)&&this.getSubLayerClass(a,R.type),r=this.shouldRenderSubLayer(o,s.lines.data)&&this.getSubLayerClass(o,R.type);if(n||r){const l=me(this,R.props);return[n&&new n(l,this.getSubLayerProps({id:a,updateTriggers:l.updateTriggers}),s.polygonsOutline),r&&new r(l,this.getSubLayerProps({id:o,updateTriggers:l.updateTriggers}),s.lines)]}return null}getShaders(){return{...super.getShaders(),inject:{"vs:#decl":`
            attribute float instanceOffset;
            varying float offset;
            `,"vs:#main-start":`
            offset = instanceOffset;
            `,"fs:#decl":`
            varying float offset;
            `,"fs:#main-start":`
            if (offset == 1.0 && vPathPosition.x < 0.0) {
                discard;
            }
            if (offset == 2.0 && vPathPosition.x > 0.0) {
                discard;
            }
            if (offset == 0.0 && abs(vPathPosition.x) > 0.5) {
                discard;
            }
        `}}}}G.layerName="GeojsonOffsetLayer";G.defaultProps={getOffset:{type:"accessor",value:pe.RIGHT}};async function ge(t,e){const i=t.context.deck.canvas.toDataURL("image/png"),s=e==null?void 0:e.toDataURL("image/png"),a=[];s&&a.push(s),a.push(i);const o=await ye({width:t.context.deck.canvas.width,height:t.context.deck.canvas.height,imageDataURLs:a});var n=document.createElement("a");n.setAttribute("href",o),n.setAttribute("download","screenshot.png"),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function ye(t){return new Promise((e,i)=>{var s=document.createElement("canvas");s.width=t.width,s.height=t.height,Promise.all(t.imageDataURLs.map(a=>be(s,a))).then(()=>{const a=s.getContext("2d"),o=s.width-152,n=s.height-8;a.beginPath(),a.rect(o-4,n-14,158,22),a.fillStyle="#ffffff44",a.fill(),a.font="11px Arial",a.fillStyle="#888",a.fillText("\xA9 Mapbox  \xA9 OpenStreetMap",o,n),e(s.toDataURL("image/png"))})})}function be(t,e){return new Promise((i,s)=>{t||s(),e||s();var a=new Image;a.onload=function(){t.getContext("2d").drawImage(this,0,0),i(!0)},a.src=e})}var ve={savePNG:ge};function Ce({viewId:t=0,fillColors:e="#59a14f",lineColors:i="#4e79a7",lineWidths:s=0,fillHeights:a=0,calculatedValues:o=null,calculatedValueLabel:n="",normalizedValues:r=null,opacity:l=1,pointRadii:c=4,screenshot:d=0,featureDataTable:u={},featureFilter:g=new Float32Array(0),tooltip:f=[],cbTooltip:m={}}){const[v,L]=I.exports.useState([]),[y,C]=I.exports.useState($.state.viewState),[N,ht]=I.exports.useState(d),O=I.exports.useRef();F[t]=()=>{C($.state.viewState)},F[1e3+t]=h=>{const p=h.map(b=>{const M={type:""+b.type,geometry:JSON.parse(JSON.stringify(b.geometry)),properties:JSON.parse(JSON.stringify((b==null?void 0:b.properties)||{}))};return"id"in b&&(M.id=""+b.id),M});L(p)};let ft=d>N,T;if(typeof e=="string"){const h=at(e);T=[h.r,h.g,h.b]}else T=(h,p)=>[e[p.index*3+0],e[p.index*3+1],e[p.index*3+2],255];const q=!!i;let _;if(typeof i=="string"){const h=at(i);_=[h.r,h.g,h.b],q||_.push(0)}else _=(h,p)=>v[p.index].properties._hide?[0,0,0,0]:[i[p.index*3+0],i[p.index*3+1],i[p.index*3+2],255];let P;typeof s=="number"?P=s:P=(h,p)=>s[p.index];let J;typeof c=="number"?J=c:J=(h,p)=>c[p.index];let A;typeof a=="number"?A=a:A=(h,p)=>a[p.index];function mt(h){!h.latitude||(h.center=[h.longitude,h.latitude],C(h),$.commit("setMapCamera",h))}function pt(){console.log("click!")}function j({value:h,precision:p}){if(typeof h!="number")return h;let b=""+h;return b.includes(".")&&b.indexOf(".")===b.lastIndexOf(".")&&/\d$/.test(b)?b.substring(0,1+4+b.lastIndexOf(".")):h}function gt({object:h,index:p}){var X;if(!m)return null;if(h===null||!((X=v[p])!=null&&X.properties))return m(null),null;const b=[];if(r){const w=n!=null?n:"Normalized Value";let S=j({value:r[p],precision:4});b.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${S}</b></td></tr>`)}if(o){let w=n!=null?n:"Value";const S=r?w.substring(0,w.lastIndexOf("/")):w;let k=j({value:o[p],precision:4});n.startsWith("%")&&(k=`${k} %`),b.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${S}</td><td><b>${k}</b></td></tr>
         <tr><td>&nbsp;</td></tr>`)}let M="";const bt=Object.entries(v[p].properties);for(const[w,S]of bt){if(S===null)continue;let k=j({value:S,precision:4});M+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${k}</b></td></tr>`}M&&b.push(M);let Y=Object.keys(u);f&&f.length&&(Y=f.map(w=>w.substring(w.indexOf(".")+1)));let V="";if(Y.forEach(w=>{if(u[w]){let S=u[w].values[p];if(S==null)return;typeof S=="number"&&(S=j({value:S,precision:4})),V+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${S}</b></td></tr>`}}),V&&b.push(V),!b.length){m(null);return}const vt=`<table>${b.join("")}</table>`;return m(vt),null}const yt=new G({id:"geoJsonOffsetLayer",data:v,getLineWidth:P,getLineColor:_,getFillColor:T,getPointRadius:J,getElevation:A,autoHighlight:!0,extruded:!!a,highlightColor:[255,0,224],lineWidthUnits:"pixels",lineWidthScale:1,lineWidthMinPixels:typeof s=="number"?0:1,lineWidthMaxPixels:50,getOffset:Nt.RIGHT,opacity:a?1:.8,pickable:!0,pointRadiusUnits:"pixels",pointRadiusMinPixels:2,stroked:q,useDevicePixels:ft,fp64:!1,updateTriggers:{getFillColor:e,getLineColor:i,getLineWidth:s,getPointRadius:c,getElevation:a,getFilterValue:g},transitions:{getFillColor:300,getLineColor:300,getLineWidth:300,getPointRadius:300},parameters:{depthTest:!!a,fp64:!1},glOptions:{preserveDrawingBuffer:!0,fp64:!1},extensions:[new zt({filterSize:1})],filterRange:[0,1],getFilterValue:(h,p)=>g[p.index]}),K=Z.createElement(Mt,{layers:[yt],viewState:y,controller:!0,pickingRadius:4,getTooltip:gt,onClick:pt,onViewStateChange:h=>mt(h.viewState),getCursor:({isDragging:h,isHovering:p})=>h?"grabbing":p?"pointer":"grab",onAfterRender:async()=>{var h;d>N&&(await ve.savePNG(K.props.layers[0],(h=O==null?void 0:O.current)==null?void 0:h.getMap()._canvas),ht(d))}},Z.createElement(kt,{mapStyle:$.getters.mapStyle,mapboxApiAccessToken:Dt}));return K}const De=U({name:"BackgroundMapOnTop",components:{},data:()=>({containerId:`c${Math.floor(1e12*Math.random())}`,globalState:$.state,isDarkMode:!1,isMapMoving:!1,mapId:`map-${Math.floor(1e12*Math.random())}`,mymap:{},resizer:null}),computed:{},methods:{setupResizer(){this.resizer=new ResizeObserver(()=>{this.mymap.resize()});const t=document.getElementById(this.containerId);this.resizer.observe(t)},handleMapMotion(){const t={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.$store.commit("setMapCamera",t),this.isMapMoving||(this.isMapMoving=!0)},async setupMap(){const t=$.state.mapStyles;try{this.mymap=new wt.Map({container:this.mapId,style:this.isDarkMode?t.transparentDark:t.transparentLight,logoPosition:"top-left"});const e={...this.globalState.viewState};this.mymap.jumpTo(e)}catch(e){console.error("HUH?"+e);return}this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion);{let e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact");for(const i of e)i.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-group");for(const i of e)i.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const i of e)i.setAttribute("style","display: none")}},async mapIsReady(){this.setupResizer()},viewMoved(t){if(!this.mymap||this.isMapMoving){this.isMapMoving=!1;return}const{bearing:e,longitude:i,latitude:s,zoom:a,pitch:o}=t;!a||(this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:e,zoom:a,center:[i,s],pitch:o}),this.mymap.on("move",this.handleMapMotion))}},watch:{"$store.state.viewState"(t){this.viewMoved(t)},"$store.state.colorScheme"(){if(this.isDarkMode=this.$store.state.colorScheme===Q.DarkMode,!this.mymap)return;const t=$.state.mapStyles;this.mymap.setStyle(this.isDarkMode?t.transparentDark:t.transparentLight),this.mymap.on("style.load",()=>{})},"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()}},async mounted(){this.isDarkMode=this.$store.state.colorScheme===Q.DarkMode,this.setupMap()}});var we=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"mymaplibre-map",attrs:{id:t.containerId}},[i("div",{staticClass:"mymap",attrs:{id:t.mapId}})])},Fe=[];const lt={};var Le=B(De,we,Fe,!1,Se,"234c4d38",null,null);function Se(t){for(let e in lt)this[e]=lt[e]}var $e=function(){return Le.exports}();const xe={messages:{en:{},de:{}}},Me=["id","ID","TAZ","AB"];var ke=U({name:"ModalJoinColumnPicker",i18n:xe,props:{data1:{type:Object,required:!0}},data(){return{selected1:0}},computed:{columns(){return[...this.data1.columns].sort()}},methods:{clickedJoin(){this.$emit("join",this.columns[this.selected1])},clickedCancel(){this.$emit("join","")}},mounted(){for(const t of Me){const e=this.columns.indexOf(t);if(e>-1){this.selected1=e;break}}}}),Ne=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"join-picker"},[i("div",{staticClass:"picker-panel"},[t._m(0),i("p",{staticClass:"subheader"},[t._v("Which property contains the unique ID for each feature?")]),i("div",{staticClass:"split-panel"},[i("div",{staticClass:"column"},[i("p",[i("b",[t._v(t._s(t.data1.title))])]),i("div",{staticClass:"options-box"},t._l(t.columns,function(s,a){return i("p",{key:"@"+a,class:{selected:a===t.selected1},on:{click:function(o){t.selected1=a}}},[t._v(t._s(s))])}),0)])]),i("div",{staticClass:"buttons"},[i("div",{staticClass:"button-holder"},[i("button",{staticClass:"button",on:{click:t.clickedCancel}},[t._v("Cancel")]),i("button",{staticClass:"button is-primary",on:{click:t.clickedJoin}},[t._v("Select")])])])])])},_e=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("p",{staticClass:"header"},[i("b",[t._v("Select ID Column")])])}];const dt={};var je=B(ke,Ne,_e,!1,Ie,"37da10e6",null,null);function Ie(t){for(let e in dt)this[e]=dt[e]}var ze=function(){return je.exports}();const Ee=U({name:"ShapeFilePlugin",components:{BackgroundMapOnTop:$e,GeojsonLayer:Ce,ModalIdColumnPicker:ze,VizConfigurator:Et,ZoomButtons:Ot,DrawingTool:It},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},datamanager:{type:Object},configFromDashboard:{type:Object},yamlConfig:String,thumbnail:Boolean},data(){return{boundaries:[],centroids:[],cbDatasetJoined:void 0,legendStore:new Wt,chosenNewFilterColumn:"",boundaryDataTable:{},dataFillColors:"#888",dataLineColors:"",dataLineWidths:1,dataPointRadii:5,dataFillHeights:0,dataCalculatedValues:null,dataNormalizedValues:null,constantLineWidth:null,dataCalculatedValueLabel:"",globalStore:$,globalState:$.state,layerId:Math.floor(1e12*Math.random()),activeColumn:"",useCircles:!1,sliderOpacity:100,maxValue:1e3,expColors:!1,isLoaded:!1,isAreaMode:!0,statusText:"Loading...",filters:{},needsInitialMapExtent:!0,datasetJoinColumn:"",featureJoinColumn:"",triggerScreenshot:0,datasetKeyToFilename:{},datasetJoinSelector:{},showJoiner:!1,myDataManager:this.datamanager||new Pt(this.root,this.subfolder),config:{},currentUIFilterDefinitions:{},currentUIFillColorDefinitions:{},currentUILineColorDefinitions:{},filterDefinitions:[],isEmbedded:!1,resizer:null,boundaryFilters:new Float32Array(0),thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",boundaryJoinLookups:{},datasetValuesColumn:"",tooltipHtml:"",vizDetails:{title:"",description:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",widthFactor:null,thumbnail:"",sum:!1,filters:[],shapes:"",zoom:null,center:null,pitch:null,bearing:null,display:{fill:{},fillHeight:{},color:{},width:{},lineColor:{},lineWidth:{},radius:{}},tooltip:[]},datasets:{}}},computed:{fileApi(){return new Tt(this.fileSystem,$)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]},configuratorSections(){return this.isAreaMode?["fill-color","fill-height","line-color","line-width","circle-radius","filters"]:["line-color","line-width","filters"]},datasetChoices(){return Object.keys(this.datasets)},generatedExportFilename(){var e;let t=fe((e=this.yamlConfig)!=null?e:"");return t=t.replaceAll(" ","-"),t.startsWith("viz-map-")||(t="viz-map-"+t),!t.endsWith(".yml")&&!t.endsWith(".yaml")&&(t=t+".yaml"),t},urlThumbnail(){return this.thumbnailUrl}},watch:{"globalState.viewState"(){!F[this.layerId]||F[this.layerId]()}},methods:{takeScreenshot(){this.triggerScreenshot++},setEmbeddedMode(){"embed"in this.$route.query&&(console.log("EMBEDDED MODE"),this.isEmbedded=!0,this.$store.commit("setShowLeftBar",!1),this.$store.commit("setFullWidth",!0))},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`container-${this.layerId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`container-${this.layerId}`),e=t==null?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const i=t.clientWidth>640?"280px":"36px";e.style.right=i}},columnsInDataset(t){const e=this.datasets[t];return Object.keys(e)},filterShapesNow(){const t=this.filterDefinitions.filter(i=>i.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!t.length)return;const e=/^(<|>)/;for(const i of t){let s=i.value,a="";if(s=="@categorical")a="@categorical",s="";else if(e.test(s))s.startsWith("<=")?(a="<=",s=parseFloat(s.substring(2).trim())):s.startsWith(">=")?(a=">=",s=parseFloat(s.substring(2).trim())):s.startsWith("<")?(a="<",s=parseFloat(s.substring(1).trim())):s.startsWith(">")&&(a=">",s=parseFloat(s.substring(1).trim()));else if(typeof s=="string")if(s.indexOf(",")>-1)s=s.split(",").map(r=>r.trim()).map(r=>Number.isNaN(parseFloat(r))?r:parseFloat(r));else{const r=parseFloat(s);Number.isNaN(r)||(s=r)}Array.isArray(s)||(s=[s]);const o={conditional:a,invert:i.invert||!1,values:s},n=this.boundaryDataTable[i.column].values;for(let r=0;r<this.boundaries.length;r++)Jt(o,n[r])||(this.boundaryFilters[r]=-1)}},cbTooltip(t){this.tooltipHtml=t},filterShapesNowOriginal(){const t=this.filterDefinitions.filter(e=>e.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!!t.length)for(let e=0;e<this.boundaries.length;e++)for(const i of t)!this.checkIsFiltered(e,i)&&(this.boundaryFilters[e]=-1)},checkIsFiltered(t,e){const s=(e.dataset=="shapes"?this.boundaryDataTable:this.datasets[e.dataset])[e.column].values[t];let a=!1,o=e.value;return typeof o=="string"&&o.indexOf(",")>-1&&(o=o.split(",").map(n=>n.trim()).map(n=>isNaN(parseFloat(n))?n:parseFloat(n))),Array.isArray(o)?a=o.indexOf(s)>-1:a=o==s,e.invert&&(a=!a),a},parseFilterDefinitions(t){if(!t)return[];const e=[];let i;Array.isArray(t)?i=t.map(s=>Object.entries(s)[0]):i=Object.entries(t);for(const s of i){const[a,o]=s,[n,r]=a.split("."),l={dataset:n,value:o,column:r.endsWith("!")?r.substring(0,r.length-1):r,invert:r.endsWith("!")};e.push(l)}return e},honorQueryParameters(){this.$route.query.show=="dots"&&(this.useCircles=!0)},setupQueryFilters(){const t=Object.keys(this.datasets);if(t.length!==2)return;const e=t[1],i=this.datasets[e],s=Object.keys(i),a=Object.keys(this.$route.query).filter(o=>s.indexOf(o)>-1);for(const o of a){this.filters[o]||(console.log("CREATING category filter:",o),this.handleUserCreatedNewFilter(`${e}:${o}`));const n=""+this.$route.query[o];n&&(this.filters[o].active=n.split(",")),this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[e],column:o,value:this.filters[o].active}),this.activateFiltersForDataset(e)}},convertCommasToArray(t){return t===void 0?[]:(Array.isArray(t)||(t.indexOf(",")>-1?t=t.split(",").map(e=>e.trim()):t=[t.trim()]),t)},async getVizDetails(){var i;const t={datasets:{},display:{fill:{}}};if(this.configFromDashboard)this.config=JSON.parse(JSON.stringify(this.configFromDashboard)),this.vizDetails=Object.assign({},t,this.configFromDashboard);else{const s=((i=this.yamlConfig)!=null?i:"").toLocaleLowerCase();if((s==null?void 0:s.endsWith("yaml"))||(s==null?void 0:s.endsWith("yml"))){const a=await this.loadYamlConfig();this.config=a,this.vizDetails=Object.assign({},t,a)}if(/(\.geojson)(|\.gz)$/.test(s)||/\.shp$/.test(s)){const a=`${s.endsWith("shp")?"Shapefile":"GeoJSON"}: ${this.yamlConfig}`;this.vizDetails=Object.assign({},t,this.vizDetails,{title:a,description:this.subfolder,shapes:this.yamlConfig}),this.config=JSON.parse(JSON.stringify(this.vizDetails))}}const e=this.vizDetails.title||"Map";this.$emit("title",e)},buildOldJoinLookups(){const t={};for(const e of Object.keys(this.vizDetails.datasets||[])){const i=this.vizDetails.datasets[e].join;if(!i)continue;const s=i.indexOf(":");if(t[e]=i.substring(s+1),typeof this.vizDetails.shapes=="string"){const a=s>-1?i.substring(0,s):i;this.vizDetails.shapes={file:this.vizDetails.shapes,join:a}}}for(const e of Object.keys(this.vizDetails.display||[])){const s=this.vizDetails.display[e];(s.dataset||s.diff)&&!s.join&&(s.join=t[s.dataset])}},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await this.fileApi.getFileBlob(this.subfolder+"/"+this.vizDetails.thumbnail),e=await St.arraybuffer(t),i=Vt(e);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(t){console.error(t)}},getFileSystem(t){const e=this.$store.state.svnProjects.filter(i=>i.slug===t);if(e.length===0)throw console.log("no such project"),Error;return e[0]},async loadYamlConfig(){var s;const t=(s=this.yamlConfig)!=null?s:"",e=t.indexOf("/")>-1?t:this.subfolder+"/"+t;try{const a=await this.fileApi.getFileText(e);return it.parse(a)}catch(a){const o=""+a;o.startsWith("YAMLSemantic")&&this.$store.commit("error",`${e}: ${o}`),console.log(`${e} not found, trying config folders`)}const{vizes:i}=await this.fileApi.findAllYamlConfigs(this.subfolder);if(i[t])try{const a=await this.fileApi.getFileText(i[t]);return it.parse(a)}catch{console.error(`Also failed to load ${i[t]}`)}this.$store.commit("error","Could not load YAML: "+e)},changeConfiguration(t){console.log("PROPS",t);try{t.fill&&(this.vizDetails.display.fill=t.fill,this.handleNewFillColor(t.fill)),t.fillHeight&&(this.vizDetails.display.fillHeight=t.fillHeight,this.handleNewFillHeight(t.fillHeight)),t.lineColor&&(this.vizDetails.display.lineColor=t.lineColor,this.handleNewLineColor(t.lineColor)),t.lineWidth&&(this.vizDetails.display.lineWidth=t.lineWidth,this.handleNewLineWidth(t.lineWidth),this.currentUILineColorDefinitions&&this.handleNewLineColor(this.currentUILineColorDefinitions)),t.radius&&(this.vizDetails.display.radius=t.radius,this.handleNewRadius(t.radius)),t.dataset&&this.handleNewDataset(t.dataset),t.filters&&this.handleNewFilters(t.filters)}catch(e){this.$store.commit("error",""+e)}},async handleNewDataset(t){const{key:e,dataTable:i,filename:s}=t,a=e,o=s||a;if(console.log("HANDLE NEW DATSET:",a,o),!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[a],dataTable:i}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[a]},this.processFiltersNow),this.vizDetails.datasets[a]={file:o},this.vizDetails=Object.assign({},this.vizDetails),this.datasets[a]=i,this.datasets=Object.assign({},this.datasets)},setupJoin(t){var c;const{dataTable:e,datasetId:i,dataJoinColumn:s}=t;if(!s||`@@${s}`in e)return;if(!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);if(!e[s])throw Error(`Dataset ${i} does not have column ${s}`);const a={type:tt.LOOKUP,values:[],name:`@@${s}`},o=e[s].values,n=this.getBoundaryOffsetLookup(this.featureJoinColumn),l=(this.vizDetails.tooltip||[]).filter(d=>d.substring(0,d.indexOf(".")).startsWith(i)).map(d=>({id:d,column:d.substring(1+d.indexOf("."))}));for(const d of l)e[d.column]||this.globalStore.commit("setStatus",{type:Ft.WARNING,msg:`Tooltip references "${d.id}" but that column doesn't exist`,desc:"Check the tooltip spec and column names"});for(let d=0;d<o.length;d++){const u=n[o[d]];a.values[d]=u;const g=this.boundaries[u];for(const f of l){if(!e[f.column])continue;const m=((c=e[f.column])==null?void 0:c.values[d])&&"";g&&m&&(g.properties[f.id]=m)}}F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries),e[`@@${s}`]=a,this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[i],dataTable:e}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[i]},this.processFiltersNow),this.vizDetails.datasets[i]={file:this.datasetKeyToFilename[i],join:this.featureJoinColumn===s?this.featureJoinColumn:`${this.featureJoinColumn}:${s}`},this.datasets[i]=e},getBoundaryOffsetLookup(t){if(this.boundaryJoinLookups[t])return this.boundaryJoinLookups[t];this.statusText="Joining datasets...",this.boundaryJoinLookups[t]={};const e=this.boundaryJoinLookups[t],i=this.boundaryDataTable[t].values;for(let s=0;s<this.boundaries.length;s++)e[i[s]]=s;return this.statusText="",e},removeAnyOldFilters(t){const e=new Set(Object.keys(this.currentUIFilterDefinitions).filter(s=>!s.startsWith("shapes.")));new Set(Object.keys(t).filter(s=>!s.startsWith("shapes."))).forEach(s=>e.delete(s));for(const s of e){console.log("REMOVING",s);const a=s.indexOf("."),o=s.slice(0,a),n=s.slice(a+1);if(this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[o],column:n,value:[]}),n in this.filters){const r=Object.assign({},this.$route.query);delete r[n],this.$router.replace({query:r}),delete this.filters[n]}}},handleNewFilters(t){this.removeAnyOldFilters(t),this.currentUIFilterDefinitions=t;const e=this.parseFilterDefinitions(t);this.filterDefinitions=e,this.filterShapesNow(),Object.keys(this.datasets).forEach((i,s)=>{s!==0&&this.activateFiltersForDataset(i)})},handleColorDiffMode(t,e){if(!e.diffDatasets)return;const i=e.columnName,s=e.join||"",a=e.diffDatasets[0]||"",o=this.datasets[a],n=e.diffDatasets[1]||"",r=this.datasets[n],l=!!e.relative;if(o&&r){this.setupJoin({datasetId:a,dataTable:o,dataJoinColumn:s}),this.setupJoin({datasetId:n,dataTable:r,dataJoinColumn:s});const c=o[`@@${s}`],d=r[`@@${s}`],u=o[i],g=r[i];if(!u)throw Error(`Dataset ${a} does not contain column "${i}"`);if(!g)throw Error(`Dataset ${n} does not contain column "${i}"`);let f,m;if(e.normalize){const[y,C]=e.normalize.split(":");if(!this.datasets[y]||!this.datasets[y][C])throw Error(`${y} does not contain column "${C}"`);this.dataCalculatedValueLabel+=`/ ${C}`,f=this.datasets[y][C],this.datasetChoices[0]!==y&&(this.setupJoin({datasetId:y,dataTable:this.datasets[y],dataJoinColumn:s}),m=this.datasets[y][`@@${C}`])}const{array:D,legend:v,calculatedValues:L}=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:u,data2:g,lookup:c,lookup2:d,normalize:f,normalLookup:m,options:e,filter:this.boundaryFilters,relative:l});if(!D)return;t==="fill"?this.dataFillColors=D:this.dataLineColors=D,this.dataCalculatedValues=L,this.dataCalculatedValueLabel=`${l?"% ":""}Diff: ${i}`,this.legendStore.setLegendSection({section:t==="fill"?"FillColor":"Line Color",column:u.name,values:v,diff:!0,relative:l,normalColumn:f?f.name:""})}},paintColorsWithFilter(t,e){const i=t==="fill"?this.currentUIFillColorDefinitions:this.currentUILineColorDefinitions,s=i.columnName,a=i.join==="@count"?e[`@@${s}`]:e[`@@${i.join}`];let o;if(i.normalize){const d=i.normalize.split(":");this.dataCalculatedValueLabel=s+"/"+d[1];const u=i.dataset;if(!this.datasets[d[0]]||!this.datasets[d[0]][d[1]])throw Error(`Dataset ${u} does not contain column "${s}"`);o=e[d[1]]}const n={numFeatures:this.boundaries.length,data:e[s],normalize:o,lookup:a,filter:this.boundaryFilters,options:i,join:i.join},{array:r,legend:l,calculatedValues:c}=x.getColorsForDataColumn(n);!r||(t==="fill"?this.dataFillColors=r:this.dataLineColors=r,this.dataCalculatedValues=c,this.legendStore.setLegendSection({section:t==="fill"?"FillColor":"Line Color",column:s,values:l}))},handleNewFillColor(t){const e="columnName"in t,i=!e;if(e){const o=t==null?void 0:t.dataset,{filteredRows:n}=this.myDataManager.getFilteredDataset({dataset:`${o}`||""});if(n&&n.length){this.currentUIFillColorDefinitions=t,this.processFiltersNow(o);return}}if(i){this.paintColorsWithFilter("fill",t);return}const s=t;this.currentUIFillColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("fill",s);return}else if(a){const o=s.dataset||"",n=this.datasets[o];if(this.dataCalculatedValueLabel="",!n){console.warn("color: no selected dataset yet, maybe still loading");return}const r=n[a];if(!r)throw Error(`Dataset ${o} does not contain column "${a}"`);this.dataCalculatedValueLabel=a!=null?a:"";let l="";s.join&&s.join!=="@count"?l=s.join:s.join==="@count"?l=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:l});const c=n[`@@${l}`];let d,u;if(s.normalize){const[v,L]=s.normalize.split(":");if(!this.datasets[v]||!this.datasets[v][L])throw Error(`${v} does not contain column "${L}"`);this.dataCalculatedValueLabel+=`/ ${L}`,d=this.datasets[v][L],this.datasetChoices[0]!==v&&(this.setupJoin({datasetId:v,dataTable:this.datasets[v],dataJoinColumn:l}),u=this.datasets[v][`@@${L}`])}const{array:g,legend:f,calculatedValues:m,normalizedValues:D}=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:r,normalize:d,normalLookup:u,lookup:c,filter:this.boundaryFilters,options:s,join:s.join});g&&(this.dataFillColors=g,this.dataCalculatedValues=m,this.dataNormalizedValues=D||null,this.legendStore.setLegendSection({section:"FillColor",column:r.name,values:f,normalColumn:d?d.name:""}))}else{this.dataFillColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("FillColor");return}},handleNewLineColor(t){if(t===!1){this.dataLineColors="",this.legendStore.clear("Line Color");return}const e="columnName"in t,i=!e;if(e){const o=t==null?void 0:t.dataset,{filteredRows:n}=this.myDataManager.getFilteredDataset({dataset:`${o}`||""});if(n&&n.length){this.currentUILineColorDefinitions=t,this.processFiltersNow(o);return}}if(i){this.paintColorsWithFilter("lineColor",t);return}const s=t;this.currentUILineColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("lineColor",s);return}else if(a){const o=s.dataset||"",n=this.datasets[o];if(this.dataCalculatedValueLabel="",!n){console.warn("color: no selected dataset yet, maybe still loading");return}const r=n[a];if(!r)throw Error(`Dataset ${o} does not contain column "${a}"`);this.dataCalculatedValueLabel=a!=null?a:"";let l="";s.join&&s.join!=="@count"?l=s.join:s.join==="@count"?l=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:l});const c=n[`@@${l}`];let d,u;if(s.normalize){const[y,C]=s.normalize.split(":");if(!this.datasets[y]||!this.datasets[y][C])throw Error(`${y} does not contain column "${C}"`);this.dataCalculatedValueLabel+=`/ ${C}`,d=this.datasets[y][C],this.datasetChoices[0]!==y&&(this.setupJoin({datasetId:y,dataTable:this.datasets[y],dataJoinColumn:l}),u=this.datasets[y][`@@${C}`])}const g=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:r,normalize:d,normalLookup:u,lookup:c,filter:this.boundaryFilters,options:s,join:s.join}),{array:f,legend:m,calculatedValues:D,normalizedValues:v,hasCategory:L}=g;if(!f)return;if(this.dataLineColors=f,this.dataCalculatedValues=D,this.dataNormalizedValues=v||null,L&&this.constantLineWidth!==null){const y=this.constantLineWidth,C=new Float32Array(this.boundaries.length).fill(1);Object.keys(L).forEach(N=>{C[N]=y}),this.dataLineWidths=C}this.legendStore.setLegendSection({section:"Line Color",column:r.name,values:m,normalColumn:d?d.name:""})}else{this.dataLineColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("Line Color");return}},handleNewLineWidth(t){const e=t.columnName||"";if(t.dataset&&/^@\d$/.test(t.dataset)){this.dataLineWidths=Number.parseInt(t.dataset.substring(1)),this.constantLineWidth=this.dataLineWidths,this.legendStore.clear("Line Width");return}else this.constantLineWidth=null;if(t.scaleFactor&&isNaN(t.scaleFactor)){this.dataLineWidths=1,this.legendStore.clear("Line Width");return}if(t.diffDatasets){const i=t.join||"",s=t.diffDatasets[0]||"",a=this.datasets[s],o=t.diffDatasets[1]||"",n=this.datasets[o];if(a&&n){this.setupJoin({datasetId:s,dataTable:a,dataJoinColumn:i}),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:i});const r=a[`@@${i}`],l=n[`@@${i}`],c=a[e],d=n[e];if(!c)throw Error(`Dataset ${s} does not contain column "${e}"`);if(!d)throw Error(`Dataset ${o} does not contain column "${e}"`);const{array:u,legend:g,calculatedValues:f}=x.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:c,data2:d,lookup:r,lookup2:l,options:t});this.dataLineWidths=u||0,this.dataCalculatedValues=f,this.dataCalculatedValueLabel="Diff: "+e,this.legendStore.setLegendSection({section:"Line Width",column:`${c.name} (Diff)`,values:g})}}else if(e){const i=t.dataset||"",s=this.datasets[i];if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&t.join!=="@count"?o=t.join:t.join==="@count"?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{array:r,legend:l,calculatedValues:c}=x.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:a,lookup:n,join:t.join,options:t});this.dataLineWidths=r||0,this.dataCalculatedValues=c,this.dataCalculatedValueLabel=e,l.length?this.legendStore.setLegendSection({section:"Line Width",column:a.name,values:l}):this.legendStore.clear("Line Width")}}else this.dataLineWidths=1,this.dataCalculatedValueLabel="",this.legendStore.clear("Line Width")},handleNewFillHeight(t){const e=t.columnName;if(e){const i=t.dataset||"",s=this.datasets[i];if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&t.join!=="@count"?o=t.join:t.join==="@count"?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`];let r;if(t.normalize){const u=t.normalize.split(":");if(!this.datasets[u[0]]||!this.datasets[u[0]][u[1]])throw Error(`Dataset ${i} does not contain column "${e}"`);r=this.datasets[u[0]][u[1]],this.dataCalculatedValueLabel=e+"/"+u[1]}const{heights:l,calculatedValues:c,normalizedValues:d}=x.getHeightsBasedOnNumericValues({length:this.boundaries.length,data:a,lookup:n,options:t,normalize:r,join:t.join});if(this.dataFillHeights=l,this.dataCalculatedValues=c,this.dataNormalizedValues=d||null,this.$store.state.viewState.pitch==0){const u=Object.assign({},this.$store.state.viewState,{pitch:30});this.$store.commit("setMapCamera",u)}}}else this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""},handleNewRadius(t){const e=t.columnName;if(e){const i=t.dataset||"",s=this.datasets[i];if(!s){console.warn("radius: no selected dataset yet, maybe still loading");return}if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&t.join!=="@count"?o=t.join:t.join==="@count"?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{radius:r,calculatedValues:l}=x.getRadiusForDataColumn({length:this.boundaries.length,data:a,lookup:n,join:o,options:t});this.dataPointRadii=r,this.dataCalculatedValues=l,this.dataCalculatedValueLabel=a.name}}else this.dataPointRadii=5;F[1e3+this.layerId]&&F[1e3+this.layerId](typeof this.dataPointRadii=="number"?this.boundaries:this.centroids)},async handleMapClick(t){try{const{x:e,y:i,data:s}=t.points[0],a=this.config.groupBy,o=e}catch(e){console.error(e)}},async figureOutFeatureIdColumn(){if(this.featureJoinColumn)return this.featureJoinColumn;if(typeof this.vizDetails.shapes!="string"&&this.vizDetails.shapes.join)return this.vizDetails.shapes.join;const t=this.datasets[Object.keys(this.datasets)[0]],e=Object.keys(t);if(e.length===1)return e[0];const i=await new Promise((s,a)=>{const o=new Set;this.boundaries[0].id&&o.add("id"),Object.keys(t).forEach(n=>o.add(n)),this.datasetJoinSelector={data1:{title:"Properties",columns:Array.from(o)}},this.showJoiner=!0,this.cbDatasetJoined=n=>{this.datasetJoinSelector={},this.showJoiner=!1,s(n)}});return i.length?i:"id"},async processFiltersNow(t){var s,a;console.log("> processFiltersNow",t);const{filteredRows:e}=this.myDataManager.getFilteredDataset({dataset:t||""}),i={};e&&(e.length>0?Object.keys(e[0]):[]).forEach(n=>{const r={name:n,values:[],type:tt.UNKNOWN};for(const l of e)r.values.push(l[n]);i[n]=r}),(s=this.currentUIFillColorDefinitions)!=null&&s.dataset&&this.handleNewFillColor(e?i:this.currentUIFillColorDefinitions),(a=this.currentUILineColorDefinitions)!=null&&a.dataset&&this.handleNewLineColor(e?i:this.currentUILineColorDefinitions)},async loadBoundaries(){const t=this.config.boundaries||this.config.shapes||this.config.geojson||this.config.network;if(!t)return;let e=t.file||t,i=[],s;try{this.statusText="Loading features...",e.startsWith("http")?s=(await fetch(e).then(async r=>await r.json())).features:e.toLocaleLowerCase().endsWith(".shp")?s=await this.loadShapefileFeatures(e):s=(await this.fileApi.getFileJson(`${this.subfolder}/${e}`)).features;let a=!0,o=!0,n=!1;s.forEach(r=>{var c;const l=(c=r.properties)!=null?c:{};"id"in r&&(l.id=r.id),i.push(l),r.properties={},(r.geometry.type=="Point"||r.geometry.type=="MultiPoint")&&(n=!0),a&&(r.geometry.type=="LineString"||r.geometry.type=="MultiLineString")&&(a=!1),o&&(r.geometry.type=="Polygon"||r.geometry.type=="MultiPolygon")&&(o=!1)}),this.moveLogo(),await this.setFeaturePropertiesAsDataSource(e,[...i],t),(!a||s.length<5e3)&&(this.dataLineColors="#4e79a7"),o&&(this.isAreaMode=!1),n&&(this.isAreaMode=!0),this.boundaries=s,!o||n?await this.generateCentroidsAndMapCenter():this.needsInitialMapExtent&&this.calculateAndMoveToCenter(),F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries)}catch(a){throw console.error(a),this.$store.commit("error",""+a),Error(`Could not load "${e}"`)}if(!this.boundaries)throw Error('No "features" found in shapes file')},async setFeaturePropertiesAsDataSource(t,e,i){const s=await this.myDataManager.setFeatureProperties(t,e,i);this.boundaryDataTable=s;const a=t.substring(1+t.lastIndexOf("/"));this.datasets[a]=s,this.vizDetails.datasets[a]={file:a,join:this.datasetJoinColumn},this.config.datasets=Object.assign({},this.vizDetails.datasets)},async calculateAndMoveToCenter(){var a;let t=0,e=0,i=0;const s=this.boundaries.length;for(let o=0;o<s;o+=256){const n=st(this.boundaries[o]);(a=n==null?void 0:n.geometry)!=null&&a.coordinates&&(t+=n.geometry.coordinates[0],e+=n.geometry.coordinates[1],i+=1)}t/=i,e/=i,console.log("CENTER",t,e),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:t,latitude:e,center:[t,e],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async generateCentroidsAndMapCenter(){this.statusText="Calculating centroids...",await this.$nextTick();const t=this.config.shapes.join||"id";let e=0,i=0;for(const s of this.boundaries){const a=st(s);a.properties||(a.properties={}),s.properties[this.config.boundariesLabel]&&(a.properties.label=s.properties[this.config.boundariesLabel]),a.properties.id=s.properties[t],a.properties.id===void 0&&(a.properties.id=s[t]),this.centroids.push(a),a.geometry&&(e+=a.geometry.coordinates[0],i+=a.geometry.coordinates[1])}e/=this.centroids.length,i/=this.centroids.length,console.log("CENTER",e,i),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:e,latitude:i,center:[e,i],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async loadShapefileFeatures(t){var l,c;this.statusText="Loading shapefile...",console.log("loading",t);const e=`${this.subfolder}/${t}`;let i={};try{const d=this.fileApi.getFileBlob(e),u=e.replace(".shp",".dbf").replace(".SHP",".DBF").replace(".Shp",".Dbf"),g=this.fileApi.getFileBlob(u);await Promise.all([d,g]);const f=await((l=await d)==null?void 0:l.arrayBuffer()),m=await((c=await g)==null?void 0:c.arrayBuffer());if(!f||!m)return[];this.statusText="Generating shapes...",i=await xt(f,m)}catch(d){return console.error(d),this.$store.commit("error",""+d),[]}let s=Lt;const a=e.replace(".shp",".prj").replace(".SHP",".PRJ").replace(".Shp",".Prj");try{s=await this.fileApi.getFileText(a)}catch{}const o=this.vizDetails.projection||et.guessProjection(s);console.log({guessCRS:o}),o&&(this.statusText="Projecting coordinates...",await this.$nextTick(),i=Xt.toWgs84(i,o,et.allEPSGs),this.statusText="");function n(d){return Array.isArray(d[0])?n(d[0]):[d[0],d[1]]}const r=n(i.features[0].geometry.coordinates);if(Math.abs(r[0])>180||Math.abs(r[1])>90){const d=`Coordinates not lon/lat. Try providing ${a.substring(1+a.lastIndexOf("/"))}`;return this.$store.commit("error",d),this.statusText=d,[]}{const d=[],u=[];for(let m=0;m<i.features.length;m+=128){const D=n(i.features[m].geometry.coordinates);d.push(D[0]),u.push(D[1])}const g=d.reduce((m,D)=>m+D)/d.length,f=u.reduce((m,D)=>m+D)/u.length;this.$store.commit("setMapCamera",{longitude:g,latitude:f,bearing:0,pitch:0,zoom:9,center:[g,f],initial:!0})}return this.needsInitialMapExtent=!1,i.features},async loadDatasets(){const t=Object.keys(this.vizDetails.datasets);for(const e of t)e in this.datasets||await this.loadDataset(e)},async loadDataset(t){try{if(!t)return;const e=typeof this.config.datasets[t]=="string"?this.config.datasets[t]:this.config.datasets[t].file;this.statusText=`Loading dataset ${e} ...`,await this.$nextTick();let i={dataset:e};typeof this.config.datasets[t]!="string"&&(i=Object.assign(i,this.config.datasets[t])),this.datasetKeyToFilename[t]=e;const s=await this.myDataManager.getDataset(i),a=typeof this.config.datasets[t]=="string"?Object.keys(s.allRows)[0]:this.config.datasets[t].join,o=(a==null?void 0:a.split(":"))||[];o.length==2&&(this.featureJoinColumn=o[0]),o.length==1&&o.push(o[0]),this.datasets[t]=s.allRows,await this.$nextTick(),this.myDataManager.addFilterListener({dataset:e},this.processFiltersNow),this.activateFiltersForDataset(t)}catch(e){const i=""+e;console.error(i),this.$store.commit("error",i)}return[]},activateFiltersForDataset(t){const e=this.filterDefinitions.filter(i=>i.dataset===t);for(const i of e)console.log(3,JSON.stringify(i)),i.value=="@categorical"?this.filters[i.column]?i.value=this.filters[i.column].active:this.handleUserCreatedNewFilter(`${t}:${i.column}`):this.myDataManager.setFilter(Object.assign(i,{dataset:this.datasetKeyToFilename[t]}))},filterLabel(t){let e=this.filters[t].active.join(",").substring(0,50)||"Select...";return e.length===50&&(e+="..."),e},async handleUserSelectedNewMetric(){await this.$nextTick(),console.log("METRIC",this.datasetValuesColumn);const t=Object.assign({},this.$route.query);t.display=this.datasetValuesColumn,this.$router.replace({query:t}),this.maxValue=this.boundaryDataTable[this.datasetValuesColumn].max||0,console.log("MAXVALUE",this.maxValue),this.vizDetails.display.fill.columnName=this.datasetValuesColumn,this.vizDetails=Object.assign({},this.vizDetails),this.processFiltersNow()},handleUserSelectedNewFilters(t){const e=this.filters[t],i=e.active;this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[e.dataset],column:t,invert:!1,value:i});const s=Object.assign({},this.$route.query);for(const a of Object.entries(this.filters))a[1].active.length?s[a[0]]=a[1].active.join(","):delete s[a[0]];JSON.stringify(this.$route.query)!==JSON.stringify(s)&&this.$router.replace({query:s})},showCircles(t){this.useCircles=t;const e=Object.assign({},this.$route.query);t?e.show="dots":delete e.show,this.$router.replace({query:e})},handleUserCreatedNewFilter(t){const e=t||this.chosenNewFilterColumn,[i,s]=e.split(":");let a=[...new Set(this.datasets[i][s].values)];if(this.chosenNewFilterColumn="",a.length>48){alert(`Column ${s} has too many values to be used as a filter.`);return}this.filters[s]={column:s,label:s,options:a,active:[],dataset:i}},updateChart(){var l;if(!this.config.display||!this.config.datasets)return;let t="id";(l=this.config.shapes)!=null&&l.join&&(t=this.config.shapes.join);const e=this.datasetJoinColumn;if(!e){console.error(`No join column ${e}`);return}let i=this.config.display.fill.values;if(!i)throw this.statusText="",Error("Need to specify column for data values");this.$route.query.display&&(this.config.display.fill.columnName=this.$route.query.display);let s=this.config.display.fill.columnName||i[0];this.datasetValuesColumn=s;const a=this.boundaryDataTable[e].values,o=this.boundaryDataTable[s].values,n=At(Gt(a,o),c=>c[0]);let r=0;for(let c=0;c<this.boundaries.length;c++){const d=this.boundaries[c],u=this.centroids[c];let g=d[t];g==null&&(g=d.properties[t]),g===void 0&&this.$store.commit("error",`Shape is missing property "${t}"`);const f=n.get(g);f?(d.properties.value=Ut(f.map(m=>m[1])),r=Math.max(r,d.properties.value)):d.properties.value="N/A",u&&(u.properties.value=d.properties.value)}this.maxValue=this.boundaryDataTable[s].max||0,this.centroids=this.centroids.sort((c,d)=>c.properties.value>d.properties.value?-1:1),this.activeColumn="value"},clearData(){this.boundaries=[],this.centroids=[],this.boundaryDataTable={},this.boundaryFilters=new Float32Array(0),this.datasets={},this.dataFillColors="#888",this.dataLineColors="",this.dataLineWidths=1,this.dataPointRadii=5,this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""}},async mounted(){var t,e,i,s;try{if(this.setEmbeddedMode(),this.clearData(),await this.getVizDetails(),this.vizDetails.center&&typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(a=>parseFloat(a)),this.config.center=this.config.center.split(",").map(a=>parseFloat(a))),this.buildThumbnail(),this.thumbnail)return;this.buildOldJoinLookups(),this.filterDefinitions=this.parseFilterDefinitions(this.vizDetails.filters),this.setupLogoMover(),this.needsInitialMapExtent&&this.vizDetails.center&&(this.$store.commit("setMapCamera",{center:this.vizDetails.center,zoom:this.vizDetails.zoom||9,bearing:this.vizDetails.bearing||0,pitch:this.vizDetails.pitch||0,longitude:this.vizDetails.center?this.vizDetails.center[0]:0,latitude:this.vizDetails.center?this.vizDetails.center[1]:0,initial:!0}),this.needsInitialMapExtent=!1),this.expColors=(e=(t=this.config.display)==null?void 0:t.fill)==null?void 0:e.exponentColors,this.dataFillColors=$.state.isDarkMode?"#44445580":"#dddddd80",this.config.display.fill||(this.config.display.fill={}),(s=(i=this.config.display)==null?void 0:i.fill)!=null&&s.values&&(this.config.display.fill.values=this.convertCommasToArray(this.config.display.fill.values)),await this.loadBoundaries(),this.filterShapesNow(),this.isLoaded=!0,this.$emit("isLoaded"),await this.loadDatasets(),this.datasets=Object.assign({},this.datasets),this.config.datasets=JSON.parse(JSON.stringify(this.datasets)),this.vizDetails=Object.assign({},this.vizDetails),this.honorQueryParameters(),this.statusText="",this.featureJoinColumn=await this.figureOutFeatureIdColumn()}catch(a){this.$store.commit("error","Mapview "+a)}},beforeDestroy(){var t;delete F[this.layerId],F[1e3+this.layerId]&&(F[1e3+this.layerId]([]),delete F[1e3+this.layerId]),this.clearData(),this.legendStore.clear(),(t=this.resizer)==null||t.disconnect(),this.myDataManager.removeFilterListener(this.config,this.processFiltersNow),this.$store.commit("setFullScreen",!1)}});var Oe=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"map-layout",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.statusText,expression:"statusText"}],staticClass:"status-bar"},[t._v(t._s(t.statusText))]),t.showJoiner?i("modal-id-column-picker",t._b({on:{join:t.cbDatasetJoined}},"modal-id-column-picker",t.datasetJoinSelector,!1)):t._e(),t.thumbnail?t._e():i("div",{staticClass:"area-map",attrs:{id:`container-${t.layerId}`}},[t.needsInitialMapExtent?t._e():i("geojson-layer",{attrs:{viewId:t.layerId,fillColors:t.dataFillColors,featureDataTable:t.boundaryDataTable,lineColors:t.dataLineColors,lineWidths:t.dataLineWidths,fillHeights:t.dataFillHeights,screenshot:t.triggerScreenshot,calculatedValues:t.dataCalculatedValues,calculatedValueLabel:t.dataCalculatedValueLabel,normalizedValues:t.dataNormalizedValues,featureFilter:t.boundaryFilters,opacity:t.sliderOpacity,pointRadii:t.dataPointRadii,tooltip:t.vizDetails.tooltip,cbTooltip:t.cbTooltip}}),t.isLoaded?i("viz-configurator",{attrs:{embedded:t.isEmbedded,sections:t.configuratorSections,fileSystem:t.fileSystem,subfolder:t.subfolder,yamlConfig:t.generatedExportFilename,vizDetails:t.vizDetails,datasets:t.datasets,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration,screenshot:t.takeScreenshot}}):t._e(),t.tooltipHtml&&!t.statusText?i("div",{staticClass:"details-panel",domProps:{innerHTML:t._s(t.tooltipHtml)}}):t._e()],1),t.isLoaded&&!t.thumbnail?i("zoom-buttons"):t._e(),!t.thumbnail&&!t.isEmbedded&&t.isLoaded&&Object.keys(t.filters).length?i("div",{staticClass:"config-bar",class:{"is-standalone":!t.configFromDashboard,"is-disabled":!t.isLoaded}},t._l(Object.keys(t.filters),function(s){return i("div",{staticClass:"filter"},[i("p",[t._v(t._s(s))]),i("b-dropdown",{attrs:{scrollable:t.filters[s].active.length>10,"max-height":"250",multiple:"","aria-role":"list","mobile-modal":!1,"close-on-click":!0},on:{change:function(a){return t.handleUserSelectedNewFilters(s)}},scopedSlots:t._u([{key:"trigger",fn:function(a){return a.active,[i("b-button",{staticClass:"is-primary",attrs:{type:t.filters[s].active.length?"":"is-outlined",label:t.filterLabel(s)}})]}}],null,!0),model:{value:t.filters[s].active,callback:function(a){t.$set(t.filters[s],"active",a)},expression:"filters[filter].active"}},t._l(t.filters[s].options,function(a){return i("b-dropdown-item",{key:a,attrs:{value:a,"aria-role":"listitem"}},[t._v(t._s(a))])}),1)],1)}),0):t._e()],1)},Te=[];const ct={};var Pe=B(Ee,Oe,Te,!1,Je,"04045425",null,null);function Je(t){for(let e in ct)this[e]=ct[e]}var Cs=function(){return Pe.exports}();export{Cs as default};
//# sourceMappingURL=ShapeFile.92bf4e76.js.map
