{"version":3,"file":"AggregateOd.ea5ab5fc.js","sources":["../../src/plugins/aggregate-od/LegendBoxOD.vue","../../src/plugins/aggregate-od/LegendBoxOD.vue?vue&type=template&lang.js","../../src/plugins/aggregate-od/LineFilterSlider.vue","../../src/plugins/aggregate-od/LineFilterSlider.vue?vue&type=template&lang.js","../../src/plugins/aggregate-od/ScaleBoxOD.vue","../../src/plugins/aggregate-od/ScaleBoxOD.vue?vue&type=template&lang.js","../../src/plugins/aggregate-od/TimeSlider.vue","../../src/plugins/aggregate-od/TimeSlider.vue?vue&type=template&lang.js","../../src/components/ScaleSlider.vue","../../src/components/ScaleSlider.vue?vue&type=template&lang.js","../../src/plugins/aggregate-od/AggregateOd.vue","../../src/plugins/aggregate-od/AggregateOd.vue?vue&type=template&lang.js"],"sourcesContent":["<template lang=\"pug\">\r\n#legend-container\r\n  p.title {{$t('legend')}}\r\n  .legend-item(v-for=\"item in rows\")\r\n    .legend-col(v-if =\"typeof item === 'string' && item.includes('#')\" :style=\"{'background-color': item}\")\r\n    .legend-element1(v-if =\"typeof item === 'string' && !item.includes('#') && item == ('↓')\") {{item}}\r\n    .legend-element2(v-if =\"typeof item === 'string' && !item.includes('#') && item != ('↓')\") {{item}}\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: { linewidth: 'Line widths:', legend: 'Legend:' },\r\n    de: { linewidth: 'Linienbreite:', legend: 'Legende:' },\r\n  },\r\n}\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'LegendBoxOD',\r\n  i18n,\r\n  props: {\r\n    rows: { type: Array, required: true },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n#legend-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: var(--text);\r\n  background-color: var(--bgPanel);\r\n  padding: 0rem 0.5rem;\r\n  border: solid 1px rgba(161, 160, 160, 0.781);\r\n  border-radius: 2px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.legend-col {\r\n  width: 1rem;\r\n  margin-top: 0.6rem;\r\n  height: 2rem;\r\n}\r\n\r\np.title {\r\n  color: var(--text);\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  margin-bottom: 1rem;\r\n  margin-top: 1.1rem;\r\n  margin-right: 2rem;\r\n  font-weight: normal;\r\n}\r\n.legend-element1 {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-right: 0.8rem;\r\n  margin-left: -1.75rem;\r\n  margin-top: 0.6rem;\r\n}\r\n\r\n.legend-element2 {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-right: 0.8rem;\r\n  margin-left: -0.8rem;\r\n  margin-top: 0.6rem;\r\n}\r\n</style>\r\n","\r\n#legend-container\r\n  p.title {{$t('legend')}}\r\n  .legend-item(v-for=\"item in rows\")\r\n    .legend-col(v-if =\"typeof item === 'string' && item.includes('#')\" :style=\"{'background-color': item}\")\r\n    .legend-element1(v-if =\"typeof item === 'string' && !item.includes('#') && item == ('↓')\") {{item}}\r\n    .legend-element2(v-if =\"typeof item === 'string' && !item.includes('#') && item != ('↓')\") {{item}}\r\n","<template lang=\"pug\">\r\nb-slider.time-slider(\r\n  v-bind=\"options\"\r\n  v-model=\"sliderValue\"\r\n  tooltip-always\r\n)\r\n  b-slider-tick(v-for=\"tick,i in options.data\" :key=\"i\" :value=\"i\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'LineFilterSlider',\r\n  props: {\r\n    initialValue: { type: Number, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      sliderValue: 0,\r\n      options: {\r\n        size: 'is-small',\r\n        indicator: true,\r\n        min: 0,\r\n        max: 100,\r\n        'tooltip-always': true,\r\n        tooltip: true,\r\n        data: [\r\n          0,\r\n          1,\r\n          2,\r\n          5,\r\n          10,\r\n          15,\r\n          20,\r\n          25,\r\n          30,\r\n          35,\r\n          40,\r\n          45,\r\n          50,\r\n          55,\r\n          60,\r\n          65,\r\n          70,\r\n          75,\r\n          80,\r\n          85,\r\n          90,\r\n          95,\r\n          100,\r\n          'Alle',\r\n        ],\r\n      } as any,\r\n    }\r\n  },\r\n  // VUE LIFECYCLE HOOKS\r\n  mounted() {\r\n    this.options['custom-formatter'] = (val: any) => '' + this.options.data[val]\r\n    this.sliderValue = this.initialValue\r\n    this.sliderValue = this.options.data.includes(this.initialValue)\r\n      ? this.options.data.indexOf(this.initialValue)\r\n      : 0\r\n    this.options.max = this.options.data.length - 1\r\n  },\r\n  watch: {\r\n    sliderValue(result: any) {\r\n      this.$emit('change', this.options.data[result])\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.time-slider {\r\n  max-width: 100%;\r\n  padding: 0 1rem;\r\n}\r\n</style>\r\n","\r\nb-slider.time-slider(\r\n  v-bind=\"options\"\r\n  v-model=\"sliderValue\"\r\n  tooltip-always\r\n)\r\n  b-slider-tick(v-for=\"tick,i in options.data\" :key=\"i\" :value=\"i\")\r\n\r\n","<template lang=\"pug\">\r\n#scale-container\r\n  p.title {{$t('linewidth')}}\r\n    .scale-element {{ \"|↔︎|\" }}\r\n    .scale-scale {{ `~ ${this.rows[0]} ` + $t('trips') }}\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: { linewidth: 'Line widths:', legend: 'Legend:', trips: 'trips' },\r\n    de: { linewidth: 'Linienbreite:', legend: 'Legende:', trips: 'Fahrten' },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'LineFilterSlider',\r\n  i18n,\r\n  props: {\r\n    rows: { type: Array, required: true },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n#scale-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: var(--text);\r\n  background-color: var(--bgPanel);\r\n  padding: 0rem 0.5rem;\r\n  border: solid 1px rgba(161, 160, 160, 0.7);\r\n  border-radius: 4px;\r\n}\r\n\r\n.scale-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\np.title {\r\n  color: var(--text);\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  margin-bottom: 1rem;\r\n  margin-top: 1.1rem;\r\n  margin-right: 1rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.scale-element {\r\n  position: relative;\r\n  font-weight: normal;\r\n  margin-right: 1rem;\r\n  margin-top: 0.7rem;\r\n}\r\n\r\n.scale-scale {\r\n  position: relative;\r\n  font-variant: small-caps;\r\n  font-weight: normal;\r\n  margin-right: 0.2rem;\r\n  margin-top: 0.7rem;\r\n}\r\n</style>\r\n","\r\n#scale-container\r\n  p.title {{$t('linewidth')}}\r\n    .scale-element {{ \"|↔︎|\" }}\r\n    .scale-scale {{ `~ ${this.rows[0]} ` + $t('trips') }}\r\n\r\n","<template lang=\"pug\">\r\n.time-slider\r\n  b-slider(:min=\"0\" :max=\"stops.length\" v-model=\"sliderValue\" :tooltip=\"false\")\r\n    b-slider-tick(v-for=\"stop,i of allStops\" :key=\"stop\" :value=\"i\")\r\n  p: b {{ stopLabel }}\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'TimeSliderX',\r\n  components: {},\r\n  props: {\r\n    useRange: Boolean,\r\n    all: String,\r\n    stops: { type: Array, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      sliderValue: 0 as any,\r\n    }\r\n  },\r\n  computed: {\r\n    allStops() {\r\n      const initial = this.all ? [this.all] : []\r\n      return [...initial, ...this.stops]\r\n    },\r\n\r\n    stopLabel() {\r\n      if (Array.isArray(this.sliderValue))\r\n        return `${this.allStops[this.sliderValue[0]]} : ${this.allStops[this.sliderValue[1]]}`\r\n      else return this.allStops[this.sliderValue]\r\n    },\r\n  },\r\n  watch: {\r\n    useRange(useIt: boolean) {\r\n      if (useIt) {\r\n        this.sliderValue = [1, this.allStops.length - 1]\r\n      } else {\r\n        this.sliderValue = this.sliderValue[0]\r\n      }\r\n    },\r\n\r\n    sliderValue() {\r\n      const timePeriod = Array.isArray(this.sliderValue)\r\n        ? [this.allStops[this.sliderValue[0]], this.allStops[this.sliderValue[1]]]\r\n        : this.allStops[this.sliderValue]\r\n      this.$emit('change', timePeriod)\r\n    },\r\n  },\r\n  mounted() {\r\n    // console.log(777, this.stops)\r\n  },\r\n  methods: {},\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '~/vue-slider-component/theme/default.css';\r\n@import '@/styles.scss';\r\n\r\n.time-slider {\r\n  margin: 0.5rem;\r\n  margin-top: -0.75rem;\r\n}\r\n\r\np {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  margin-left: -0.4rem;\r\n  padding: 0;\r\n  line-height: 0.5rem;\r\n}\r\n</style>\r\n","\r\n.time-slider\r\n  b-slider(:min=\"0\" :max=\"stops.length\" v-model=\"sliderValue\" :tooltip=\"false\")\r\n    b-slider-tick(v-for=\"stop,i of allStops\" :key=\"stop\" :value=\"i\")\r\n  p: b {{ stopLabel }}\r\n\r\n","<template lang=\"pug\">\r\nb-slider.time-slider(v-if=\"options.data.length\"\r\n  v-bind=\"options\"\r\n  v-model=\"sliderValue\"\r\n)\r\n  b-slider-tick(v-for=\"tick,i in options.data\" :key=\"i\" :value=\"i\")\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'ScaleSlider',\r\n  props: {\r\n    stops: { type: Array, required: true },\r\n    initialValue: { type: Number, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      sliderValue: 1,\r\n      options: {\r\n        // tooltip: false,\r\n        'tooltip-always': true,\r\n        min: 0,\r\n        size: 'is-small',\r\n        max: 100,\r\n        indicator: true,\r\n        data: [] as any[], //this.stops,\r\n        'custom-formatter': {},\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n    this.options['custom-formatter'] = (val: any) => '' + this.options.data[val]\r\n    this.options.max = this.stops.length - 1\r\n    this.options.data = this.stops\r\n    this.sliderValue = this.stops.includes(this.initialValue)\r\n      ? this.stops.indexOf(this.initialValue)\r\n      : 0\r\n  },\r\n  watch: {\r\n    sliderValue() {\r\n      this.sliderChangedEvent()\r\n    },\r\n  },\r\n  methods: {\r\n    sliderChangedEvent() {\r\n      // console.log(result)\r\n      this.$emit('change', this.options.data[this.sliderValue])\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.time-slider {\r\n  max-width: 100%;\r\n  padding: 0 1rem;\r\n}\r\n</style>\r\n","\r\nb-slider.time-slider(v-if=\"options.data.length\"\r\n  v-bind=\"options\"\r\n  v-model=\"sliderValue\"\r\n)\r\n  b-slider-tick(v-for=\"tick,i in options.data\" :key=\"i\" :value=\"i\")\r\n","<template lang=\"pug\">\r\n.mycomponent(:id=\"containerId\")\r\n\r\n  zoom-buttons.zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  .map-container\r\n    .mymap(:id=\"mapId\")\r\n\r\n    .status-blob(v-show=\"!thumbnail && loadingText\")\r\n      p {{ loadingText }}\r\n\r\n    .lower-left(v-if=\"!thumbnail && !loadingText\")\r\n      .subheading {{ $t('lineWidths')}}\r\n      scale-slider.scale-slider(:stops='scaleValues' :initialValue='currentScale' @change='bounceScaleSlider')\r\n\r\n      .subheading {{ $t('hide')}}\r\n      line-filter-slider.scale-slider(\r\n        :initialValue=\"lineFilter\"\r\n        @change='bounceLineFilter')\r\n\r\n    .lower-right(v-if=\"!thumbnail && !isMobile\")\r\n      legend-box.complication(:rows=\"legendRows\")\r\n      scale-box.complication(:rows=\"scaleRows\")\r\n\r\n  .widgets(v-if=\"!thumbnail\" :style=\"{'padding': yamlConfig ? '0 0.5rem 0.5rem 0.5rem' : '0 0'}\")\r\n\r\n    //- TIME SLIDER ----\r\n    .widget-column(v-if=\"this.headers.length > 2\" style=\"min-width: 8rem\")\r\n      h4.heading {{ $t('time')}}\r\n      b-checkbox.checkbox(v-model=\"showTimeRange\") {{ $t('duration') }}\r\n      time-slider.xtime-slider(\r\n        :useRange=\"showTimeRange\"\r\n        :stops=\"headers\"\r\n        :all=\"allTimeBinsLabel\"\r\n        @change=\"bounceTimeSlider\")\r\n\r\n    //- CENTROID CONTROLS\r\n    .widget-column\r\n      h4.heading {{ $t('circle')}}\r\n      b-checkbox.checkbox(v-model=\"showCentroids\")\r\n        | &nbsp;{{ $t('showCentroids')}}\r\n      b-checkbox.checkbox(v-model=\"showCentroidLabels\")\r\n        | &nbsp;{{$t('showNumbers')}}\r\n\r\n    //- ORIG/DEST BUTTONS\r\n    .widget-column(style=\"margin: 0 0 0 auto\")\r\n      h4.heading {{$t('total')}}\r\n      b-button.is-small(@click='clickedOrigins' :class='{\"is-link\": isOrigin ,\"is-active\": isOrigin}') {{$t('origins')}}\r\n      b-button.is-small(@click='clickedDestinations' hint=\"Hide\" :class='{\"is-link\": !isOrigin,\"is-active\": !isOrigin}') {{$t('dest')}}\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      legend: 'Legend:',\r\n      lineWidth: 'Line width:',\r\n      lineWidths: 'Line widths',\r\n      hide: 'Hide smaller than',\r\n      time: 'Time of Day',\r\n      duration: 'Duration',\r\n      circle: 'Centroids',\r\n      showCentroids: 'Show centroids',\r\n      showNumbers: 'Show totals',\r\n      total: 'Totals for',\r\n      origins: 'Origins',\r\n      dest: 'Destinations',\r\n    },\r\n    de: {},\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\nimport * as shapefile from 'shapefile'\r\nimport * as turf from '@turf/turf'\r\nimport { debounce } from 'debounce'\r\nimport { FeatureCollection, Feature } from 'geojson'\r\nimport maplibregl, { MapMouseEvent, PositionOptions } from 'maplibre-gl'\r\nimport nprogress from 'nprogress'\r\nimport proj4 from 'proj4'\r\nimport readBlob from 'read-blob'\r\nimport VueSlider from 'vue-slider-component'\r\nimport YAML from 'yaml'\r\n\r\nimport { findMatchingGlobInFiles } from '@/js/util'\r\nimport Coords from '@/js/Coords'\r\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\r\nimport LegendBox from './LegendBoxOD.vue'\r\nimport LineFilterSlider from './LineFilterSlider.vue'\r\nimport ScaleBox from './ScaleBoxOD.vue'\r\nimport TimeSlider from './TimeSlider.vue'\r\nimport ScaleSlider from '@/components/ScaleSlider.vue'\r\nimport ZoomButtons from '@/components/ZoomButtons.vue'\r\n\r\nimport { ColorScheme, FileSystem, FileSystemConfig, Status, VisualizationPlugin } from '@/Globals'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\n\r\nimport CSVWorker from './AggregateDatasetStreamer.worker.ts?worker'\r\n\r\nimport globalStore from '@/store'\r\n\r\ninterface AggOdYaml {\r\n  shpFile: string\r\n  dbfFile: string\r\n  csvFile: string\r\n  projection: string\r\n  scaleFactor: number\r\n  title?: string\r\n  description?: string\r\n  idColumn?: string\r\n  lineWidth?: number\r\n  lineWidths?: number\r\n  hideSmallerThan?: number\r\n  mapIsIndependent?: boolean\r\n}\r\n\r\nconst TOTAL_MSG = 'Alle >>'\r\nconst FADED = 0.0 // 0.15\r\n\r\nconst SCALE_WIDTH = [1, 3, 5, 10, 25, 50, 100, 150, 200, 300, 400, 450, 500, 1000, 5000]\r\n\r\nconst INPUTS = {\r\n  OD_FLOWS: 'O/D Flows (.csv)',\r\n  SHP_FILE: 'Shapefile .SHP',\r\n  DBF_FILE: 'Shapefile .DBF',\r\n}\r\n\r\nconst Component = defineComponent({\r\n  name: 'AggregateOD',\r\n  i18n,\r\n  components: {\r\n    CollapsiblePanel,\r\n    LegendBox,\r\n    LineFilterSlider,\r\n    ScaleBox,\r\n    ScaleSlider,\r\n    TimeSlider,\r\n    ZoomButtons,\r\n    VueSlider,\r\n  },\r\n  props: {\r\n    root: { type: String, required: true },\r\n    subfolder: { type: String, required: true },\r\n    yamlConfig: String,\r\n    config: Object,\r\n    thumbnail: Boolean,\r\n  },\r\n  data: () => {\r\n    return {\r\n      globalState: globalStore.state,\r\n      isFinishedLoading: false,\r\n\r\n      myState: {\r\n        subfolder: '',\r\n        yamlConfig: '',\r\n        thumbnail: false,\r\n      },\r\n\r\n      vizDetails: {\r\n        csvFile: '',\r\n        shpFile: '',\r\n        dbfFile: '',\r\n        projection: '',\r\n        scaleFactor: 1,\r\n        title: '',\r\n        description: '',\r\n        mapIsIndependent: false,\r\n      } as AggOdYaml,\r\n\r\n      standaloneYAMLconfig: {\r\n        csvFile: '',\r\n        shpFile: '',\r\n        dbfFile: '',\r\n        projection: '',\r\n        scaleFactor: 1,\r\n        title: '',\r\n        description: '',\r\n        mapIsIndependent: false,\r\n      },\r\n\r\n      YAMLrequirementsOD: {\r\n        shpFile: '',\r\n        dbfFile: '',\r\n        csvFile: '',\r\n        projection: '',\r\n        scaleFactor: 1,\r\n      },\r\n\r\n      containerId: `c${Math.floor(1e12 * Math.random())}`,\r\n      mapId: `map-c${Math.floor(1e12 * Math.random())}`,\r\n\r\n      centroids: {} as any,\r\n      centroidSource: {} as any,\r\n      linkData: {} as any,\r\n      spiderLinkFeatureCollection: {} as any,\r\n\r\n      zoneData: {} as any, // [i][j][timePeriod] where [-1] of each is totals\r\n      dailyData: {} as any, // [i][j]\r\n      marginals: {} as any,\r\n      hoveredStateId: 0 as any,\r\n\r\n      rowName: '',\r\n      colName: '',\r\n      headers: [] as string[],\r\n\r\n      geojson: {} as any,\r\n      idColumn: '',\r\n\r\n      mapIsIndependent: false,\r\n\r\n      showTimeRange: false,\r\n      showCentroids: true,\r\n      showCentroidLabels: true,\r\n\r\n      isOrigin: true,\r\n      selectedCentroid: 0,\r\n      maxZonalTotal: 0,\r\n\r\n      loadingText: 'Aggregierte Quell-Ziel Muster',\r\n      mymap: {} as maplibregl.Map,\r\n      project: {} as any,\r\n\r\n      scaleFactor: 1,\r\n      scaleValues: SCALE_WIDTH,\r\n      currentScale: SCALE_WIDTH[0],\r\n      currentTimeBin: TOTAL_MSG,\r\n      allTimeBinsLabel: TOTAL_MSG,\r\n\r\n      lineFilter: 0,\r\n\r\n      projection: '',\r\n      hoverId: null as any,\r\n\r\n      _mapExtentXYXY: null as any,\r\n      _maximum: null as any,\r\n\r\n      bounceTimeSlider: {} as any,\r\n      bounceScaleSlider: {} as any,\r\n      bounceLineFilter: {} as any,\r\n      resizer: null as ResizeObserver | null,\r\n      isMapMoving: false,\r\n      isDarkMode: false,\r\n\r\n      csvWorker: null as Worker | null,\r\n    }\r\n  },\r\n  computed: {\r\n    fileSystem(): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === this.root\r\n      )\r\n      if (svnProject.length === 0) {\r\n        console.log('no such project')\r\n        throw Error\r\n      }\r\n      return svnProject[0]\r\n    },\r\n\r\n    fileApi() {\r\n      return new HTTPFileSystem(this.fileSystem, globalStore)\r\n    },\r\n\r\n    isMobile() {\r\n      const w = window\r\n      const d = document\r\n      const e = d.documentElement\r\n      const g = d.getElementsByTagName('body')[0]\r\n      const x = w.innerWidth || e.clientWidth || g.clientWidth\r\n      const y = w.innerHeight || e.clientHeight || g.clientHeight\r\n\r\n      return x < 640\r\n    },\r\n\r\n    legendRows(): any[] {\r\n      return ['#00aa66', '#880033', '↓', '↑']\r\n    },\r\n\r\n    scaleRows(): any[] {\r\n      return [\r\n        Math.min(\r\n          Math.round((1200 * Math.pow(this.currentScale, -1) + 20) * Math.sqrt(this.scaleFactor)),\r\n          1000 * this.scaleFactor\r\n        ),\r\n      ]\r\n    },\r\n  },\r\n  methods: {\r\n    setupResizer() {\r\n      this.resizer = new ResizeObserver(() => {\r\n        if (this.mymap) this.mymap.resize()\r\n      })\r\n\r\n      const viz = document.getElementById(this.containerId) as HTMLElement\r\n      this.resizer.observe(viz)\r\n    },\r\n\r\n    configureSettings() {\r\n      if (this.vizDetails.lineWidths || this.vizDetails.lineWidth) {\r\n        this.currentScale = this.vizDetails.lineWidth || this.vizDetails.lineWidths || 1\r\n      }\r\n      if (this.vizDetails.hideSmallerThan) this.lineFilter = this.vizDetails.hideSmallerThan\r\n    },\r\n\r\n    handleMapMotion() {\r\n      const mapCamera = {\r\n        longitude: this.mymap.getCenter().lng,\r\n        latitude: this.mymap.getCenter().lat,\r\n        bearing: this.mymap.getBearing(),\r\n        zoom: this.mymap.getZoom(),\r\n        pitch: this.mymap.getPitch(),\r\n      }\r\n\r\n      if (!this.mapIsIndependent) this.$store.commit('setMapCamera', mapCamera)\r\n      if (!this.isMapMoving) this.isMapMoving = true\r\n    },\r\n\r\n    async getVizDetails() {\r\n      if (this.config) {\r\n        this.validateYAML()\r\n        this.vizDetails = Object.assign({}, this.config) as any\r\n      } else {\r\n        try {\r\n          // might be a project config:\r\n          const filename =\r\n            this.myState.yamlConfig.indexOf('/') > -1\r\n              ? this.myState.yamlConfig\r\n              : this.myState.subfolder + '/' + this.myState.yamlConfig\r\n\r\n          const text = await this.fileApi.getFileText(filename)\r\n          this.standaloneYAMLconfig = Object.assign({}, YAML.parse(text))\r\n          this.validateYAML()\r\n          this.setVizDetails()\r\n        } catch (e) {\r\n          console.error('' + e)\r\n        }\r\n      }\r\n\r\n      this.$emit('title', this.vizDetails.title)\r\n\r\n      this.scaleFactor = this.vizDetails.scaleFactor\r\n      this.projection = this.vizDetails.projection\r\n      this.mapIsIndependent = !!this.vizDetails.mapIsIndependent\r\n      this.idColumn = this.vizDetails.idColumn ? this.vizDetails.idColumn : 'id'\r\n\r\n      nprogress.done()\r\n    },\r\n\r\n    validateYAML() {\r\n      const hasYaml = new RegExp('.*(yml|yaml)$').test(this.myState.yamlConfig)\r\n\r\n      let configuration = {} as any\r\n\r\n      if (hasYaml) {\r\n        configuration = this.standaloneYAMLconfig\r\n      } else {\r\n        configuration = this.config\r\n      }\r\n\r\n      for (const key in this.YAMLrequirementsOD) {\r\n        if (key in configuration === false) {\r\n          this.$store.commit('setStatus', {\r\n            type: Status.ERROR,\r\n            msg: `${this.yamlConfig}: missing required key: ${key}`,\r\n            desc: '',\r\n          })\r\n        }\r\n      }\r\n    },\r\n\r\n    setVizDetails() {\r\n      this.vizDetails = Object.assign({}, this.vizDetails, this.standaloneYAMLconfig)\r\n\r\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Aggregate OD'\r\n      this.$emit('title', t)\r\n    },\r\n\r\n    async findFilenameFromWildcard(path: string) {\r\n      // get folder\r\n      let folder =\r\n        path.indexOf('/') > -1 ? path.substring(0, path.lastIndexOf('/')) : this.subfolder\r\n\r\n      // get file path search pattern\r\n      const { files } = await this.fileApi.getDirectory(folder)\r\n      let pattern = path.indexOf('/') === -1 ? path : path.substring(path.lastIndexOf('/') + 1)\r\n      const match = findMatchingGlobInFiles(files, pattern)\r\n\r\n      if (match.length === 1) {\r\n        return `${folder}/${match[0]}`\r\n      } else {\r\n        throw Error('File not found: ' + path)\r\n      }\r\n    },\r\n\r\n    async loadFiles() {\r\n      try {\r\n        this.loadingText = 'Dateien laden...'\r\n\r\n        const shpFilename = await this.findFilenameFromWildcard(\r\n          `${this.myState.subfolder}/${this.vizDetails.shpFile}`\r\n        )\r\n        const dbfFilename = await this.findFilenameFromWildcard(\r\n          `${this.myState.subfolder}/${this.vizDetails.dbfFile}`\r\n        )\r\n\r\n        const blob = await this.fileApi.getFileBlob(shpFilename)\r\n        const shpFile = await readBlob.arraybuffer(blob)\r\n\r\n        const blob2 = await this.fileApi.getFileBlob(dbfFilename)\r\n        const dbfFile = await readBlob.arraybuffer(blob2)\r\n\r\n        return { shpFile, dbfFile }\r\n        //\r\n      } catch (e) {\r\n        const error = e as any\r\n        let msg = error.statusText || '' + error\r\n        if (error.url) msg += ': ' + error.url\r\n\r\n        console.error(msg)\r\n        this.loadingText = '' + e\r\n        this.$store.commit('error', msg)\r\n        return null\r\n      }\r\n    },\r\n\r\n    async setupMap() {\r\n      try {\r\n        this.mymap = new maplibregl.Map({\r\n          container: this.mapId,\r\n          style: globalStore.getters.mapStyle,\r\n          logoPosition: 'top-left',\r\n        })\r\n      } catch (e) {\r\n        console.error('HUH?')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const extent = localStorage.getItem(this.$route.fullPath + '-bounds')\r\n        if (extent) {\r\n          const lnglat = JSON.parse(extent)\r\n\r\n          const mFac = this.isMobile ? 0 : 1\r\n          const padding = { top: 50 * mFac, bottom: 50 * mFac, right: 100 * mFac, left: 50 * mFac }\r\n\r\n          this.$store.commit('setMapCamera', {\r\n            longitude: 0.5 * (lnglat[0] + lnglat[2]),\r\n            latitude: 0.5 * (lnglat[1] + lnglat[3]),\r\n            zoom: 8,\r\n            pitch: 0,\r\n            bearing: 0,\r\n            jump: true, // initial map\r\n          })\r\n        }\r\n      } catch (e) {\r\n        // no consequence if json was weird, just drop it\r\n      }\r\n\r\n      this.mymap.on('click', this.handleEmptyClick)\r\n      // Start doing stuff AFTER the MapBox library has fully initialized\r\n      this.mymap.on('load', this.mapIsReady)\r\n      this.mymap.on('move', this.handleMapMotion)\r\n\r\n      // clean up display just when we're in thumbnail mode\r\n      if (this.thumbnail) {\r\n        let baubles = document.getElementsByClassName(\r\n          'mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact'\r\n        )\r\n        for (const elem of baubles) elem.setAttribute('style', 'display: none')\r\n\r\n        baubles = document.getElementsByClassName('mapboxgl-ctrl mapboxgl-ctrl-group')\r\n        for (const elem of baubles) elem.setAttribute('style', 'display: none')\r\n\r\n        baubles = document.getElementsByClassName('mapboxgl-ctrl-logo')\r\n        for (const elem of baubles) elem.setAttribute('style', 'display: none')\r\n      } else {\r\n        let baubles = document.getElementsByClassName('mapboxgl-ctrl-logo')\r\n        for (const elem of baubles) elem.setAttribute('style', 'margin-bottom: 3rem;')\r\n      }\r\n    },\r\n\r\n    handleEmptyClick(e: any) {\r\n      if (\r\n        this.mymap\r\n          .queryRenderedFeatures(e.point)\r\n          .filter(feature => feature.source === 'centroids' || feature.source === 'spider-source')\r\n          .length === 0\r\n      ) {\r\n        // didn't click on a centroid: clear the map\r\n        this.fadeUnselectedLinks(-1)\r\n        this.selectedCentroid = 0\r\n        if (this.isMobile) {\r\n        } // do something\r\n      }\r\n    },\r\n\r\n    async mapIsReady() {\r\n      const files = await this.loadFiles()\r\n\r\n      if (files) {\r\n        this.geojson = await this.processShapefile(files)\r\n        // this is async, setup will continue at finishedLoading() when data is loaded\r\n        if (this.geojson) this.loadCSVData()\r\n      }\r\n\r\n      nprogress.done()\r\n    },\r\n\r\n    createSpiderLinks() {\r\n      this.spiderLinkFeatureCollection = { type: 'FeatureCollection', features: [] }\r\n\r\n      for (const id of Object.keys(this.linkData)) {\r\n        const link: any = this.linkData[id]\r\n\r\n        if (link.daily <= this.lineFilter) continue\r\n\r\n        try {\r\n          const origCoord = this.centroids[link.orig].geometry.coordinates\r\n          const destCoord = this.centroids[link.dest].geometry.coordinates\r\n          const color = origCoord[1] - destCoord[1] > 0 ? '#00aa66' : '#880033'\r\n          const fade = 0.7\r\n          const properties: any = {\r\n            id: id,\r\n            orig: link.orig || 0,\r\n            dest: link.dest || 0,\r\n            daily: link.daily || 0,\r\n            color,\r\n            fade,\r\n          }\r\n          // Test this\r\n          properties[TOTAL_MSG] = link.daily\r\n          link.values.forEach((value: number, i: number) => {\r\n            properties[this.headers[i]] = value ?? 0\r\n          })\r\n\r\n          const feature: any = {\r\n            type: 'Feature',\r\n            properties,\r\n            geometry: {\r\n              type: 'LineString',\r\n              coordinates: [origCoord, destCoord],\r\n            },\r\n          }\r\n          this.spiderLinkFeatureCollection.features.push(feature)\r\n        } catch (e) {\r\n          // some dests aren't on map: z.b. 'other'\r\n        }\r\n      }\r\n      // console.log(555, this.currentTimeBin, {\r\n      //   SPIDERLINKFEATURECOLLECTION: this.spiderLinkFeatureCollection,\r\n      // })\r\n    },\r\n\r\n    updateSpiderLinks() {\r\n      this.createSpiderLinks()\r\n\r\n      // avoiding mapbox typescript bug:\r\n      if (this.selectedCentroid) {\r\n        this.fadeUnselectedLinks(this.selectedCentroid)\r\n      } else {\r\n        const tsMap = this.mymap as any\r\n        tsMap.getSource('spider-source').setData(this.spiderLinkFeatureCollection)\r\n      }\r\n    },\r\n\r\n    buildSpiderLinks() {\r\n      if (!this.mymap.getSource('spider-source')) {\r\n        this.createSpiderLinks()\r\n        // console.log({ spiders: this.spiderLinkFeatureCollection })\r\n        this.mymap.addSource('spider-source', {\r\n          data: this.spiderLinkFeatureCollection,\r\n          type: 'geojson',\r\n        } as any)\r\n      }\r\n\r\n      if (this.mymap.getLayer('spider-layer')) this.mymap.removeLayer('spider-layer')\r\n      this.mymap.addLayer(\r\n        {\r\n          id: 'spider-layer',\r\n          source: 'spider-source',\r\n          type: 'line',\r\n          paint: {\r\n            'line-color': ['get', 'color'],\r\n            'line-width': ['*', (1 / 500) * this.scaleFactor, ['get', 'daily']],\r\n            'line-offset': ['*', 0.5, ['get', 'daily']],\r\n            'line-opacity': ['get', 'fade'],\r\n          },\r\n          filter: ['>', ['get', this.currentTimeBin], 0],\r\n        },\r\n        'centroid-layer'\r\n      )\r\n\r\n      this.changedScale(this.currentScale)\r\n\r\n      const parent = this\r\n      this.mymap.on('click', 'spider-layer', function (e: maplibregl.MapMouseEvent) {\r\n        parent.clickedOnSpiderLink(e)\r\n      })\r\n\r\n      // turn \"hover cursor\" into a pointer, so user knows they can click.\r\n      this.mymap.on('mousemove', 'spider-layer', function (e: maplibregl.MapMouseEvent) {\r\n        parent.mymap.getCanvas().style.cursor = e ? 'pointer' : 'grab'\r\n      })\r\n\r\n      // and back to normal when they mouse away\r\n      this.mymap.on('mouseleave', 'spider-layer', function () {\r\n        parent.mymap.getCanvas().style.cursor = 'grab'\r\n      })\r\n    },\r\n\r\n    clickedOrigins() {\r\n      this.isOrigin = true\r\n      this.updateCentroidLabels()\r\n\r\n      this.convertRegionColors(this.geojson)\r\n\r\n      // avoiding mapbox typescript bug:\r\n      const tsMap = this.mymap as any\r\n      tsMap.getSource('shpsource').setData(this.geojson)\r\n    },\r\n\r\n    clickedDestinations() {\r\n      this.isOrigin = false\r\n      this.updateCentroidLabels()\r\n\r\n      this.convertRegionColors(this.geojson)\r\n\r\n      // avoiding mapbox typescript bug:\r\n      const tsMap = this.mymap as any\r\n      tsMap.getSource('shpsource').setData(this.geojson)\r\n    },\r\n\r\n    updateCentroidLabels() {\r\n      const labels = this.isOrigin ? '{dailyFrom}' : '{dailyTo}'\r\n      const radiusField = this.isOrigin ? 'widthFrom' : 'widthTo'\r\n\r\n      if (this.mymap.getLayer('centroid-layer')) this.mymap.removeLayer('centroid-layer')\r\n      if (this.mymap.getLayer('centroid-label-layer'))\r\n        this.mymap.removeLayer('centroid-label-layer')\r\n\r\n      if (this.showCentroids) {\r\n        this.mymap.addLayer({\r\n          layout: { visibility: this.thumbnail ? 'none' : 'visible' },\r\n          id: 'centroid-layer',\r\n          source: 'centroids',\r\n          type: 'circle',\r\n          paint: {\r\n            'circle-color': '#ec0',\r\n            'circle-radius': ['get', radiusField],\r\n            'circle-stroke-width': 2,\r\n            'circle-stroke-color': 'white',\r\n          },\r\n          filter: ['>', ['get', this.isOrigin ? 'dailyFrom' : 'dailyTo'], 0],\r\n        })\r\n      }\r\n\r\n      if (this.showCentroidLabels) {\r\n        this.mymap.addLayer({\r\n          id: 'centroid-label-layer',\r\n          source: 'centroids',\r\n          type: 'symbol',\r\n          layout: {\r\n            'text-field': labels,\r\n            'text-size': 11,\r\n          },\r\n          paint: this.showCentroids ? {} : { 'text-halo-color': 'white', 'text-halo-width': 2 },\r\n          filter: ['>', ['get', this.isOrigin ? 'dailyFrom' : 'dailyTo'], 0],\r\n        })\r\n      }\r\n    },\r\n\r\n    unselectAllCentroids() {\r\n      this.fadeUnselectedLinks(-1)\r\n      this.selectedCentroid = 0\r\n    },\r\n\r\n    clickedOnCentroid(e: any) {\r\n      e.originalEvent.stopPropagating = true\r\n\r\n      const centroid = e.features[0].properties\r\n      // console.log('CLICK!', centroid, this.selectedCentroid, centroid.id === this.selectedCentroid)\r\n\r\n      const id = centroid.id\r\n\r\n      // a second click on a centroid UNselects it.\r\n      if (id === this.selectedCentroid) {\r\n        this.unselectAllCentroids()\r\n        return\r\n      }\r\n\r\n      this.selectedCentroid = id\r\n      this.fadeUnselectedLinks(id)\r\n    },\r\n\r\n    fadeUnselectedLinks(id: any) {\r\n      const tsMap = this.mymap as any\r\n\r\n      for (const feature of this.spiderLinkFeatureCollection.features) {\r\n        const endpoints = feature.properties.id.split(':')\r\n        let fade = endpoints[0] === String(id) || endpoints[1] === String(id) ? 0.7 : FADED\r\n        if (id === -1) fade = 0.7\r\n        feature.properties.fade = fade\r\n      }\r\n      tsMap.getSource('spider-source').setData(this.spiderLinkFeatureCollection)\r\n    },\r\n\r\n    clickedOnSpiderLink(e: any) {\r\n      if (e.originalEvent.stopPropagating) return\r\n\r\n      // console.log({ CLICK: e })\r\n\r\n      const props = e.features[0].properties\r\n      // console.log(props)\r\n\r\n      const trips = Math.round(10000 * props.daily * this.scaleFactor) / 10000\r\n      let revTrips = 0\r\n      const reverseDir = '' + props.dest + ':' + props.orig\r\n\r\n      if (this.linkData[reverseDir])\r\n        revTrips = Math.round(10000 * this.linkData[reverseDir].daily * this.scaleFactor) / 10000\r\n\r\n      const totalTrips = trips + revTrips\r\n\r\n      let html = `<h1><b>${totalTrips} Bidirectional Trip${totalTrips !== 1 ? 's' : ''}</b></h1>`\r\n      html += `<p style=\"width: max-content\">_________________________</p>`\r\n      html += `<p style=\"width: max-content\">${trips} trip${\r\n        trips !== 1 ? 's' : ''\r\n      } // ${revTrips} reverse trip${revTrips !== 1 ? 's' : ''}</p>`\r\n\r\n      new maplibregl.Popup({ closeOnClick: true })\r\n        .setLngLat(e.lngLat)\r\n        .setHTML(html)\r\n        .addTo(this.mymap)\r\n    },\r\n\r\n    convertRegionColors(geojson: FeatureCollection) {\r\n      for (const feature of geojson.features) {\r\n        if (!feature.properties) continue\r\n\r\n        const daily = this.isOrigin ? feature.properties.dailyFrom : feature.properties.dailyTo\r\n        const ratio = daily / this.maxZonalTotal\r\n\r\n        let blue = 128 + 127 * (1.0 - ratio)\r\n        if (!blue) blue = 255\r\n\r\n        feature.properties.blue = blue\r\n      }\r\n    },\r\n\r\n    handleCentroidsForTimeOfDayChange(timePeriod: any) {\r\n      const centroids: FeatureCollection = { type: 'FeatureCollection', features: [] }\r\n\r\n      for (const feature of this.geojson.features) {\r\n        const centroid: any = turf.centerOfMass(feature as any)\r\n\r\n        centroid.properties.id = feature.id\r\n\r\n        const values = this.calculateCentroidValuesForZone(timePeriod, feature)\r\n\r\n        centroid.properties.dailyFrom = Math.round(10000 * values.from * this.scaleFactor) / 10000\r\n        centroid.properties.dailyTo = Math.round(10000 * values.to * this.scaleFactor) / 10000\r\n\r\n        let digits = Math.log10(centroid.properties.dailyFrom)\r\n        centroid.properties.widthFrom = 6 + digits * 3.5\r\n        digits = Math.log10(centroid.properties.dailyTo)\r\n        centroid.properties.widthTo = 6 + digits * 3.5\r\n\r\n        if (!feature.properties) feature.properties = {}\r\n\r\n        feature.properties.dailyFrom = values.from\r\n        feature.properties.dailyTo = values.to\r\n\r\n        if (centroid.properties.dailyFrom + centroid.properties.dailyTo > 0) {\r\n          centroids.features.push(centroid)\r\n          if (feature.properties) this.centroids[feature.properties[this.idColumn]] = centroid\r\n        }\r\n      }\r\n\r\n      this.centroidSource = centroids\r\n\r\n      const tsMap = this.mymap as any\r\n      tsMap.getSource('centroids').setData(this.centroidSource)\r\n      this.updateCentroidLabels()\r\n    },\r\n\r\n    calculateCentroidValuesForZone(timePeriod: any, feature: any) {\r\n      let from = 0\r\n      let to = 0\r\n\r\n      // daily\r\n      if (timePeriod === 'Alle >>') {\r\n        to = feature.properties.dailyTo\r\n        from = feature.properties.dailyFrom\r\n        return { from, to }\r\n      }\r\n\r\n      const fromMarginal = this.marginals.from[feature.id]\r\n      const toMarginal = this.marginals.to[feature.id]\r\n\r\n      // time range\r\n      if (Array.isArray(timePeriod)) {\r\n        let hourFrom = this.headers.indexOf(timePeriod[0]) - 1\r\n        if (hourFrom < 0) hourFrom = 0\r\n\r\n        const hourTo = this.headers.indexOf(timePeriod[1]) - 1\r\n\r\n        for (let i = hourFrom; i <= hourTo; i++) {\r\n          from += fromMarginal ? Math.round(fromMarginal[i]) : 0\r\n          to += toMarginal ? Math.round(toMarginal[i]) : 0\r\n        }\r\n        return { from, to }\r\n      }\r\n\r\n      // one time period\r\n      const hour = this.headers.indexOf(timePeriod) - 1\r\n\r\n      from = fromMarginal ? Math.round(fromMarginal[hour]) : 0\r\n      to = toMarginal ? Math.round(toMarginal[hour]) : 0\r\n\r\n      return { from, to }\r\n    },\r\n\r\n    buildCentroids(geojson: FeatureCollection) {\r\n      const centroids: FeatureCollection = { type: 'FeatureCollection', features: [] }\r\n\r\n      for (const feature of geojson.features) {\r\n        if (!feature.id) continue\r\n\r\n        const centroid: any = turf.centerOfMass(feature as any)\r\n        centroid.properties.id = feature.id\r\n        centroid.id = feature.id\r\n\r\n        let dailyFrom = Math.round(this.marginals.rowTotal[feature.id])\r\n        let dailyTo = Math.round(this.marginals.colTotal[feature.id])\r\n\r\n        if (!dailyFrom) dailyFrom = 0\r\n        if (!dailyTo) dailyTo = 0\r\n\r\n        centroid.properties.dailyFrom = dailyFrom * this.scaleFactor\r\n        centroid.properties.dailyTo = dailyTo * this.scaleFactor\r\n\r\n        let digits = Math.log10(centroid.properties.dailyFrom)\r\n        centroid.properties.widthFrom = 6 + digits * 3.5\r\n        digits = Math.log10(centroid.properties.dailyTo)\r\n        centroid.properties.widthTo = 6 + digits * 3.5\r\n\r\n        if (dailyFrom) this.maxZonalTotal = Math.max(this.maxZonalTotal, dailyFrom)\r\n        if (dailyTo) this.maxZonalTotal = Math.max(this.maxZonalTotal, dailyTo)\r\n\r\n        if (!feature.properties) feature.properties = {}\r\n        feature.properties.dailyFrom = dailyFrom\r\n        feature.properties.dailyTo = dailyTo\r\n\r\n        if (centroid.properties.dailyFrom + centroid.properties.dailyTo > 0) {\r\n          centroids.features.push(centroid)\r\n          if (feature.properties) this.centroids[feature.id] = centroid\r\n          this.updateMapExtent(centroid.geometry.coordinates)\r\n        }\r\n      }\r\n\r\n      this.centroidSource = centroids\r\n\r\n      if (!this.mymap.getSource('centroids')) {\r\n        this.mymap.addSource('centroids', {\r\n          data: this.centroidSource,\r\n          type: 'geojson',\r\n        } as any)\r\n      }\r\n      this.updateCentroidLabels()\r\n\r\n      this.mymap.on('click', 'centroid-layer', (e: maplibregl.MapMouseEvent) => {\r\n        this.clickedOnCentroid(e)\r\n      })\r\n\r\n      // turn \"hover cursor\" into a pointer, so user knows they can click.\r\n      this.mymap.on('mousemove', 'centroid-layer', (e: maplibregl.MapMouseEvent) => {\r\n        this.mymap.getCanvas().style.cursor = e ? 'pointer' : 'grab'\r\n      })\r\n\r\n      // and back to normal when they mouse away\r\n      this.mymap.on('mouseleave', 'centroid-layer', () => {\r\n        this.mymap.getCanvas().style.cursor = 'grab'\r\n      })\r\n    },\r\n\r\n    setMapExtent() {\r\n      localStorage.setItem(this.$route.fullPath + '-bounds', JSON.stringify(this._mapExtentXYXY))\r\n\r\n      const options = this.thumbnail\r\n        ? { animate: false }\r\n        : {\r\n            padding: { top: 25, bottom: 25, right: 100, left: 100 },\r\n            animate: false,\r\n          }\r\n      this.mymap.fitBounds(this._mapExtentXYXY, options)\r\n    },\r\n\r\n    setupKeyListeners() {\r\n      window.addEventListener('keyup', event => {\r\n        if (event.keyCode === 27) {\r\n          // ESC\r\n          this.pressedEscape()\r\n        }\r\n      })\r\n      window.addEventListener('keydown', event => {\r\n        if (event.keyCode === 38) {\r\n          // UP\r\n          this.pressedArrowKey(-1)\r\n        }\r\n        if (event.keyCode === 40) {\r\n          // DOWN\r\n          this.pressedArrowKey(+1)\r\n        }\r\n      })\r\n    },\r\n\r\n    // To display only the centroids whose dailyTo and dailyFrom values are not\r\n    // both 0, the objects get the property 'isVisible'. When adding the geojson\r\n    // data to the map, it is filtered by this attribute.\r\n    processGeojson() {\r\n      for (const feature of this.geojson.features) {\r\n        const data = feature.properties\r\n        if (data.dailyFrom !== 0 || data.dailyTo !== 0) {\r\n          feature.properties.isVisible = true\r\n        } else {\r\n          feature.properties.isVisible = false\r\n        }\r\n      }\r\n    },\r\n\r\n    async processShapefile(files: any) {\r\n      this.loadingText = 'Verkehrsnetz bauarbeiten...'\r\n      const geojson = await shapefile.read(files.shpFile, files.dbfFile)\r\n\r\n      // if we have lots of features, then we should filter the LINES for performance\r\n      if (geojson.features.length > 150) this.lineFilter = 10\r\n\r\n      this.loadingText = 'Koordinaten berechnen...'\r\n\r\n      for (const feature of geojson.features) {\r\n        const properties = feature.properties as any\r\n\r\n        // 'id' column used for lookup, unless idColumn is set in YAML\r\n        if (!this.idColumn && properties) this.idColumn = Object.keys(properties)[0]\r\n\r\n        if (!(this.idColumn in properties)) {\r\n          this.$store.commit('error', `Shapefile does not contain ID column \"${this.idColumn}\"`)\r\n          return\r\n        }\r\n\r\n        // Save id somewhere helpful\r\n        if (feature.properties) feature.id = feature.properties[this.idColumn]\r\n\r\n        try {\r\n          if (feature.geometry.type === 'MultiPolygon') {\r\n            this.convertMultiPolygonCoordinatesToWGS84(feature)\r\n          } else {\r\n            this.convertPolygonCoordinatesToWGS84(feature)\r\n          }\r\n        } catch (e) {\r\n          console.error('ERR with feature: ' + feature)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return geojson\r\n    },\r\n\r\n    convertPolygonCoordinatesToWGS84(polygon: any) {\r\n      for (const origCoords of polygon.geometry.coordinates) {\r\n        const newCoords: any = []\r\n        for (const p of origCoords) {\r\n          const lnglat = Coords.toLngLat(this.projection, p) as any\r\n          newCoords.push(lnglat)\r\n        }\r\n\r\n        // replace existing coords\r\n        origCoords.length = 0\r\n        origCoords.push(...newCoords)\r\n      }\r\n    },\r\n\r\n    origConvertMultiPolygonCoordinatesToWGS84(multipolygon: any) {\r\n      for (const origCoords of multipolygon.geometry.coordinates) {\r\n        const coordinates = origCoords[0] // multipolygons have an extra array[0] added\r\n\r\n        const newCoords: any = []\r\n        for (const p of coordinates) {\r\n          const lnglat = proj4(this.projection, 'WGS84', p) as any\r\n          newCoords.push(lnglat)\r\n        }\r\n\r\n        origCoords[0] = newCoords\r\n      }\r\n    },\r\n\r\n    convertMultiPolygonCoordinatesToWGS84(multipolygon: any) {\r\n      multipolygon.geometry.coordinates = this.recurseWGS84(multipolygon.geometry.coordinates)\r\n    },\r\n\r\n    recurseWGS84(coords: any[]): any {\r\n      const newCoords = []\r\n\r\n      for (let coordArray of coords) {\r\n        if (Array.isArray(coordArray[0])) {\r\n          newCoords.push(this.recurseWGS84(coordArray))\r\n        } else {\r\n          newCoords.push(proj4(this.projection, 'WGS84', coordArray))\r\n        }\r\n      }\r\n      return newCoords\r\n    },\r\n\r\n    async getDailyDataSummary() {\r\n      const rowTotal: any = {}\r\n      const colTotal: any = {}\r\n      const fromCentroid: any = {}\r\n      const toCentroid: any = {}\r\n\r\n      for (const row of Object.keys(this.zoneData)) {\r\n        // store number of time periods (no totals here)\r\n        fromCentroid[row] = Array(this.headers.length - 1).fill(0)\r\n\r\n        for (const col of Object.keys(this.zoneData[row])) {\r\n          // daily totals\r\n          if (!rowTotal[row]) rowTotal[row] = 0\r\n          if (!colTotal[col]) colTotal[col] = 0\r\n\r\n          if (this.dailyData[row][col]) {\r\n            rowTotal[row] += this.dailyData[row][col]\r\n            colTotal[col] += this.dailyData[row][col]\r\n          }\r\n\r\n          if (!toCentroid[col]) toCentroid[col] = Array(this.headers.length - 1).fill(0)\r\n\r\n          // time-of-day details\r\n          for (let i = 0; i < this.headers.length - 1; i++) {\r\n            // number of time periods\r\n            if (this.zoneData[row][col][i]) {\r\n              fromCentroid[row][i] += this.zoneData[row][col][i]\r\n              toCentroid[col][i] += this.zoneData[row][col][i]\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return { rowTotal, colTotal, from: fromCentroid, to: toCentroid }\r\n    },\r\n\r\n    async loadCSVData() {\r\n      this.loadingText = 'Load CSV data...'\r\n\r\n      let csvFilename = ''\r\n      try {\r\n        csvFilename = await this.findFilenameFromWildcard(\r\n          `${this.myState.subfolder}/${this.vizDetails.csvFile}`\r\n        )\r\n      } catch (e) {\r\n        this.$store.commit(\r\n          'error',\r\n          `Error loading ${this.myState.subfolder}/${this.vizDetails.csvFile}`\r\n        )\r\n        return\r\n      }\r\n\r\n      this.csvWorker = new CSVWorker()\r\n      this.csvWorker.onmessage = (event: MessageEvent) => {\r\n        const message = event.data\r\n        if (message.status) {\r\n          this.loadingText = message.status\r\n        } else if (message.error) {\r\n          this.csvWorker?.terminate()\r\n          this.loadingText = message.error\r\n          this.$store.commit('setStatus', {\r\n            type: Status.ERROR,\r\n            msg: `Aggr.OD: Error loading \"${this.myState.subfolder}/${this.vizDetails.csvFile}\"`,\r\n            desc: `Check the path and filename`,\r\n          })\r\n        } else if (message.finished) {\r\n          this.csvWorker?.terminate()\r\n          this.finishedLoadingData(message)\r\n        }\r\n      }\r\n\r\n      this.csvWorker.postMessage({ fileSystem: this.fileSystem, filePath: csvFilename })\r\n    },\r\n\r\n    async finishedLoadingData(message: any) {\r\n      console.log(222, 'done') // message)\r\n      this.loadingText = 'Building diagram...'\r\n      this.isFinishedLoading = true\r\n      await this.$nextTick()\r\n      this.rowName = message.rowName\r\n      this.colName = message.colName\r\n      this.headers = message.headers\r\n      this.dailyData = message.dailyZoneData\r\n      this.zoneData = message.zoneData\r\n      this.linkData = message.dailyLinkData\r\n\r\n      this.marginals = await this.getDailyDataSummary()\r\n      this.buildCentroids(this.geojson)\r\n      this.convertRegionColors(this.geojson)\r\n      this.addGeojsonToMap(this.geojson)\r\n      this.setMapExtent()\r\n      this.buildSpiderLinks()\r\n      this.setupKeyListeners()\r\n      this.loadingText = ''\r\n    },\r\n\r\n    updateMapExtent(coordinates: any) {\r\n      this._mapExtentXYXY[0] = Math.min(this._mapExtentXYXY[0], coordinates[0])\r\n      this._mapExtentXYXY[1] = Math.min(this._mapExtentXYXY[1], coordinates[1])\r\n      this._mapExtentXYXY[2] = Math.max(this._mapExtentXYXY[2], coordinates[0])\r\n      this._mapExtentXYXY[3] = Math.max(this._mapExtentXYXY[3], coordinates[1])\r\n    },\r\n\r\n    addGeojsonToMap(geojson: any) {\r\n      this.processGeojson()\r\n      this.addGeojsonLayers(geojson)\r\n      this.addNeighborhoodHoverEffects()\r\n    },\r\n\r\n    addGeojsonLayers(geojson: any) {\r\n      if (!this.mymap.getSource('shpsource')) {\r\n        this.mymap.addSource('shpsource', {\r\n          data: geojson,\r\n          type: 'geojson',\r\n        } as any)\r\n      }\r\n\r\n      if (this.mymap.getLayer('shplayer-fill')) this.mymap.removeLayer('shplayer-fill')\r\n      this.mymap.addLayer(\r\n        {\r\n          id: 'shplayer-fill',\r\n          source: 'shpsource',\r\n          type: 'fill',\r\n          paint: {\r\n            'fill-color': ['rgb', ['get', 'blue'], ['get', 'blue'], 255],\r\n            'fill-opacity': 0.5,\r\n          },\r\n        },\r\n        'water'\r\n      )\r\n\r\n      if (this.mymap.getLayer('shplayer-border')) this.mymap.removeLayer('shplayer-border')\r\n      this.mymap.addLayer(\r\n        {\r\n          id: 'shplayer-border',\r\n          source: 'shpsource',\r\n          type: 'line',\r\n          paint: {\r\n            'line-color': '#66f',\r\n            'line-opacity': 0.5,\r\n            'line-width': ['case', ['boolean', ['feature-state', 'hover'], false], 3, 1],\r\n          },\r\n          filter: ['==', 'isVisible', true],\r\n        },\r\n        'centroid-layer'\r\n      )\r\n    },\r\n\r\n    addNeighborhoodHoverEffects() {\r\n      const parent = this\r\n      this.mymap.on('mousemove', 'shplayer-fill', function (e: any) {\r\n        // typescript definitions and mapbox-gl are out of sync at the moment :-(\r\n        // so setFeatureState is missing\r\n        const tsMap = parent.mymap as any\r\n        if (e.features.length > 0) {\r\n          if (parent.hoveredStateId) {\r\n            tsMap.setFeatureState(\r\n              { source: 'shpsource', id: parent.hoveredStateId },\r\n              { hover: false }\r\n            )\r\n          }\r\n          parent.hoveredStateId = e.features[0].properties[parent.idColumn]\r\n          tsMap.setFeatureState({ source: 'shpsource', id: parent.hoveredStateId }, { hover: true })\r\n        }\r\n      })\r\n\r\n      // When the mouse leaves the state-fill layer, update the feature state of the\r\n      // previously hovered feature.\r\n      this.mymap.on('mouseleave', 'shplayer-fill', function () {\r\n        const tsMap = parent.mymap as any\r\n        if (parent.hoveredStateId) {\r\n          tsMap.setFeatureState(\r\n            { source: 'shpsource', id: parent.hoveredStateId },\r\n            { hover: false }\r\n          )\r\n        }\r\n        parent.hoveredStateId = null\r\n      })\r\n    },\r\n\r\n    offsetLineByMeters(line: any, metersToTheRight: number) {\r\n      try {\r\n        const offsetLine = turf.lineOffset(line, metersToTheRight, { units: 'meters' })\r\n        return offsetLine\r\n      } catch (e) {\r\n        // offset can fail if points are exactly on top of each other; ignore.\r\n      }\r\n      return line\r\n    },\r\n\r\n    pressedEscape() {\r\n      this.unselectAllCentroids()\r\n    },\r\n\r\n    pressedArrowKey(delta: number) {},\r\n\r\n    changedTimeSlider(value: any) {\r\n      this.currentTimeBin = value\r\n\r\n      const widthFactor = (this.currentScale / 500) * this.scaleFactor\r\n\r\n      if (this.showTimeRange == false) {\r\n        this.mymap.setPaintProperty('spider-layer', 'line-width', [\r\n          '*',\r\n          widthFactor,\r\n          ['get', value],\r\n        ])\r\n        this.mymap.setPaintProperty('spider-layer', 'line-offset', [\r\n          '*',\r\n          0.5 * widthFactor,\r\n          ['get', value],\r\n        ])\r\n      } else {\r\n        const sumElements: any = ['+']\r\n\r\n        // build the summation expressions: e.g. ['+', ['get', '1'], ['get', '2']]\r\n        let include = false\r\n        for (const header of this.headers) {\r\n          if (header === value[0]) include = true\r\n\r\n          // don't double-count the total\r\n          if (header === TOTAL_MSG) continue\r\n\r\n          if (include) sumElements.push(['get', header])\r\n\r\n          if (header === value[1]) include = false\r\n        }\r\n\r\n        this.mymap.setPaintProperty('spider-layer', 'line-width', ['*', widthFactor, sumElements])\r\n        this.mymap.setPaintProperty('spider-layer', 'line-offset', [\r\n          '*',\r\n          0.5 * widthFactor,\r\n          sumElements,\r\n        ])\r\n      }\r\n\r\n      this.handleCentroidsForTimeOfDayChange(value)\r\n    },\r\n\r\n    changedScale(value: any) {\r\n      if (!this.isFinishedLoading) return\r\n\r\n      // console.log({ slider: value, timebin: this.currentTimeBin })\r\n      this.currentScale = value\r\n      this.changedTimeSlider(this.currentTimeBin)\r\n    },\r\n\r\n    changedLineFilter(value: any) {\r\n      if (value === 'Alle') this.lineFilter = Infinity\r\n      else this.lineFilter = value\r\n\r\n      this.updateSpiderLinks()\r\n    },\r\n  },\r\n  watch: {\r\n    'globalState.viewState'(value: any) {\r\n      if (this.mapIsIndependent) return\r\n      if (!this.mymap || this.isMapMoving || this.thumbnail) {\r\n        this.isMapMoving = false\r\n        return\r\n      }\r\n\r\n      const { bearing, longitude, latitude, zoom, pitch } = value\r\n      // sometimes closing a view returns a null map, ignore it!\r\n      if (!zoom) return\r\n\r\n      try {\r\n        this.mymap.off('move', this.handleMapMotion)\r\n\r\n        this.mymap.jumpTo({\r\n          bearing,\r\n          zoom,\r\n          center: [longitude, latitude],\r\n          pitch,\r\n        })\r\n        // back on again\r\n        this.mymap.on('move', this.handleMapMotion)\r\n      } catch (e) {\r\n        // oh well\r\n      }\r\n    },\r\n\r\n    '$store.state.colorScheme'() {\r\n      this.isDarkMode = this.$store.state.colorScheme === ColorScheme.DarkMode\r\n      if (!this.mymap) return\r\n\r\n      this.mymap.setStyle(globalStore.getters.mapStyle)\r\n\r\n      this.mymap.on('style.load', () => {\r\n        this.buildCentroids(this.geojson)\r\n        this.buildSpiderLinks()\r\n        this.addGeojsonToMap(this.geojson)\r\n        // this.setupKeyListeners()\r\n      })\r\n    },\r\n\r\n    '$store.state.resizeEvents'() {\r\n      if (this.mymap) this.mymap.resize()\r\n    },\r\n\r\n    showTimeRange() {\r\n      // console.log(this.showTimeRange)\r\n    },\r\n\r\n    showCentroids() {\r\n      this.updateCentroidLabels()\r\n    },\r\n\r\n    showCentroidLabels() {\r\n      this.updateCentroidLabels()\r\n    },\r\n  },\r\n  async created() {\r\n    this._mapExtentXYXY = [180, 90, -180, -90]\r\n    this._maximum = 0\r\n  },\r\n  async mounted() {\r\n    globalStore.commit('setFullScreen', !this.thumbnail)\r\n    this.isDarkMode = this.$store.state.colorScheme === ColorScheme.DarkMode\r\n\r\n    this.bounceTimeSlider = debounce(this.changedTimeSlider, 100)\r\n    this.bounceScaleSlider = debounce(this.changedScale, 50)\r\n    this.bounceLineFilter = debounce(this.changedLineFilter, 250)\r\n\r\n    this.myState.thumbnail = this.thumbnail\r\n    this.myState.yamlConfig = this.yamlConfig || ''\r\n    this.myState.subfolder = this.subfolder\r\n\r\n    await this.getVizDetails()\r\n\r\n    if (this.thumbnail) return\r\n\r\n    this.setupMap()\r\n    this.configureSettings()\r\n    this.setupResizer()\r\n  },\r\n\r\n  beforeDestroy() {\r\n    if (this.csvWorker) this.csvWorker.terminate()\r\n  },\r\n\r\n  destroyed() {\r\n    globalStore.commit('setFullScreen', false)\r\n  },\r\n})\r\n\r\nexport default Component\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\nh3 {\r\n  margin: 0px 0px;\r\n}\r\n\r\nh4 {\r\n  margin-left: 3px;\r\n}\r\n\r\n.mycomponent {\r\n  // position: absolute;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-template-rows: 1fr auto;\r\n  // position: relative;\r\n}\r\n\r\n.status-blob {\r\n  position: absolute;\r\n  bottom: 0.5rem;\r\n  left: 0.5rem;\r\n  background-color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  z-index: 5;\r\n  filter: $filterShadow;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.map-container {\r\n  height: 100%;\r\n  min-height: $thumbnailHeight;\r\n  // background-color: #eee;\r\n  grid-column: 1 / 3;\r\n  grid-row: 1 / 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.mymap {\r\n  flex: 1;\r\n}\r\n\r\n.mytitle {\r\n  margin-left: 10px;\r\n  color: var(--text);\r\n}\r\n\r\n.details {\r\n  font-size: 12px;\r\n  margin-bottom: auto;\r\n  margin-top: auto;\r\n}\r\n\r\n.info-header {\r\n  padding: 0.5rem 0rem;\r\n}\r\n\r\n.widgets {\r\n  color: var(--text);\r\n  display: flex;\r\n  flex-direction: row;\r\n  user-select: none;\r\n  background-color: var(--bgMapPanel);\r\n  grid-column: 1 / 3;\r\n}\r\n\r\n.widget-column {\r\n  margin-right: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.status-blob p {\r\n  color: #555;\r\n}\r\n\r\n.lower-right {\r\n  position: absolute;\r\n  bottom: 2rem;\r\n  right: 0.5rem;\r\n  display: flex;\r\n  z-index: 1;\r\n}\r\n\r\n.lower-left {\r\n  width: 10rem;\r\n  position: absolute;\r\n  left: 5px;\r\n  bottom: 2rem;\r\n  right: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1;\r\n  background-color: var(--bgPanel);\r\n  opacity: 0.9;\r\n  filter: $filterShadow;\r\n  border: solid 1px rgba(161, 160, 160, 0.781);\r\n  border-radius: 2px;\r\n  padding-bottom: 0.25rem;\r\n}\r\n\r\n.complication {\r\n  margin: 0rem 0rem 0rem 0.25rem;\r\n}\r\n\r\n.widget-column button {\r\n  // flex-grow: 1;\r\n  margin: 1px 0px;\r\n}\r\n\r\n.heading {\r\n  font-weight: bold;\r\n  text-align: left;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.subheading {\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n  line-height: 1rem;\r\n  margin: 0.25rem 0 0rem 0.5rem;\r\n}\r\n\r\n.description {\r\n  margin-top: 0rem;\r\n  padding: 0rem 0.25rem;\r\n}\r\n\r\n.hide-button {\r\n  grid-column: 1/2;\r\n  grid-row: 2/3;\r\n  margin: auto auto 0.5rem 16.5rem;\r\n  z-index: 20;\r\n}\r\n\r\n.hide-toggle-button {\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n.left-panel {\r\n  z-index: 2;\r\n  position: absolute;\r\n  top: 0rem;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  pointer-events: auto;\r\n  max-height: 50%;\r\n  max-width: 50%;\r\n  width: 18rem;\r\n}\r\n\r\n.mapboxgl-popup-content {\r\n  padding: 0px 20px 0px 0px;\r\n  opacity: 0.95;\r\n  box-shadow: 0 0 3px #00000080;\r\n}\r\n\r\n.white-box {\r\n  padding: 0.5rem 0.25rem 0.5rem 0.25rem;\r\n}\r\n\r\n.zoom-buttons {\r\n  position: absolute;\r\n  top: 0.3rem;\r\n  right: 0.3rem;\r\n  z-index: 1;\r\n}\r\n\r\n.checkbox {\r\n  font-size: 0.9rem;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.checkbox:hover {\r\n  color: var(--textFancy);\r\n}\r\n\r\n.xtime-slider {\r\n  margin-top: -0.25rem;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n}\r\n</style>\r\n","\r\n.mycomponent(:id=\"containerId\")\r\n\r\n  zoom-buttons.zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  .map-container\r\n    .mymap(:id=\"mapId\")\r\n\r\n    .status-blob(v-show=\"!thumbnail && loadingText\")\r\n      p {{ loadingText }}\r\n\r\n    .lower-left(v-if=\"!thumbnail && !loadingText\")\r\n      .subheading {{ $t('lineWidths')}}\r\n      scale-slider.scale-slider(:stops='scaleValues' :initialValue='currentScale' @change='bounceScaleSlider')\r\n\r\n      .subheading {{ $t('hide')}}\r\n      line-filter-slider.scale-slider(\r\n        :initialValue=\"lineFilter\"\r\n        @change='bounceLineFilter')\r\n\r\n    .lower-right(v-if=\"!thumbnail && !isMobile\")\r\n      legend-box.complication(:rows=\"legendRows\")\r\n      scale-box.complication(:rows=\"scaleRows\")\r\n\r\n  .widgets(v-if=\"!thumbnail\" :style=\"{'padding': yamlConfig ? '0 0.5rem 0.5rem 0.5rem' : '0 0'}\")\r\n\r\n    //- TIME SLIDER ----\r\n    .widget-column(v-if=\"this.headers.length > 2\" style=\"min-width: 8rem\")\r\n      h4.heading {{ $t('time')}}\r\n      b-checkbox.checkbox(v-model=\"showTimeRange\") {{ $t('duration') }}\r\n      time-slider.xtime-slider(\r\n        :useRange=\"showTimeRange\"\r\n        :stops=\"headers\"\r\n        :all=\"allTimeBinsLabel\"\r\n        @change=\"bounceTimeSlider\")\r\n\r\n    //- CENTROID CONTROLS\r\n    .widget-column\r\n      h4.heading {{ $t('circle')}}\r\n      b-checkbox.checkbox(v-model=\"showCentroids\")\r\n        | &nbsp;{{ $t('showCentroids')}}\r\n      b-checkbox.checkbox(v-model=\"showCentroidLabels\")\r\n        | &nbsp;{{$t('showNumbers')}}\r\n\r\n    //- ORIG/DEST BUTTONS\r\n    .widget-column(style=\"margin: 0 0 0 auto\")\r\n      h4.heading {{$t('total')}}\r\n      b-button.is-small(@click='clickedOrigins' :class='{\"is-link\": isOrigin ,\"is-active\": isOrigin}') {{$t('origins')}}\r\n      b-button.is-small(@click='clickedDestinations' hint=\"Hide\" :class='{\"is-link\": !isOrigin,\"is-active\": !isOrigin}') {{$t('dest')}}\r\n\r\n"],"names":["i18n","__vue2_script$4","defineComponent","render","_vm","_h","_c","item","staticRenderFns","__vue2_script$3","val","result","$$v","tick","i","__vue2_script$2","__vue2_script$1","useIt","timePeriod","stop","__vue2_script","TOTAL_MSG","FADED","SCALE_WIDTH","Component","CollapsiblePanel","LegendBox","LineFilterSlider","ScaleBox","ScaleSlider","TimeSlider","ZoomButtons","VueSlider","globalStore","svnProject","a","HTTPFileSystem","w","d","e","g","x","viz","mapCamera","filename","text","YAML","nprogress","hasYaml","configuration","key","Status","t","path","folder","files","pattern","match","findMatchingGlobInFiles","shpFilename","dbfFilename","blob","shpFile","readBlob","blob2","dbfFile","error","msg","maplibregl","extent","lnglat","mFac","padding","baubles","elem","feature","id","link","origCoord","destCoord","color","fade","properties","value","parent","labels","radiusField","tsMap","endpoints","props","trips","revTrips","reverseDir","totalTrips","html","geojson","ratio","blue","centroids","centroid","turf.centerOfMass","values","digits","from","to","fromMarginal","toMarginal","hourFrom","hourTo","hour","dailyFrom","dailyTo","options","event","data","shapefile.read","polygon","origCoords","newCoords","p","Coords","multipolygon","coordinates","proj4","coords","coordArray","rowTotal","colTotal","fromCentroid","toCentroid","row","col","csvFilename","CSVWorker","message","_a","_b","line","metersToTheRight","turf.lineOffset","delta","widthFactor","sumElements","include","header","bearing","longitude","latitude","zoom","pitch","ColorScheme","debounce"],"mappings":"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"}