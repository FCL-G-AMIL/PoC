{"version":3,"file":"VehicleAnimation.dfcc428d.js","sources":["../../src/plugins/vehicle-animation/LegendColors.tsx","../../src/plugins/vehicle-animation/SettingsPanel.vue","../../src/plugins/vehicle-animation/SettingsPanel.vue?vue&type=template&lang.js","../../src/plugins/vehicle-animation/DrtRequestLayer.tsx","../../src/plugins/vehicle-animation/TripViz.tsx","../../src/plugins/vehicle-animation/VehicleAnimation.vue","../../src/plugins/vehicle-animation/VehicleAnimation.vue?vue&type=template&lang.js"],"sourcesContent":["import { LegendItem } from '@/Globals'\r\nimport React from 'react'\r\n\r\nexport default function Component(props: {\r\n  title: string\r\n  description?: string\r\n  values: number[]\r\n  items: LegendItem[]\r\n}) {\r\n  const listItems = props.items.map(item => (\r\n    <li key={item.value + item.value[0]} style={{ display: 'flex' }}>\r\n      {item.label && (\r\n        <div\r\n          style={{\r\n            margin: '0 0.5rem 0.0rem 0',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          {item.label}\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: `3px`,\r\n          marginTop: '0.5rem',\r\n          backgroundColor: `rgb(${item.color})`,\r\n        }}\r\n      ></div>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <h4\r\n        style={{\r\n          textAlign: 'left',\r\n          fontWeight: 'bold',\r\n          margin: '1rem 0 0.25rem 0',\r\n          fontSize: '0.8rem',\r\n        }}\r\n      >\r\n        {props.title}\r\n      </h4>\r\n      <p>{props.description}</p>\r\n      <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>{listItems}</ul>\r\n    </div>\r\n  )\r\n}\r\n","<template lang=\"pug\">\r\n.settings-panel-content\r\n  h4 {{ $t('showhide')}}\r\n\r\n  .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\r\n    toggle-button.toggle(\r\n      :width=\"40\"\r\n      :value=\"items[label]\"\r\n      :labels=\"false\"\r\n      :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\r\n      @change=\"$emit('click',label)\")\r\n    label(v-html=\"$t(label)\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      requests: 'DRT&nbsp;Requests',\r\n      passengers: 'Passengers',\r\n      search: 'Search',\r\n      showhide: 'Show/Hide',\r\n      vehicles: 'DRT Vehicles',\r\n      routes: 'Routes',\r\n      speed: 'Speed',\r\n      backgroundTraffic: 'All Traffic',\r\n    },\r\n    de: {\r\n      requests: 'DRT&nbsp;Anfragen',\r\n      passengers: 'Passagiere',\r\n      search: 'Suche',\r\n      showhide: 'Ein-/Ausblenden',\r\n      vehicles: 'DRT Fahrzeuge',\r\n      routes: 'Routen',\r\n      speed: 'Geschwindigkeit',\r\n      backgroundTraffic: 'Alle Fahrzeuge',\r\n    },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport { ToggleButton } from 'vue-js-toggle-button'\r\n\r\nexport default defineComponent({\r\n  name: 'XmasSettingsPanel',\r\n  i18n,\r\n  components: { ToggleButton },\r\n  props: {\r\n    items: { type: Object, required: true },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.settings-panel-content {\r\n  margin: 2rem 0.25rem 0 0.25rem;\r\n}\r\n\r\nh4 {\r\n  font-weight: bold;\r\n  font-size: 0.8rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.row {\r\n  display: 'grid';\r\n  grid-template-columns: 'auto 1fr';\r\n}\r\n\r\nlabel {\r\n  margin: auto 0 auto 0rem;\r\n  text-align: 'left';\r\n}\r\n\r\n.toggle {\r\n  margin-bottom: 0.25rem;\r\n  margin-right: 0.5rem;\r\n}\r\n</style>\r\n","\r\n.settings-panel-content\r\n  h4 {{ $t('showhide')}}\r\n\r\n  .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\r\n    toggle-button.toggle(\r\n      :width=\"40\"\r\n      :value=\"items[label]\"\r\n      :labels=\"false\"\r\n      :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\r\n      @change=\"$emit('click',label)\")\r\n    label(v-html=\"$t(label)\")\r\n\r\n","import { ArcLayer } from '@deck.gl/layers'\r\n\r\nconst defaultProps = {\r\n  currentTime: { type: 'number', value: 0, min: 0 },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  searchFlag: { type: 'number', value: 0 },\r\n}\r\n\r\nexport default class DrtRequestArcLayer extends ArcLayer {\r\n  getShaders() {\r\n    const shaders = super.getShaders()\r\n    shaders.inject = {\r\n      // Timestamp of the vertex\r\n      'vs:#decl': `\\\r\n        attribute float timeStart;\r\n        attribute float timeEnd;\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'vs:#main-start': `\\\r\n        if (searchFlag == 1.0) {\r\n          vTime = 999.0;\r\n        } else if (timeEnd == -1.0 || timeStart > currentTime || timeEnd < currentTime ) {\r\n          vTime = -1.0;\r\n          return;\r\n        } else {\r\n          float nearBeginning = currentTime - timeStart;\r\n          float nearEnd = timeEnd - currentTime;\r\n          vTime = min(nearBeginning, nearEnd);\r\n        }\r\n      `,\r\n      'fs:#decl': `\\\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'fs:#main-start': `\\\r\n      if (searchFlag == 0.0 && vTime == -1.0 ) discard;\r\n      `,\r\n      // fade the traces in and out\r\n      'fs:DECKGL_FILTER_COLOR': `\\\r\n        if (vTime <= 10.0) color.a *= (vTime / 10.0);\r\n      `,\r\n    }\r\n    return shaders\r\n  }\r\n\r\n  initializeState(params: any) {\r\n    super.initializeState(params)\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    attributeManager.addInstanced({\r\n      timeStart: { size: 1, accessor: 'getTimeStart' },\r\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\r\n    })\r\n  }\r\n\r\n  draw(params: any) {\r\n    const { currentTime } = this.props\r\n\r\n    params.uniforms = Object.assign({}, params.uniforms, {\r\n      currentTime,\r\n    })\r\n\r\n    super.draw(params)\r\n  }\r\n}\r\n\r\nDrtRequestArcLayer.layerName = 'DrtRequestArcLayer'\r\nDrtRequestArcLayer.defaultProps = defaultProps\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { StaticMap } from 'react-map-gl'\r\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core'\r\nimport DeckGL from '@deck.gl/react'\r\n\r\nimport DrtRequestLayer from './DrtRequestLayer'\r\nimport MovingIconsLayer from '@/layers/moving-icons/moving-icons-layer'\r\nimport PathTraceLayer from '@/layers/PathTraceLayer'\r\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\r\n\r\nimport globalStore from '@/store'\r\n\r\nconst BASE_URL = import.meta.env.BASE_URL\r\n\r\nconst ICON_MAPPING = {\r\n  marker: { x: 0, y: 0, width: 128, height: 128, mask: true },\r\n  info: { x: 128, y: 0, width: 128, height: 128, mask: true },\r\n  vehicle: { x: 128, y: 128, width: 128, height: 128, mask: true },\r\n  diamond: { x: 0, y: 128, width: 128, height: 128, mask: false },\r\n}\r\n\r\nconst ambientLight = new AmbientLight({\r\n  color: [255, 255, 255],\r\n  intensity: 1.0,\r\n})\r\n\r\nconst pointLight = new PointLight({\r\n  color: [255, 255, 255],\r\n  intensity: 2.0,\r\n  position: [-74.05, 40.7, 8000],\r\n})\r\n\r\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight })\r\n\r\nconst DEFAULT_THEME = {\r\n  vehicleColor: [200, 130, 250],\r\n  trailColor0: [235, 235, 25],\r\n  trailColor1: [23, 184, 190],\r\n  effects: [lightingEffect],\r\n}\r\n\r\nconst DRT_REQUEST = {\r\n  time: 0,\r\n  fromX: 1,\r\n  fromY: 2,\r\n  toX: 3,\r\n  toY: 4,\r\n  veh: 5,\r\n  arrival: 6,\r\n}\r\n\r\nexport default function Component(props: {\r\n  viewId: number\r\n  dark: boolean\r\n  simulationTime: number\r\n  paths: any[]\r\n  drtRequests: any[]\r\n  traces: any[]\r\n  colors: any\r\n  center: [number, number]\r\n  settingsShowLayers: { [label: string]: boolean }\r\n  vehicleLookup: string[]\r\n  searchEnabled: boolean\r\n  onClick: any\r\n}) {\r\n  const {\r\n    simulationTime,\r\n    paths,\r\n    traces,\r\n    drtRequests,\r\n    settingsShowLayers,\r\n    center,\r\n    dark,\r\n    vehicleLookup,\r\n    searchEnabled,\r\n    onClick,\r\n    viewId,\r\n  } = props\r\n\r\n  const theme = DEFAULT_THEME\r\n\r\n  // set initial view\r\n  const [viewState, setViewState] = useState(\r\n    center\r\n      ? ({\r\n          center: [16, 42],\r\n          longitude: center[0],\r\n          latitude: center[1],\r\n          pitch: 0,\r\n          bearing: 0,\r\n          zoom: 10,\r\n        } as any)\r\n      : Object.assign({}, globalStore.state.viewState)\r\n  )\r\n\r\n  // register setViewState in global view updater so we can respond to external map motion\r\n  REACT_VIEW_HANDLES[viewId] = () => {\r\n    setViewState(globalStore.state.viewState)\r\n  }\r\n\r\n  const arcWidth = 1\r\n  const [hoverInfo, setHoverInfo] = useState({} as any)\r\n\r\n  const layers: any = []\r\n\r\n  function handleClick() {\r\n    console.log(hoverInfo)\r\n    // send null as message that blank area was clicked\r\n    if (!hoverInfo.object) {\r\n      onClick(null)\r\n    } else {\r\n      onClick(hoverInfo.object.v)\r\n    }\r\n  }\r\n\r\n  function renderTooltip({ hoverInfo }: any) {\r\n    const { object, x, y } = hoverInfo\r\n\r\n    if (!object) {\r\n      return null\r\n    }\r\n\r\n    const vehicleId = vehicleLookup[object.v]\r\n\r\n    return (\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          backgroundColor: '#ddddeedd',\r\n          borderLeft: '6px solid green',\r\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\r\n          color: '#223',\r\n          padding: '1rem 1rem',\r\n          position: 'absolute',\r\n          left: x + 40,\r\n          top: y - 30,\r\n        }}\r\n      >\r\n        <big>\r\n          <b>{vehicleId}</b>\r\n        </big>\r\n        <div>Passagiere: {object.occ} </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (settingsShowLayers.routes)\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new PathTraceLayer({\r\n        id: 'Routen',\r\n        data: traces,\r\n        currentTime: simulationTime,\r\n        getSourcePosition: (d: any) => d.p0,\r\n        getTargetPosition: (d: any) => d.p1,\r\n        getTimeStart: (d: any) => d.t0,\r\n        getTimeEnd: (d: any) => d.t1,\r\n        getColor: (d: any) => props.colors[d.occ],\r\n        getWidth: 1, // (d: any) => 3.0 * (d.occ + 1) - 1,\r\n        opacity: 0.8,\r\n        widthMinPixels: 1,\r\n        rounded: false,\r\n        shadowEnabled: false,\r\n        searchFlag: searchEnabled ? 1.0 : 0.0,\r\n        pickable: true,\r\n        autoHighlight: true,\r\n        highlightColor: [255, 0, 255],\r\n        onHover: setHoverInfo,\r\n      })\r\n    )\r\n\r\n  if (settingsShowLayers.vehicles)\r\n    layers.push(\r\n      //@ts-ignore\r\n      new MovingIconsLayer({\r\n        id: 'Vehicles',\r\n        data: paths,\r\n        getPathStart: (d: any) => d.p0,\r\n        getPathEnd: (d: any) => d.p1,\r\n        getTimeStart: (d: any) => d.t0,\r\n        getTimeEnd: (d: any) => d.t1,\r\n        getIcon: (d: any) => 'vehicle',\r\n        getColor: (d: any) => props.colors[d.occ],\r\n        iconMoving: 'vehicle',\r\n        iconStill: 'diamond',\r\n        getSize: searchEnabled ? 72 : 64,\r\n        opacity: 1.0,\r\n        currentTime: simulationTime,\r\n        shadowEnabled: false,\r\n        noAlloc: true,\r\n        iconAtlas: BASE_URL + '/images/icon-atlas.png',\r\n        iconMapping: ICON_MAPPING,\r\n        sizeScale: 0.5,\r\n        billboard: false,\r\n        pickable: true,\r\n        depthTest: true,\r\n        autoHighlight: false,\r\n        highlightColor: [255, 0, 255],\r\n        onHover: setHoverInfo,\r\n        parameters: {\r\n          depthTest: false,\r\n        },\r\n      })\r\n    )\r\n\r\n  if (settingsShowLayers.requests)\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new DrtRequestLayer({\r\n        id: 'DRT Requests',\r\n        data: drtRequests,\r\n        currentTime: simulationTime,\r\n        getSourcePosition: (d: any) => [d[DRT_REQUEST.fromX], d[DRT_REQUEST.fromY]],\r\n        getTargetPosition: (d: any) => [d[DRT_REQUEST.toX], d[DRT_REQUEST.toY]],\r\n        getTimeStart: (d: any) => d[DRT_REQUEST.time],\r\n        getTimeEnd: (d: any) => d[DRT_REQUEST.arrival],\r\n        getSourceColor: [255, 0, 255],\r\n        getTargetColor: [200, 255, 255],\r\n        getWidth: arcWidth,\r\n        opacity: 0.5,\r\n        searchFlag: searchEnabled ? 1.0 : 0.0,\r\n      })\r\n    )\r\n\r\n  return (\r\n    <DeckGL\r\n      layers={layers}\r\n      effects={theme.effects}\r\n      pickingRadius={5}\r\n      viewState={viewState}\r\n      controller={true}\r\n      getCursor={() => 'pointer'}\r\n      onClick={handleClick}\r\n      onViewStateChange={(e: any) => {\r\n        globalStore.commit('setMapCamera', e.viewState)\r\n      }}\r\n    >\r\n      {\r\n        /*\r\n        // @ts-ignore */\r\n        <StaticMap mapStyle={globalStore.getters.mapStyle} mapboxApiAccessToken={MAPBOX_TOKEN} />\r\n      }\r\n      {renderTooltip({ hoverInfo })}\r\n    </DeckGL>\r\n  )\r\n}\r\n","<template lang=\"pug\">\r\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\r\n\r\n  trip-viz.anim(v-if=\"!thumbnail\"\r\n                :center = \"vizDetails.center\"\r\n                :colors = \"COLOR_OCCUPANCY\"\r\n                :drtRequests = \"$options.drtRequests\"\r\n                :dark = \"globalState.isDarkMode\"\r\n                :paths = \"$options.paths\"\r\n                :settingsShowLayers = \"SETTINGS\"\r\n                :searchEnabled = \"searchEnabled\"\r\n                :simulationTime = \"simulationTime\"\r\n                :traces = \"$options.traces\"\r\n                :vehicleLookup = \"vehicleLookup\"\r\n                :viewId = \"viewId\"\r\n                :onClick = \"handleClick\")\r\n\r\n  zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  //- isLoaded && !thumbnail\")\r\n  .right-side(v-if=\"isLoaded && !thumbnail\")\r\n    collapsible-panel(direction=\"right\")\r\n      .big.clock\r\n        p {{ myState.clock }}\r\n\r\n      .panel-items\r\n        legend-colors.legend-block(v-if=\"legendItems.length\"\r\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\r\n\r\n        legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\")\r\n\r\n        .search-panel\r\n          p.speed-label(:style=\"{margin: '1rem 0 0 0'}\") {{ $t('search') }}\r\n          form(autocomplete=\"off\")\r\n          .field\r\n            p.control.has-icons-left\r\n              input.input.is-small(type=\"email\" :placeholder=\"`${$t('search')}...`\" v-model=\"searchTerm\")\r\n              span.icon.is-small.is-left\r\n                i.fas.fa-search\r\n\r\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\r\n\r\n        .speed-block\r\n          p.speed-label {{ $t('speed') }}:\r\n            br\r\n            | {{ speed }}x\r\n\r\n          b-slider.speed-slider(v-model=\"speed\"\r\n            :min=\"speedStops[0]\"\r\n            :max=\"speedStops[speedStops.length-1]\"\r\n            :duration=\"0\"\r\n            :dotSize=\"20\"\r\n            :tooltip=\"true\"\r\n            tooltip-placement=\"bottom\"\r\n            :tooltip-formatter=\"val => val + 'x'\"\r\n          )\r\n            template(v-for=\"val in speedStops\")\r\n              b-slider-tick(:value=\"val\" :key=\"val\")\r\n\r\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\r\n      @click='toggleSimulation'\r\n      @time='setTime'\r\n      :timeStart = \"timeStart\"\r\n      :timeEnd = \"timeEnd\"\r\n      :isRunning = \"myState.isRunning\"\r\n      :currentTime = \"simulationTime\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      requests: 'DRT Requests',\r\n      passengers: 'Passengers',\r\n      search: 'Search',\r\n      showhide: 'Show/Hide',\r\n      vehicles: 'Vehicles',\r\n      routes: 'Routes',\r\n      speed: 'Speed',\r\n    },\r\n    de: {\r\n      requests: 'DRT Anfragen',\r\n      passengers: 'Passagiere',\r\n      search: 'Suche',\r\n      showhide: 'Ein-/Ausblenden',\r\n      vehicles: 'DRT Fahrzeuge',\r\n      routes: 'DRT Routen',\r\n      speed: 'Geschwindigkeit',\r\n    },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\n\r\nimport VueSlider from 'vue-slider-component'\r\nimport { ToggleButton } from 'vue-js-toggle-button'\r\nimport readBlob from 'read-blob'\r\nimport YAML from 'yaml'\r\nimport crossfilter from 'crossfilter2'\r\nimport { blobToArrayBuffer, blobToBinaryString } from 'blob-util'\r\nimport * as coroutines from 'js-coroutines'\r\n\r\nimport globalStore from '@/store'\r\nimport pako from '@aftersim/pako'\r\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\r\nimport LegendColors from './LegendColors'\r\nimport PlaybackControls from '@/components/PlaybackControls.vue'\r\nimport SettingsPanel from './SettingsPanel.vue'\r\nimport ZoomButtons from '@/components/ZoomButtons.vue'\r\nimport { arrayBufferToBase64 } from '@/js/util'\r\n\r\nimport {\r\n  ColorScheme,\r\n  FileSystem,\r\n  LegendItem,\r\n  LegendItemType,\r\n  FileSystemConfig,\r\n  VisualizationPlugin,\r\n  LIGHT_MODE,\r\n  DARK_MODE,\r\n  REACT_VIEW_HANDLES,\r\n} from '@/Globals'\r\n\r\nimport TripViz from './TripViz'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\n\r\nconst MyComponent = defineComponent({\r\n  name: 'VehicleAnimationPlugin',\r\n  i18n,\r\n  components: {\r\n    CollapsiblePanel,\r\n    SettingsPanel,\r\n    LegendColors,\r\n    TripViz,\r\n    VueSlider,\r\n    PlaybackControls,\r\n    ToggleButton,\r\n    ZoomButtons,\r\n  },\r\n  props: {\r\n    root: { type: String, required: true },\r\n    subfolder: { type: String, required: true },\r\n    yamlConfig: String,\r\n    thumbnail: Boolean,\r\n  },\r\n  data: () => {\r\n    const COLOR_OCCUPANCY = {\r\n      0: [140, 140, 160],\r\n      1: [85, 255, 85],\r\n      2: [255, 255, 85],\r\n      3: [240, 110, 30],\r\n      4: [192, 30, 50],\r\n    } as any\r\n\r\n    const SETTINGS = {\r\n      vehicles: true,\r\n      routes: true,\r\n      requests: false,\r\n    } as any\r\n\r\n    return {\r\n      viewId: Math.floor(1e12 * Math.random()),\r\n      COLOR_OCCUPANCY,\r\n      SETTINGS,\r\n      legendItems: Object.keys(COLOR_OCCUPANCY).map(key => {\r\n        return {\r\n          type: LegendItemType.line,\r\n          color: COLOR_OCCUPANCY[key],\r\n          value: key,\r\n          label: key,\r\n        }\r\n      }),\r\n\r\n      legendRequests: [{ type: LegendItemType.line, color: [255, 0, 255], value: 0, label: '' }],\r\n\r\n      vizDetails: {\r\n        network: '',\r\n        drtTrips: '',\r\n        projection: '',\r\n        title: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        center: [13.45, 52.5],\r\n        zoom: 10,\r\n        mapIsIndependent: false,\r\n        theme: '',\r\n      },\r\n\r\n      myState: {\r\n        statusMessage: '',\r\n        clock: '00:00',\r\n        colorScheme: ColorScheme.DarkMode,\r\n        isRunning: false,\r\n        isShowingHelp: false,\r\n        subfolder: '',\r\n        yamlConfig: '',\r\n        thumbnail: false,\r\n        data: [] as any[],\r\n      },\r\n\r\n      timeStart: 0,\r\n      timeEnd: 86400,\r\n\r\n      traces: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      traceStart: {} as crossfilter.Dimension<any, any>,\r\n      traceEnd: {} as crossfilter.Dimension<any, any>,\r\n      traceVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      paths: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      pathStart: {} as crossfilter.Dimension<any, any>,\r\n      pathEnd: {} as crossfilter.Dimension<any, any>,\r\n      pathVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      requests: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      requestStart: {} as crossfilter.Dimension<any, any>,\r\n      requestEnd: {} as crossfilter.Dimension<any, any>,\r\n      requestVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      simulationTime: 6 * 3600, // 8 * 3600 + 10 * 60 + 10\r\n\r\n      timeElapsedSinceLastFrame: 0,\r\n\r\n      searchTerm: '',\r\n      searchEnabled: false,\r\n\r\n      globalState: globalStore.state,\r\n      isDarkMode: globalStore.state.isDarkMode,\r\n      isLoaded: true,\r\n      showHelp: false,\r\n\r\n      speedStops: [-10, -5, -2, -1, -0.5, -0.25, 0, 0.25, 0.5, 1, 2, 5, 10],\r\n      speed: 1,\r\n\r\n      legendBits: [] as any[],\r\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\r\n\r\n      vehicleLookup: [] as string[],\r\n      vehicleLookupString: {} as { [id: string]: number },\r\n      isPausedDueToHiding: false,\r\n    }\r\n  },\r\n  computed: {\r\n    fileApi(): HTTPFileSystem {\r\n      return new HTTPFileSystem(this.fileSystem, globalStore)\r\n    },\r\n\r\n    fileSystem(): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === this.root\r\n      )\r\n      if (svnProject.length === 0) {\r\n        console.log('no such project')\r\n        throw Error\r\n      }\r\n      return svnProject[0]\r\n    },\r\n\r\n    urlThumbnail(): string {\r\n      return this.thumbnailUrl\r\n    },\r\n    textColor(): any {\r\n      const lightmode = {\r\n        text: '#3498db',\r\n        bg: '#eeeef480',\r\n      }\r\n\r\n      const darkmode = {\r\n        text: 'white',\r\n        bg: '#181518aa',\r\n      }\r\n\r\n      return this.myState.colorScheme === ColorScheme.DarkMode ? darkmode : lightmode\r\n    },\r\n  },\r\n  watch: {\r\n    '$store.state.viewState'() {\r\n      if (this.vizDetails.mapIsIndependent) return\r\n\r\n      if (!REACT_VIEW_HANDLES[this.viewId]) return\r\n      REACT_VIEW_HANDLES[this.viewId]()\r\n    },\r\n\r\n    async 'globalState.authAttempts'() {\r\n      console.log('AUTH CHANGED - Reload')\r\n      if (!this.yamlConfig) this.buildRouteFromUrl()\r\n      await this.getVizDetails()\r\n    },\r\n\r\n    'globalState.colorScheme'() {\r\n      this.isDarkMode = this.globalState.colorScheme === ColorScheme.DarkMode\r\n      this.updateLegendColors()\r\n    },\r\n\r\n    searchTerm() {\r\n      const vehicleNumber = this.vehicleLookupString[this.searchTerm]\r\n      if (vehicleNumber > -1) {\r\n        console.log('vehicle', vehicleNumber)\r\n        this.pathVehicle?.filterExact(vehicleNumber)\r\n        this.traceVehicle?.filterExact(vehicleNumber)\r\n        this.requestVehicle?.filterExact(vehicleNumber)\r\n        this.requestStart.filterAll()\r\n        this.requestEnd.filterAll()\r\n        this.searchEnabled = true\r\n      } else {\r\n        console.log('nope')\r\n        this.pathVehicle?.filterAll()\r\n        this.traceVehicle?.filterAll()\r\n        this.requestVehicle?.filterAll()\r\n        this.searchEnabled = false\r\n      }\r\n      this.updateDatasetFilters()\r\n    },\r\n  },\r\n  methods: {\r\n    async handleSettingChange(label: string) {\r\n      console.log(label)\r\n      this.SETTINGS[label] = !this.SETTINGS[label]\r\n      this.updateDatasetFilters()\r\n      this.simulationTime += 1 // this will force a redraw\r\n    },\r\n\r\n    // this happens if viz is the full page, not a thumbnail on a project page\r\n    buildRouteFromUrl() {\r\n      const params = this.$route.params\r\n      if (!params.project || !params.pathMatch) {\r\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\r\n        return\r\n      }\r\n\r\n      // subfolder and config file\r\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\r\n      const subfolder = params.pathMatch.substring(0, sep)\r\n      const config = params.pathMatch.substring(sep)\r\n\r\n      this.myState.subfolder = subfolder\r\n      this.myState.yamlConfig = config\r\n    },\r\n\r\n    async getVizDetails() {\r\n      // first get config\r\n      try {\r\n        // might be a project config:\r\n        const filename =\r\n          this.myState.yamlConfig.indexOf('/') > -1\r\n            ? this.myState.yamlConfig\r\n            : this.myState.subfolder + '/' + this.myState.yamlConfig\r\n\r\n        const text = await this.fileApi.getFileText(filename)\r\n        this.vizDetails = YAML.parse(text)\r\n      } catch (err) {\r\n        console.log('failed')\r\n        const e = err as any\r\n        // maybe it failed because password?\r\n        if (this.fileSystem.needPassword && e.status === 401) {\r\n          globalStore.commit('requestLogin', this.fileSystem.slug)\r\n        }\r\n      }\r\n\r\n      // initial view\r\n      if (this.vizDetails.theme) this.$store.commit('setTheme', this.vizDetails.theme)\r\n\r\n      if (this.vizDetails.center) {\r\n        this.$store.commit('setMapCamera', {\r\n          longitude: this.vizDetails.center[0],\r\n          latitude: this.vizDetails.center[1],\r\n          zoom: this.vizDetails.zoom || 10,\r\n          pitch: 10,\r\n          bearing: 0,\r\n        })\r\n      }\r\n\r\n      // title\r\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Agent Animation'\r\n      this.$emit('title', t)\r\n\r\n      this.buildThumbnail()\r\n    },\r\n\r\n    async buildThumbnail() {\r\n      if (this.thumbnail && this.vizDetails.thumbnail) {\r\n        try {\r\n          const blob = await this.fileApi.getFileBlob(\r\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\r\n          )\r\n          const buffer = await readBlob.arraybuffer(blob)\r\n          const base64 = arrayBufferToBase64(buffer)\r\n          if (base64)\r\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n      }\r\n    },\r\n\r\n    handleClick(vehicleNumber: any) {\r\n      // null means empty area clicked: clear map.\r\n      if (vehicleNumber === null) {\r\n        this.searchTerm = ''\r\n        return\r\n      }\r\n\r\n      const vehId = this.vehicleLookup[vehicleNumber]\r\n      console.log(vehId)\r\n\r\n      // set -- or clear -- search box!\r\n      if (this.searchTerm === vehId) this.searchTerm = ''\r\n      else this.searchTerm = vehId\r\n    },\r\n\r\n    updateLegendColors() {\r\n      // const theme = this.myState.colorScheme == ColorScheme.LightMode ? LIGHT_MODE : DARK_MODE\r\n      // this.legendBits = [\r\n      //   { label: 'susceptible', color: theme.susceptible },\r\n      //   { label: 'latently infected', color: theme.infectedButNotContagious },\r\n      //   { label: 'contagious', color: theme.contagious },\r\n      //   { label: 'symptomatic', color: theme.symptomatic },\r\n      //   { label: 'seriously ill', color: theme.seriouslyIll },\r\n      //   { label: 'critical', color: theme.critical },\r\n      //   { label: 'recovered', color: theme.recovered },\r\n      // ]\r\n    },\r\n\r\n    setWallClock() {\r\n      const hour = Math.floor(this.simulationTime / 3600)\r\n      const minute = Math.floor(this.simulationTime / 60) % 60\r\n      this.myState.clock = `${hour < 10 ? '0' : ''}${hour}${minute < 10 ? ':0' : ':'}${minute}`\r\n    },\r\n\r\n    setTime(seconds: number) {\r\n      this.simulationTime = seconds\r\n      this.setWallClock()\r\n\r\n      // only filter if search is disabled and we have data loaded already\r\n      if (this.traceStart && this.pathStart && this.requestStart) {\r\n        this.pathStart.filter([0, this.simulationTime])\r\n        this.pathEnd.filter([this.simulationTime, Infinity])\r\n\r\n        // scrub vehicles if search is disabled\r\n        if (!this.searchEnabled) {\r\n          this.traceStart.filter([0, this.simulationTime])\r\n          this.traceEnd.filter([this.simulationTime, Infinity])\r\n          this.requestStart.filter([0, this.simulationTime])\r\n          this.requestEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n      }\r\n\r\n      //@ts-ignore\r\n      this.$options.paths = this.paths.allFiltered()\r\n      //@ts-ignore\r\n      this.$options.traces = this.traces.allFiltered()\r\n      //@ts-ignore\r\n      this.$options.drtRequests = this.requests.allFiltered()\r\n    },\r\n\r\n    toggleSimulation() {\r\n      this.myState.isRunning = !this.myState.isRunning\r\n      this.timeElapsedSinceLastFrame = Date.now()\r\n\r\n      // ok so, many times I mashed the play/pause wondering why things wouldn't\r\n      // start moving. Turns out a 0x speed is not very helpful! Help the user\r\n      // out and switch the speed up if they press play.\r\n      if (this.myState.isRunning && this.speed === 0.0) this.speed = 1.0\r\n\r\n      // and begin!\r\n      if (this.myState.isRunning) this.animate()\r\n    },\r\n\r\n    async parseDrtRequests(requests: any[]) {\r\n      if (this.vehicleLookup.length) {\r\n        for (const request of requests) {\r\n          try {\r\n            request[5] = this.vehicleLookupString[request[5]]\r\n          } catch (e) {}\r\n        }\r\n      }\r\n\r\n      return crossfilter(requests)\r\n    },\r\n\r\n    async parseVehicles(trips: any[]) {\r\n      const allTrips: any[] = []\r\n      let vehNumber = -1\r\n\r\n      await coroutines.forEachAsync(trips, (trip: any) => {\r\n        const path = trip.path\r\n        const timestamps = trip.timestamps\r\n        const passengers = trip.passengers\r\n\r\n        // attach vehicle ID to each segment so we can click\r\n        vehNumber++\r\n        this.vehicleLookup[vehNumber] = trip.id\r\n        this.vehicleLookupString[trip.id] = vehNumber\r\n\r\n        for (let i = 0; i < trip.path.length - 1; i++) {\r\n          allTrips.push({\r\n            t0: timestamps[i],\r\n            t1: timestamps[i + 1],\r\n            p0: path[i],\r\n            p1: path[i + 1],\r\n            v: vehNumber,\r\n            occ: passengers[i],\r\n          })\r\n        }\r\n      })\r\n      return crossfilter(allTrips)\r\n    },\r\n\r\n    updateDatasetFilters() {\r\n      // dont' filter if we haven't loaded yet\r\n      if (!this.traceStart || !this.pathStart || !this.requestStart) return\r\n\r\n      // filter out all traces that havent started or already finished\r\n      if (this.SETTINGS.routes) {\r\n        if (this.searchEnabled) {\r\n          this.traceStart.filterAll()\r\n          this.traceEnd.filterAll()\r\n        } else {\r\n          this.traceStart.filter([0, this.simulationTime])\r\n          this.traceEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n        //@ts-ignore\r\n        this.$options.traces = this.traces.allFiltered()\r\n      }\r\n\r\n      if (this.SETTINGS.vehicles) {\r\n        this.pathStart.filter([0, this.simulationTime])\r\n        this.pathEnd.filter([this.simulationTime, Infinity])\r\n        //@ts-ignore:\r\n        this.$options.paths = this.paths.allFiltered()\r\n      }\r\n\r\n      if (this.SETTINGS.requests) {\r\n        if (this.searchEnabled) {\r\n          this.requestStart.filterAll()\r\n          this.requestEnd.filterAll()\r\n        } else {\r\n          this.requestStart.filter([0, this.simulationTime])\r\n          this.requestEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n        //@ts-ignore\r\n        this.$options.drtRequests = this.requests.allFiltered()\r\n      }\r\n    },\r\n\r\n    animate() {\r\n      if (this.myState.isRunning) {\r\n        const elapsed = Date.now() - this.timeElapsedSinceLastFrame\r\n        this.timeElapsedSinceLastFrame += elapsed\r\n        this.simulationTime += elapsed * this.speed * 0.06\r\n\r\n        this.updateDatasetFilters()\r\n        this.setWallClock()\r\n        window.requestAnimationFrame(this.animate)\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange() {\r\n      if (this.isPausedDueToHiding && !document.hidden) {\r\n        console.log('unpausing')\r\n        this.isPausedDueToHiding = false\r\n        this.toggleSimulation()\r\n      } else if (this.myState.isRunning && document.hidden) {\r\n        console.log('pausing')\r\n        this.isPausedDueToHiding = true\r\n        this.toggleSimulation()\r\n      }\r\n    },\r\n\r\n    // convert path/timestamp info into path traces we can use\r\n    async parseRouteTraces(trips: any[]) {\r\n      let countTraces = 0\r\n      let vehNumber = -1\r\n\r\n      const traces: any = []\r\n\r\n      await coroutines.forEachAsync(trips, (vehicle: any) => {\r\n        vehNumber++\r\n\r\n        let time = vehicle.timestamps[0]\r\n        let nextTime = vehicle.timestamps[0]\r\n\r\n        let segments: any[] = []\r\n\r\n        for (let i = 1; i < vehicle.path.length; i++) {\r\n          nextTime = vehicle.timestamps[i]\r\n\r\n          // same point? start of new path.\r\n          if (\r\n            vehicle.path[i][0] === vehicle.path[i - 1][0] &&\r\n            vehicle.path[i][1] === vehicle.path[i - 1][1]\r\n          ) {\r\n            segments.forEach(segment => {\r\n              segment.t1 = vehicle.timestamps[i - 1]\r\n            })\r\n\r\n            traces.push(...segments)\r\n\r\n            segments = []\r\n            time = nextTime\r\n          } else {\r\n            segments.push({\r\n              t0: time,\r\n              p0: vehicle.path[i - 1],\r\n              p1: vehicle.path[i],\r\n              v: vehNumber,\r\n              occ: vehicle.passengers[i - 1],\r\n            })\r\n          }\r\n        }\r\n\r\n        // save final segments\r\n        segments.forEach(segment => {\r\n          segment.t1 = nextTime\r\n        })\r\n        traces.push(...segments)\r\n      })\r\n\r\n      return crossfilter(traces)\r\n    },\r\n\r\n    async loadFiles() {\r\n      let trips: any[] = []\r\n      let drtRequests: any = []\r\n\r\n      try {\r\n        if (this.vizDetails.drtTrips.endsWith('json')) {\r\n          const json = await this.fileApi.getFileJson(\r\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\r\n          )\r\n          trips = json.trips\r\n          drtRequests = json.drtRequests\r\n        } else if (this.vizDetails.drtTrips.endsWith('gz')) {\r\n          const blob = await this.fileApi.getFileBlob(\r\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\r\n          )\r\n          const blobString = blob ? await blobToBinaryString(blob) : null\r\n          let text = await coroutines.run(pako.inflateAsync(blobString, { to: 'string' }))\r\n          const json = JSON.parse(text)\r\n\r\n          trips = json.trips\r\n          drtRequests = json.drtRequests\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n        this.myState.statusMessage = '' + e\r\n      }\r\n      return { trips, drtRequests }\r\n    },\r\n\r\n    toggleLoaded(loaded: boolean) {\r\n      this.isLoaded = loaded\r\n    },\r\n\r\n    rotateColors() {\r\n      this.myState.colorScheme =\r\n        this.myState.colorScheme === ColorScheme.DarkMode\r\n          ? ColorScheme.LightMode\r\n          : ColorScheme.DarkMode\r\n      localStorage.setItem('plugin/agent-animation/colorscheme', this.myState.colorScheme)\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    globalStore.commit('setFullScreen', !this.thumbnail)\r\n\r\n    this.myState.thumbnail = this.thumbnail\r\n    this.myState.yamlConfig = this.yamlConfig ?? ''\r\n    this.myState.subfolder = this.subfolder\r\n\r\n    await this.getVizDetails()\r\n\r\n    if (this.thumbnail) return\r\n\r\n    this.showHelp = false\r\n    this.updateLegendColors()\r\n\r\n    this.setWallClock()\r\n\r\n    this.myState.statusMessage = '/ Dateien laden...'\r\n    console.log('loading files')\r\n    const { trips, drtRequests } = await this.loadFiles()\r\n\r\n    console.log('parsing vehicle motion')\r\n    this.myState.statusMessage = `${this.$t('vehicles')}...`\r\n    this.paths = await this.parseVehicles(trips)\r\n    this.pathStart = this.paths.dimension(d => d.t0)\r\n    this.pathEnd = this.paths.dimension(d => d.t1)\r\n    this.pathVehicle = this.paths.dimension(d => d.v)\r\n\r\n    console.log('Routes...')\r\n    this.myState.statusMessage = `${this.$t('routes')}...`\r\n    this.traces = await this.parseRouteTraces(trips)\r\n    this.traceStart = this.traces.dimension(d => d.t0)\r\n    this.traceEnd = this.traces.dimension(d => d.t1)\r\n    this.traceVehicle = this.traces.dimension(d => d.v)\r\n\r\n    console.log('Requests...')\r\n    this.myState.statusMessage = `${this.$t('requests')}...`\r\n    this.requests = await this.parseDrtRequests(drtRequests)\r\n    this.requestStart = this.requests.dimension(d => d[0]) // time0\r\n    this.requestEnd = this.requests.dimension(d => d[6]) // arrival\r\n    this.requestVehicle = this.requests.dimension(d => d[5])\r\n\r\n    console.log('GO!')\r\n    this.myState.statusMessage = ''\r\n\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false)\r\n\r\n    this.myState.isRunning = true\r\n    this.timeElapsedSinceLastFrame = Date.now()\r\n    this.animate()\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener('visibilityChange', this.handleVisibilityChange)\r\n    globalStore.commit('setFullScreen', false)\r\n    this.$store.commit('setFullScreen', false)\r\n    this.myState.isRunning = false\r\n  },\r\n})\r\n\r\nexport default MyComponent\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '~/vue-slider-component/theme/default.css';\r\n@import '@/styles.scss';\r\n\r\n.gl-app {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  display: grid;\r\n  pointer-events: none;\r\n  min-height: $thumbnailHeight;\r\n  background: url('assets/thumbnail.jpg') no-repeat;\r\n  background-size: cover;\r\n  grid-template-columns: 1fr min-content;\r\n  grid-template-rows: auto auto 1fr auto;\r\n  grid-template-areas:\r\n    'title         clock'\r\n    '.           rightside'\r\n    'playback    rightside';\r\n}\r\n\r\n.gl-app.hide-thumbnail {\r\n  background: none;\r\n}\r\n\r\n.nav {\r\n  z-index: 5;\r\n  grid-column: 1 / 4;\r\n  grid-row: 1 / 4;\r\n  box-shadow: 0px 2px 10px #22222266;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: auto auto 0 0;\r\n  background-color: var(--bgPanel);\r\n  padding: 0rem 3rem;\r\n\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n\r\n    &.router-link-exact-active {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: auto 0.5rem auto 0;\r\n    font-weight: normal;\r\n    padding: 0 0;\r\n    color: var(--textFancy);\r\n  }\r\n}\r\n\r\n.speed-block {\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.legend-block {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.speed-slider {\r\n  flex: 1;\r\n  width: 100%;\r\n  margin: 0.5rem 0.25rem 0.25rem 0rem;\r\n  padding: 0 0.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.big {\r\n  padding: 0rem 0;\r\n  font-size: 2.5rem;\r\n  line-height: 3.75rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.right-side {\r\n  width: 11rem;\r\n  grid-area: rightside;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  pointer-events: auto;\r\n  margin-top: auto;\r\n  margin-bottom: 35px;\r\n  z-index: 5;\r\n}\r\n\r\n.bottom-area {\r\n  grid-area: playback;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: auto;\r\n  margin-bottom: 35px;\r\n  padding: 0.5rem 1rem;\r\n  pointer-events: auto;\r\n  width: 100%;\r\n}\r\n\r\n.settings-area {\r\n  z-index: 20;\r\n  pointer-events: auto;\r\n  font-size: 0.8rem;\r\n  padding: 0.25rem 0;\r\n  margin: 1.5rem 0rem 0 0;\r\n}\r\n\r\n.anim {\r\n  grid-column: 1 / 3;\r\n  grid-row: 1 / 7;\r\n  pointer-events: auto;\r\n}\r\n\r\n.speed-label {\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.clock {\r\n  color: white;\r\n  width: 100%;\r\n  background-color: #000000cc;\r\n  border: 3px solid white;\r\n  color: white;\r\n}\r\n\r\n.clock p {\r\n  text-align: center;\r\n  padding: 5px 1.5rem;\r\n}\r\n\r\n.tooltip {\r\n  padding: 5rem 5rem;\r\n  background-color: #ccc;\r\n}\r\n\r\n.panel-items {\r\n  margin: 0.5rem 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\ninput {\r\n  border: none;\r\n  background-color: var(--bgCream);\r\n  color: #ccc;\r\n}\r\n\r\n.left-side {\r\n  grid-column: 1/4;\r\n  grid-row: 1/4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  pointer-events: auto;\r\n  margin: 0 auto 0 0;\r\n  z-index: 1;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n  .nav {\r\n    padding: 0.5rem 0.5rem;\r\n  }\r\n\r\n  .clock {\r\n    text-align: center;\r\n  }\r\n\r\n  .right-side {\r\n    font-size: 0.7rem;\r\n    margin-right: 0.25rem;\r\n  }\r\n\r\n  .big {\r\n    padding: 0 0rem;\r\n    margin-top: 0.5rem;\r\n    font-size: 1.3rem;\r\n    line-height: 2rem;\r\n  }\r\n\r\n  .side-section {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .extra-buttons {\r\n    margin-right: 1rem;\r\n  }\r\n  .playback-stuff {\r\n    padding-right: 1rem;\r\n  }\r\n}\r\n</style>\r\n","\r\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\r\n\r\n  trip-viz.anim(v-if=\"!thumbnail\"\r\n                :center = \"vizDetails.center\"\r\n                :colors = \"COLOR_OCCUPANCY\"\r\n                :drtRequests = \"$options.drtRequests\"\r\n                :dark = \"globalState.isDarkMode\"\r\n                :paths = \"$options.paths\"\r\n                :settingsShowLayers = \"SETTINGS\"\r\n                :searchEnabled = \"searchEnabled\"\r\n                :simulationTime = \"simulationTime\"\r\n                :traces = \"$options.traces\"\r\n                :vehicleLookup = \"vehicleLookup\"\r\n                :viewId = \"viewId\"\r\n                :onClick = \"handleClick\")\r\n\r\n  zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  //- isLoaded && !thumbnail\")\r\n  .right-side(v-if=\"isLoaded && !thumbnail\")\r\n    collapsible-panel(direction=\"right\")\r\n      .big.clock\r\n        p {{ myState.clock }}\r\n\r\n      .panel-items\r\n        legend-colors.legend-block(v-if=\"legendItems.length\"\r\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\r\n\r\n        legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\")\r\n\r\n        .search-panel\r\n          p.speed-label(:style=\"{margin: '1rem 0 0 0'}\") {{ $t('search') }}\r\n          form(autocomplete=\"off\")\r\n          .field\r\n            p.control.has-icons-left\r\n              input.input.is-small(type=\"email\" :placeholder=\"`${$t('search')}...`\" v-model=\"searchTerm\")\r\n              span.icon.is-small.is-left\r\n                i.fas.fa-search\r\n\r\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\r\n\r\n        .speed-block\r\n          p.speed-label {{ $t('speed') }}:\r\n            br\r\n            | {{ speed }}x\r\n\r\n          b-slider.speed-slider(v-model=\"speed\"\r\n            :min=\"speedStops[0]\"\r\n            :max=\"speedStops[speedStops.length-1]\"\r\n            :duration=\"0\"\r\n            :dotSize=\"20\"\r\n            :tooltip=\"true\"\r\n            tooltip-placement=\"bottom\"\r\n            :tooltip-formatter=\"val => val + 'x'\"\r\n          )\r\n            template(v-for=\"val in speedStops\")\r\n              b-slider-tick(:value=\"val\" :key=\"val\")\r\n\r\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\r\n      @click='toggleSimulation'\r\n      @time='setTime'\r\n      :timeStart = \"timeStart\"\r\n      :timeEnd = \"timeEnd\"\r\n      :isRunning = \"myState.isRunning\"\r\n      :currentTime = \"simulationTime\")\r\n\r\n"],"names":["Component","props","listItems","items","map","React","createElement","key","item","value","style","display","label","margin","fontWeight","width","height","marginTop","backgroundColor","color","textAlign","fontSize","title","description","listStyle","padding","i18n","__vue2_script","defineComponent","ToggleButton","render","_vm","_h","_c","$event","staticRenderFns","defaultProps","currentTime","type","min","getTimeStart","getTimeEnd","searchFlag","DrtRequestArcLayer","ArcLayer","getShaders","shaders","inject","initializeState","params","getAttributeManager","addInstanced","timeStart","size","accessor","timeEnd","draw","uniforms","Object","assign","layerName","BASE_URL","import","ICON_MAPPING","marker","x","y","mask","info","vehicle","diamond","ambientLight","AmbientLight","intensity","pointLight","PointLight","position","lightingEffect","LightingEffect","DEFAULT_THEME","vehicleColor","trailColor0","trailColor1","effects","DRT_REQUEST","time","fromX","fromY","toX","toY","veh","arrival","simulationTime","paths","traces","drtRequests","settingsShowLayers","center","dark","vehicleLookup","searchEnabled","onClick","viewId","theme","viewState","setViewState","useState","longitude","latitude","pitch","bearing","zoom","globalStore","state","REACT_VIEW_HANDLES","arcWidth","hoverInfo","setHoverInfo","layers","handleClick","console","log","object","v","renderTooltip","vehicleId","className","borderLeft","boxShadow","left","top","occ","routes","push","PathTraceLayer","id","data","getSourcePosition","d","p0","getTargetPosition","p1","t0","t1","getColor","colors","getWidth","opacity","widthMinPixels","rounded","shadowEnabled","pickable","autoHighlight","highlightColor","onHover","vehicles","MovingIconsLayer","getPathStart","getPathEnd","getIcon","iconMoving","iconStill","getSize","noAlloc","iconAtlas","iconMapping","sizeScale","billboard","depthTest","parameters","requests","DrtRequestLayer","getSourceColor","getTargetColor","DeckGL","pickingRadius","controller","getCursor","onViewStateChange","e","commit","StaticMap","mapStyle","getters","mapboxApiAccessToken","MAPBOX_TOKEN","MyComponent","CollapsiblePanel","SettingsPanel","LegendColors","TripViz","VueSlider","PlaybackControls","ZoomButtons","COLOR_OCCUPANCY","SETTINGS","LegendItemType","ColorScheme","crossfilter","HTTPFileSystem","svnProject","a","lightmode","darkmode","vehicleNumber","_a","_b","_d","_e","_f","sep","subfolder","config","filename","text","YAML","err","blob","buffer","readBlob","base64","arrayBufferToBase64","vehId","hour","minute","seconds","request","trips","allTrips","vehNumber","coroutines.forEachAsync","trip","path","timestamps","passengers","i","elapsed","nextTime","segments","segment","json","blobString","blobToBinaryString","coroutines.run","pako","loaded","val","$$v"],"mappings":"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"}