import{d as M,n as N,D as A,r as Z,g as C,h as b,R as x,M as J,C as V,S as D,k as X}from"./index.1d7144b8.js";import{d as Q}from"./index.86d5d5c9.js";import{r as tt}from"./index.a906c0e7.js";import{b as et}from"./index.d10190c4.js";import{d as I}from"./index.39efad9c.js";import{V as st}from"./vue-slider-component.umd.min.c2de2844.js";import{L as it,O as at}from"./LineOffsetLayer.89fca247.js";import{D as ot,S as nt}from"./deckgl.8395df4c.js";import{C as B}from"./layer.0cd20467.js";import{f as lt}from"./pureFunctionsAny.generated.001ca343.js";import{H as rt}from"./HTTPFileSystem.33aea9ff.js";import{D as ct}from"./DrawingTool.dcd0790f.js";import{V as ht}from"./VizConfigurator.ac3cf377.js";import{Z as dt}from"./ZoomButtons.6b3cc4d8.js";import{L as ut}from"./LegendStore.64d2f56a.js";import{C as mt}from"./Coords.820cd7bc.js";import{a as ft}from"./util.5fe75924.js";import{D as vt}from"./DashboardDataManager.6cb84912.js";import{r as gt}from"./cubehelix.15b78c18.js";import{o as pt,t as yt}from"./threshold.d4cae24d.js";import"./line-layer.ca4a1987.js";import"./extends.946277fc.js";import"./text-layer.c8c59efd.js";import"./path-layer.4a6bc071.js";import"./ColorsAndWidths.b0ff51a4.js";import"./rainbow.d98e4227.js";import"./LegendBox.9918cd96.js";import"./RoadNetworkLoader.worker.655695af.js";import"./index.5877f313.js";function wt(t,e){if(t===e)return!0;if(!t||!e)return!1;var s=Object.keys(t),i=Object.keys(e),a=s.length;if(i.length!==a)return!1;for(var o=0;o<a;o++){var l=s[o];if(t[l]!==e[l]||!Object.prototype.hasOwnProperty.call(e,l))return!1}return!0}var Dt=M({name:"TimeSliderLinksGl",components:{VueSlider:st},props:{useRange:Boolean,stops:{type:Array,required:!0},dropdownValue:String},data(){return{sliderValue:"",timeSlider:{adsorb:!0,contained:!0,data:[],"enable-cross":!1,height:8,piecewise:!0,show:!1,marks:[],minRange:1,processStyle:{backgroundColor:"#00bb5588",borderColor:"#f05b72"},sliderStyle:[{backgroundColor:"#f05b72"},{backgroundColor:"#3498db"}],"tooltip-placement":"bottom"}}},watch:{dropdownValue(t){this.sliderValue=t},useRange(t){t?this.sliderValue=[this.stops[0],this.stops[this.stops.length-1]]:this.sliderValue=[this.stops[0]],console.log("changed to: "+this.sliderValue)},sliderValue(t){this.$emit("change",t)}},mounted(){this.sliderValue=this.stops[0]||"...",this.timeSlider.data=this.stops,this.timeSlider.marks=[this.stops[0],this.stops[Math.floor(this.stops.length/2)],this.stops[this.stops.length-1]]}}),bt=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"time-slider-main-content"},[s("vue-slider",t._b({staticClass:"time-slider",model:{value:t.sliderValue,callback:function(i){t.sliderValue=i},expression:"sliderValue"}},"vue-slider",t.timeSlider,!1))],1)},Ct=[];const E={};var St=N(Dt,bt,Ct,!1,kt,"b4113e16",null,null);function kt(t){for(let e in E)this[e]=E[e]}var _t=function(){return St.exports}();const Lt={messages:{en:{selectColumn:"Data:",loading:"Loading...",bandwidths:"Widths: 1 pixel =:",timeOfDay:"",colors:"Colors"},de:{selectColumn:"Datenmengen:",loading:"Laden...",bandwidths:"Linienbreiten: 1 pixel =:",timeOfDay:"",colors:"Farben"}}};var zt=M({name:"SelectorPanel",i18n:Lt,components:{TimeSlider:_t},props:{csvData:{type:Object,required:!0},scaleWidth:{type:Number,required:!0},showDiffs:{type:Boolean,required:!0},vizDetails:{type:Object,required:!0}},data(){return{isButtonActive:!1,isColorButtonActive:!1,scaleWidthValue:"",debounceScale:{},handleTimeSliderChanged:{}}},computed:{activeColumn(){return this.csvData.activeColumn},buttonTitle(){return this.activeColumn?this.activeColumn:""+this.$i18n.t("loading")}},watch:{scaleWidth(){this.scaleWidthValue=""+this.scaleWidth},scaleWidthValue(){isNaN(parseFloat(this.scaleWidthValue))||this.debounceScale()}},methods:{getColumns(){return Object.values(this.csvData.dataTable).slice(1).filter(e=>e.name&&e.type!==A.LOOKUP).map(e=>e.name)},gotNewScale(){this.$emit("scale",parseFloat(this.scaleWidthValue))},changeTimeSlider(t){console.log("new slider!",t),t.length&&t.length===1&&(t=t[0]),this.$emit("slider",{dataset:this.csvData,column:t})},handleClickDropdown(){this.isButtonActive=!this.isButtonActive},handleColorRamp(t){console.log(t),this.isColorButtonActive=!1,this.$emit("colors",t)},clearDropdown(){console.log("boop"),this.isButtonActive=!1},async handleSelectColumn(t){console.log("panel: selected",t),this.isButtonActive=!1,this.$emit("column",{dataset:this.csvData,column:t})}},mounted(){this.debounceScale=I.debounce(this.gotNewScale,500),this.handleTimeSliderChanged=I.debounce(this.changeTimeSlider,250),this.scaleWidthValue=""+this.scaleWidth}}),Rt=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"config-panel"},[t.vizDetails.useSlider&&t.activeColumn?s("div",{staticClass:"panel-item expand"},[s("p",[s("b",[t._v(t._s(t.activeColumn))])]),s("time-slider",{staticClass:"time-slider",attrs:{useRange:!1,stops:t.getColumns(),dropdownValue:t.activeColumn},on:{change:t.handleTimeSliderChanged}})],1):t._e(),t.vizDetails.useSlider?t._e():s("div",{staticClass:"panel-item"},[s("p",[s("b",[t._v(t._s(t.$t("selectColumn")))])]),s("div",{staticClass:"dropdown is-up full-width",class:{"is-active":t.isButtonActive}},[s("div",{staticClass:"dropdown-trigger"},[s("button",{staticClass:"full-width is-warning button",class:{"is-loading":!t.activeColumn},attrs:{"aria-haspopup":"true","aria-controls":"dropdown-menu-column-selector"},on:{click:t.handleClickDropdown}},[s("b",[t._v(t._s(t.buttonTitle))]),t._m(0)])]),s("div",{staticClass:"dropdown-menu",style:{"max-height":"24rem","overflow-y":"auto",border:"1px solid #ccc"},attrs:{id:"dropdown-menu-column-selector",role:"menu"}},[s("div",{staticClass:"dropdown-content"},t._l(t.getColumns(),function(i){return s("a",{staticClass:"dropdown-item",on:{click:function(a){return t.handleSelectColumn(i)}}},[t._v(t._s(i))])}),0)])])])])},Tt=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon is-small"},[s("i",{staticClass:"fas fa-angle-down",attrs:{"aria-hidden":"true"}})])}];const K={};var Ft=N(zt,Rt,Tt,!1,At,"3f859606",null,null);function At(t){for(let e in K)this[e]=K[e]}var Wt=function(){return Ft.exports}();function $t({viewId:t=0,links:e={source:new Float32Array,dest:new Float32Array},colorRampType:s=-1,build:i={},base:a={},widths:o={},widthsBase:l={},newColors:c=new Uint8Array,newWidths:d=new Float32Array,dark:n=!1,projection:g="",scaleWidth:m=1,mapIsIndependent:S=!1}){const k=m?1/m:0,[h,u]=Z.exports.useState(C.state.viewState),f=i.dataTable[i.activeColumn],z=a.dataTable[a.activeColumn],p=o.dataTable[o.activeColumn],W=s===0||(f==null?void 0:f.type)==A.STRING;b[t]=r=>{u(r||C.state.viewState)};function _(){console.log("click!")}function Y(r){u(r),r.center=[r.longitude,r.latitude],S||C.commit("setMapCamera",r)}function R(r){return lt(r,{lowerExp:-6,upperExp:6,precision:5})}function j(r,y,v){try{if(!r)return null;const w=i.csvRowFromLinkRow[v];let L=r.values[w];if(W)return Number.isFinite(L)?`<b>${r.name}</b><p>${R(L)}</p>`:null;let T=null;Number.isFinite(L)&&(T=`<b>${r.name}</b><p>Value: ${R(L)}</p>`);const O=a==null?void 0:a.csvRowFromLinkRow[v];if(O){let $=a?a.dataTable[y.name].values[O]:null,H=L-$;Number.isFinite($)&&(T+=`<p>Base: ${R($)}</p>`,T+=`<p>+/- Base: ${R(H)}</p>`)}return T}catch{return null}}function U({object:r,index:y}){try{let v=j(f,z,y);if(p&&p.name!==f.name){const w=j(p,l.dataTable[l.activeColumn],y);w&&(v=v?v+w:w)}return v?{html:v,style:{color:n?"#ccc":"#223",backgroundColor:n?"#2a3c4f":"white"}}:null}catch(v){return console.warn(v),null}}const q=g=="Atlantis"?B.METER_OFFSETS:B.DEFAULT,G=new it({id:"linkLayer",data:{length:e.source.length/2,attributes:{getSourcePosition:{value:e.source,size:2},getTargetPosition:{value:e.dest,size:2},getColor:{value:c,size:4},getWidth:{value:d,size:1}}},widthUnits:"pixels",widthScale:k,widthMinPixels:.5,widthMaxPixels:50,pickable:!0,coordinateSystem:q,opacity:1,autoHighlight:!0,highlightColor:[255,0,224],offsetDirection:at.RIGHT,updateTriggers:{getSourcePosition:[e.source],getTargetPosition:[e.dest],getColor:[c,n],getWidth:[d]},transitions:{getColor:250,getWidth:250,widthScale:250},parameters:{depthTest:!1}});return x.createElement(ot,{layers:[G],viewState:h,controller:!0,pickingRadius:5,getTooltip:U,getCursor:({isDragging:r,isHovering:y})=>r?"grabbing":y?"pointer":"grab",onClick:_,onViewStateChange:r=>Y(r.viewState)},x.createElement(nt,{mapStyle:C.getters.mapStyle,mapboxApiAccessToken:J}))}const Mt={messages:{en:{all:"All",colors:"Colors",loading:"Loading",selectColumn:"Select data column",timeOfDay:"Time of day",bandwidths:"Widths: 1 pixel =",showDiffs:"Show Differences"},de:{all:"Alle",colors:"Farben",loading:"Wird geladen",selectColumn:"Datenspalte w\xE4hlen",timeOfDay:"Uhrzeit",bandwidths:"Linienbreiten: 1 pixel =",showDiffs:"Differenzen"}}},F="_LINK_OFFSET_",Nt=M({name:"NetworkLinksPlugin",i18n:Mt,components:{SelectorPanel:Wt,DrawingTool:ct,LinkGlLayer:$t,ToggleButton:Q.exports.ToggleButton,VizConfigurator:ht,ZoomButtons:dt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{standaloneYAMLconfig:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},YAMLrequirementsLinks:{},vizDetails:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},currentUIFilterDefinitions:{},datasets:{},isButtonActiveColumn:!1,linkLayerId:`linklayer-${Math.floor(1e12*Math.random())}`,scaleWidth:0,numLinks:0,showTimeRange:!1,legendStore:new ut,geojsonData:{source:new Float32Array,dest:new Float32Array,linkIds:[],projection:""},fixedColors:["#4e79a7"],myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},csvData:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidth:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidthBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},isDarkMode:this.$store.state.colorScheme===V.DarkMode,isDataLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",currentWidthDefinition:{columnName:""},myDataManager:this.datamanager||new vt(this.root,this.subfolder),resizer:void 0,dataLoaderWorkers:[],csvRowLookupFromLinkRow:{},colorArray:new Uint8Array,widthArray:new Float32Array}},computed:{fileApi(){return new rt(this.fileSystem,C)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]},urlThumbnail(){return this.thumbnailUrl},colorRampType(){var e,s;const t=(s=(e=this.vizDetails.display.color)==null?void 0:e.colorRamp)==null?void 0:s.style;return t===void 0?-1:t},buttonTitle(){return this.csvData.activeColumn||"Loading..."}},watch:{"$store.state.viewState"(){this.vizDetails.mapIsIndependent||!b[this.linkLayerId]||b[this.linkLayerId]()},"$store.state.colorScheme"(){setTimeout(()=>this.isDarkMode=this.$store.state.colorScheme===V.DarkMode,100)},"vizDetails.showDifferences"(){this.generateWidthArray(),this.generateColorArray()}},methods:{setDataIsLoaded(){this.isDataLoaded=!0},async getVizDetails(){const t=this.myState.yamlConfig,e={showDifferences:!1,datasets:{},display:{color:{},width:{}}};if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},e,this.config);return}if(((t==null?void 0:t.endsWith("yaml"))||(t==null?void 0:t.endsWith("yml")))&&await this.loadStandaloneYamlConfig(),/(shp|xml|geojson|geo\.json)(|\.gz)$/.test(t)){const i="Network: "+this.myState.yamlConfig;this.vizDetails=Object.assign({},this.vizDetails,{network:this.myState.yamlConfig,title:i,description:this.myState.subfolder})}const s=this.vizDetails.title?this.vizDetails.title:t||"Network Links";this.$emit("title",s)},async loadStandaloneYamlConfig(){try{const t=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,e=await this.fileApi.getFileText(t);this.standaloneYAMLconfig=Object.assign({},et.parse(e)),this.validateYAML(),this.setVizDetails()}catch(t){console.error("failed");const e=t;this.fileSystem.needPassword&&e.status===401&&this.$store.commit("requestLogin",this.fileSystem.slug)}},async validateYAML(){const t=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let e;t?(console.log("has yaml"),e=this.standaloneYAMLconfig):(console.log("no yaml"),e=this.config);for(const i in this.YAMLrequirementsLinks)i in e||this.$store.commit("setStatus",{type:D.ERROR,msg:`YAML file missing required key: ${i}`,desc:"Check this.YAMLrequirementsLinks for required keys"});(e.zoom<5||e.zoom>20)&&this.$store.commit("setStatus",{type:D.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "}),!e.network&&e.geojsonFile&&this.$store.commit("setStatus",{type:D.WARNING,msg:"YAML field geojsonFile deprecated",desc:"Use YAML field network instad. "}),e.display||this.$store.commit("setStatus",{type:D.WARNING,msg:"Display properties not set",desc:"Standard values are used"})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),e=await tt.arraybuffer(t),s=ft(e);s&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${s})`)}catch(t){console.error(t)}},toggleShowDiffs(){this.vizDetails.showDifferences=!this.vizDetails.showDifferences},changeConfiguration(t){t.color&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.color=t.color,this.handleNewColor(t.color)),t.width&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.width=t.width,this.handleNewWidth(t.width)),t.dataset&&this.handleNewDataset(t.dataset)},handleNewFilter(t){this.csvData=Object.assign({},this.csvData,{activeColumn:t[0]}),this.csvWidth=Object.assign({},this.csvWidth,{activeColumn:t[0]})},handleNewWidth(t){if(wt(t,this.currentWidthDefinition))return;const{columnName:e,dataset:s,scaleFactor:i}=t;if(!s){this.scaleWidth=0;return}i!==void 0&&(this.scaleWidth=i);let a=!0;if(e||(a=!1),t.columnName===this.currentWidthDefinition.columnName&&t.dataset===this.currentWidthDefinition.dataset&&(a=!1),this.currentWidthDefinition=t,!a)return;const o=s?this.datasets[s]:this.csvWidth.dataTable;if(!o)return;if(this.csvWidth.dataTable!==o&&(this.csvWidth.dataTable=o,this.csvWidth.activeColumn=e||"",this.csvWidthBase.activeColumn=e||""),!o[e||""]){const c=`Width: column "${e}" not found in dataset "${this.csvData.datasetKey}"`;console.error(c),this.$store.commit("setStatus",{type:D.ERROR,msg:c});return}this.csvWidth={datasetKey:s||this.csvWidth.datasetKey,dataTable:o,activeColumn:e||"",csvRowFromLinkRow:s?this.csvRowLookupFromLinkRow[s]:[]},this.generateWidthArray()},handleNewColor(t){this.fixedColors=t.fixedColors;const e=t.columnName;if(!e){this.generateColorArray();return}const s=t.dataset,i=this.datasets[s];if(!i)return;this.csvData.dataTable!==i&&(this.csvData={datasetKey:s,dataTable:i,activeColumn:"",csvRowFromLinkRow:this.csvRowLookupFromLinkRow[s]});const a=this.csvData.dataTable[e];if(!a){const o=`Color: Column "${e}" not found in dataset "${this.csvData.datasetKey}"`;console.error(o),this.$store.commit("setStatus",{type:D.ERROR,msg:o});return}this.csvData.activeColumn=a.name,this.csvBase.activeColumn=a.name,this.isButtonActiveColumn=!1,this.generateColorArray()},setMapCenterFromVizDetails(){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),this.vizDetails.zoom||(this.vizDetails.zoom=9),this.$store.commit("setMapCamera",{longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom,jump:!1});const t={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom||10,jump:!1};b[this.linkLayerId]&&b[this.linkLayerId](t)},async setMapCenter(){if(this.vizDetails.center)return this.setMapCenterFromVizDetails();const t=this.geojsonData;if(!t.source.length)return;let e=0,s=0,i=0;if(console.log({projection:this.geojsonData.projection}),this.geojsonData.projection==="Atlantis"){const a="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs",o=mt.toLngLat(a,[t.source[0],t.source[1]]);s=o[0],i=o[1]}else{const a=t.source.length/2,o=a<4096?2:1024;for(let l=0;l<a;l+=o)s+=t.source[l*2],i+=t.source[l*2+1],e++;s=s/e,i=i/e}console.log("center",s,i),this.$store.commit("setMapCamera",{longitude:s,latitude:i,bearing:0,pitch:0,zoom:8,jump:!1})},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`container-${this.linkLayerId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`container-${this.linkLayerId}`),e=t==null?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const s=t.clientWidth>640?"280px":"36px";e.style.right=s}},async updateStatus(t){this.myState.statusMessage=t},async loadNetwork(){if(!this.myDataManager)throw Error("links: no datamanager");this.myState.statusMessage="Loading network...";const t=this.vizDetails.network||this.vizDetails.geojsonFile;try{const e=await this.myDataManager.getRoadNetwork(t,this.myState.subfolder,this.vizDetails,this.updateStatus);this.numLinks=e.linkIds.length,this.geojsonData=e,e.projection=="Atlantis"&&(this.vizDetails.projection="Atlantis",this.$store.commit("setMapStyles",X)),this.setMapCenter(),this.myState.statusMessage="",this.moveLogo(),this.$emit("isLoaded",!0),this.loadCSVFiles()}catch(e){this.$store.commit("error",""+e),this.$emit("isLoaded")}},handleNewDataset(t){console.log("NEW dataset",t);const{key:e,dataTable:s,filename:i}=t,o=Object.keys(s)[0],l=s[o];let c={};for(let n=0;n<l.values.length;n++)c[l.values[n]]=n;const d=[];for(let n=0;n<this.geojsonData.linkIds.length;n++){const g=this.geojsonData.linkIds[n],m=c[g];m!==void 0&&(d[n]=m)}this.csvRowLookupFromLinkRow[e]=d,c={},i&&(this.vizDetails.datasets[e]=i),this.datasets=Object.assign({...this.datasets},{[e]:s}),this.handleDatasetisLoaded(e)},generateWidthArray(){var o,l,c,d;const t=this.geojsonData.linkIds.length,e=new Float32Array(t),s=(l=(o=this.csvWidth)==null?void 0:o.dataTable[this.csvWidth.activeColumn])==null?void 0:l.values,i=(d=(c=this.csvBase)==null?void 0:c.dataTable[this.csvBase.activeColumn])==null?void 0:d.values,a=n=>{const g=this.csvWidth.csvRowFromLinkRow[n],m=s[g];if(this.vizDetails.showDifferences){const S=this.csvBase.csvRowFromLinkRow[n],k=i[S];return Math.abs(m-k)}else return m};for(let n=0;n<t;n++)e[n]=a(n);this.widthArray=e},generateColorArray(){const t=this.fixedColors.map(h=>{const u=gt(h);return[u.r,u.g,u.b,255]}),e=4,s=new Array(this.fixedColors.length-1).fill(0).map((h,u)=>Math.pow(1/this.fixedColors.length*(u+1),e)),i=this.csvData.dataTable,a=this.csvBase.dataTable,o=this.csvData.activeColumn,l=i[o]||{values:[]};a[o];const c=this.colorRampType===0||l.type==A.STRING,d=c?pt().range(t):yt().range(t).domain(s),n=this.geojsonData.linkIds.length,g=new Uint8Array(4*n),m=C.state.isDarkMode?[80,80,80,96]:[212,212,212,40],S=[0,0,0,0],k=h=>{var z;const u=this.csvData.csvRowFromLinkRow[h];let f=(z=i[this.csvData.activeColumn])==null?void 0:z.values[u];if(this.fixedColors.length===1)return t[0];if(!f&&!this.vizDetails.showDifferences)return S;if(c)return d(f);if(this.vizDetails.showDifferences){const p=this.csvBase.csvRowFromLinkRow[h],W=a[o].values[p],_=f-W;return _===0?m:this.isDarkMode?_>0?[255,64,64,255]:[64,96,255,255]:_>0?[255,0,0,255]:[32,64,255,255]}else{let p=f/(l.max||1);return d(p)}};for(let h=0;h<n;h++)g.set(k(h),h*4);this.colorArray=g},loadCSVFiles(){this.myState.statusMessage="Loading datasets...",this.vizDetails.datasets||(this.vizDetails.datasets={}),this.vizDetails.csvFile&&(this.vizDetails.datasets.csvFile=this.vizDetails.csvFile),this.vizDetails.csvBase&&(this.vizDetails.datasets.csvBase=this.vizDetails.csvBase);const t=Object.entries(this.vizDetails.datasets);if(t.length)for(const[e,s]of t)this.loadOneCSVFile(e,s);else this.showSimpleNetworkWithNoDatasets()},showSimpleNetworkWithNoDatasets(){this.csvData={datasetKey:"",dataTable:{[F]:{name:F,type:A.LOOKUP,values:[]}},activeColumn:F,csvRowFromLinkRow:[]};const t=this.geojsonData.source.length/2,e=[...Array(t).keys()];this.csvData.dataTable[F].values=e,this.myState.statusMessage="",this.setDataIsLoaded();const s={fixedColors:this.fixedColors,dataset:"",columnName:"",normalize:""};this.changeConfiguration({color:s})},handleDatasetisLoaded(t){const e=Object.keys(this.datasets);if(t==="csvBase"||t==="base")this.csvBase={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:""},this.csvWidthBase={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:""};else if(this.csvData.activeColumn===""&&!this.vizDetails.display.color&&!this.vizDetails.display.width){const s=Object.values(this.datasets[t])[0].name;this.csvData={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:s}}e.length===Object.keys(this.vizDetails.datasets).length&&(this.setDataIsLoaded(),this.myState.statusMessage="",console.log({DATASETS:this.datasets}))},async loadOneCSVFile(t,e){try{const i=(await this.myDataManager.getDataset({dataset:e})).allRows;console.log("loaded",t),this.myState.statusMessage="Analyzing...";const a={};for(const o of Object.keys(i))o&&(a[o]=i[o]);this.datasets=Object.assign({...this.datasets},{[t]:a}),this.handleNewDataset({key:t,dataTable:a})}catch{this.$store.commit("error","Could not load "+e),this.$emit("isLoaded")}},handleNewDataColumn(t){const{dataset:e,column:s}=t,i={};if(e.datasetKey===this.csvWidth.datasetKey){const a={...this.vizDetails.display.width};a.columnName=s,i.width=a}if(e.datasetKey===this.csvData.datasetKey){const a={...this.vizDetails.display.color};a.columnName=s,i.color=a}this.changeConfiguration(i)}},async mounted(){var t,e,s;if(this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=(t=this.yamlConfig)!=null?t:"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.scaleWidth=((s=(e=this.vizDetails.display)==null?void 0:e.width)==null?void 0:s.widthFactor)||250,this.thumbnail){this.buildThumbnail();return}this.setupLogoMover(),this.loadNetwork()},beforeDestroy(){delete b[this.linkLayerId];try{for(const t of this.dataLoaderWorkers)t.terminate()}catch{}this.$store.commit("setFullScreen",!1)}});var jt=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"link-volume-plot",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[t.thumbnail?t._e():s("div",{staticClass:"plot-container",attrs:{id:`container-${t.linkLayerId}`}},[s("link-gl-layer",{staticClass:"map-area",attrs:{viewId:t.linkLayerId,links:t.geojsonData,colorRampType:t.colorRampType,build:t.csvData,base:t.csvBase,widths:t.csvWidth,widthsBase:t.csvWidthBase,dark:t.isDarkMode,newColors:t.colorArray,newWidths:t.widthArray,scaleWidth:t.scaleWidth,projection:t.vizDetails.projection,mapIsIndependent:t.vizDetails.mapIsIndependent}}),t.thumbnail?t._e():s("zoom-buttons"),!t.thumbnail&&t.isDataLoaded?s("viz-configurator",{attrs:{vizDetails:t.vizDetails,datasets:t.datasets,fileSystem:t.fileSystem,subfolder:t.myState.subfolder,yamlConfig:t.yamlConfig,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration}}):t._e(),t.thumbnail?t._e():s("div",{staticClass:"bottom-panel"},[t.myState.statusMessage?s("div",{staticClass:"status-message"},[s("p",[t._v(t._s(t.myState.statusMessage))])]):t._e(),s("div",{directives:[{name:"show",rawName:"v-show",value:t.csvWidth.activeColumn,expression:"csvWidth.activeColumn"}],staticClass:"panel-items"},[s("div",{staticClass:"panel-item config-section"},[s("selector-panel",{attrs:{vizDetails:t.vizDetails,csvData:t.csvWidth,scaleWidth:t.scaleWidth,showDiffs:t.vizDetails.showDifferences},on:{column:t.handleNewDataColumn,slider:t.handleNewDataColumn}})],1),t.vizDetails.datasets.csvBase?s("div",{staticClass:"panel-item diff-section"},[s("toggle-button",{staticClass:"toggle",attrs:{width:40,value:t.vizDetails.showDifferences,sync:!0,labels:!1,color:{checked:"#4b7cc4",unchecked:"#222"}},on:{change:t.toggleShowDiffs}}),s("p",[s("b",[t._v(t._s(t.$t("showDiffs")))])])],1):t._e()])])],1)])},Ot=[];const P={};var xt=N(Nt,jt,Ot,!1,Vt,"638a1e70",null,null);function Vt(t){for(let e in P)this[e]=P[e]}var ve=function(){return xt.exports}();export{ve as default};
//# sourceMappingURL=NetworkLinks.3f50825c.js.map
