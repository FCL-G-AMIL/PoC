{"version":3,"file":"CarrierViewer.5754df7f.js","sources":["../../node_modules/@deck.gl/extensions/dist/esm/path-style/shaders.glsl.js","../../node_modules/@deck.gl/extensions/dist/esm/path-style/path-style-extension.js","../../node_modules/javascript-natural-sort/naturalSort.js","../../src/components/LegendColors.tsx","../../src/plugins/carrier-viewer/TourViz.tsx","../../src/plugins/carrier-viewer/CarrierViewer.vue","../../src/plugins/carrier-viewer/CarrierViewer.vue?vue&type=template&lang.js"],"sourcesContent":["export const dashShaders = {\n  inject: {\n    'vs:#decl': \"\\nattribute vec2 instanceDashArrays;\\nattribute float instanceDashOffsets;\\nvarying vec2 vDashArray;\\nvarying float vDashOffset;\\n\",\n    'vs:#main-end': \"\\nvDashArray = instanceDashArrays;\\nvDashOffset = instanceDashOffsets / width.x;\\n\",\n    'fs:#decl': \"\\nuniform float dashAlignMode;\\nuniform float capType;\\nuniform bool dashGapPickable;\\nvarying vec2 vDashArray;\\nvarying float vDashOffset;\\n\\nfloat round(float x) {\\n  return floor(x + 0.5);\\n}\\n\",\n    'fs:#main-start': \"\\n  float solidLength = vDashArray.x;\\n  float gapLength = vDashArray.y;\\n  float unitLength = solidLength + gapLength;\\n\\n  float offset;\\n\\n  if (unitLength > 0.0) {\\n    if (dashAlignMode == 0.0) {\\n      offset = vDashOffset;\\n    } else {\\n      unitLength = vPathLength / round(vPathLength / unitLength);\\n      offset = solidLength / 2.0;\\n    }\\n\\n    float unitOffset = mod(vPathPosition.y + offset, unitLength);\\n\\n    if (gapLength > 0.0 && unitOffset > solidLength) {\\n      if (capType <= 0.5) {\\n        if (!(dashGapPickable && picking_uActive)) {\\n          discard;\\n        }\\n      } else {\\n        float distToEnd = length(vec2(\\n          min(unitOffset - solidLength, unitLength - unitOffset),\\n          vPathPosition.x\\n        ));\\n        if (distToEnd > 1.0) {\\n          if (!(dashGapPickable && picking_uActive)) {\\n            discard;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"\n  }\n};\nexport const offsetShaders = {\n  inject: {\n    'vs:#decl': \"\\nattribute float instanceOffsets;\\n\",\n    'vs:DECKGL_FILTER_SIZE': \"\\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\\n  size *= offsetWidth;\\n\",\n    'vs:#main-end': \"\\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\\n  float offsetDir = sign(instanceOffsets);\\n  vPathPosition.x = (vPathPosition.x + offsetDir) * offsetWidth - offsetDir;\\n  vPathPosition.y *= offsetWidth;\\n  vPathLength *= offsetWidth;\\n\",\n    'fs:#main-start': \"\\n  float isInside;\\n  isInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);\\n  if (isInside == 0.0) {\\n    discard;\\n  }\\n\"\n  }\n};\n//# sourceMappingURL=shaders.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension, _mergeShaders as mergeShaders } from '@deck.gl/core';\nimport { dashShaders, offsetShaders } from './shaders.glsl';\nimport { dist } from 'gl-matrix/vec3';\nconst defaultProps = {\n  getDashArray: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getOffset: {\n    type: 'accessor',\n    value: 0\n  },\n  dashJustified: false,\n  dashGapPickable: false\n};\nexport default class PathStyleExtension extends LayerExtension {\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  } = {}) {\n    super({\n      dash: dash || highPrecisionDash,\n      offset,\n      highPrecisionDash\n    });\n  }\n\n  isEnabled(layer) {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(extension) {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    let result = {};\n\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n\n    if (!attributeManager || !extension.isEnabled(this)) {\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {\n          size: 2,\n          accessor: 'getDashArray'\n        }\n      });\n    }\n\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {\n          size: 1,\n          accessor: 'getOffset'\n        }\n      });\n    }\n  }\n\n  updateState(params, extension) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(path) {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n    let p;\n    let prevP;\n\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n\n    return result;\n  }\n\n}\n\n_defineProperty(PathStyleExtension, \"defaultProps\", defaultProps);\n\n_defineProperty(PathStyleExtension, \"extensionName\", 'PathStyleExtension');\n//# sourceMappingURL=path-style-extension.js.map","/*\r\n * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\r\n * Author: Jim Palmer (based on chunking idea from Dave Koelle)\r\n */\r\n/*jshint unused:false */\r\nmodule.exports = function naturalSort (a, b) {\r\n\t\"use strict\";\r\n\tvar re = /(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\r\n\t\tsre = /(^[ ]*|[ ]*$)/g,\r\n\t\tdre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\r\n\t\thre = /^0x[0-9a-f]+$/i,\r\n\t\tore = /^0/,\r\n\t\ti = function(s) { return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s; },\r\n\t\t// convert all to strings strip whitespace\r\n\t\tx = i(a).replace(sre, '') || '',\r\n\t\ty = i(b).replace(sre, '') || '',\r\n\t\t// chunk/tokenize\r\n\t\txN = x.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\tyN = y.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\t// numeric, hex or date detection\r\n\t\txD = parseInt(x.match(hre), 16) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),\r\n\t\tyD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,\r\n\t\toFxNcL, oFyNcL;\r\n\t// first try and sort Hex codes or Dates\r\n\tif (yD) {\r\n\t\tif ( xD < yD ) { return -1; }\r\n\t\telse if ( xD > yD ) { return 1; }\r\n\t}\r\n\t// natural sorting through split numeric strings and default strings\r\n\tfor(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\r\n\t\t// find floats not starting with '0', string or 0 if not defined (Clint Priest)\r\n\t\toFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;\r\n\t\toFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;\r\n\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\r\n\t\tif (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }\r\n\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\r\n\t\telse if (typeof oFxNcL !== typeof oFyNcL) {\r\n\t\t\toFxNcL += '';\r\n\t\t\toFyNcL += '';\r\n\t\t}\r\n\t\tif (oFxNcL < oFyNcL) { return -1; }\r\n\t\tif (oFxNcL > oFyNcL) { return 1; }\r\n\t}\r\n\treturn 0;\r\n};\r\n","import { LegendItem } from '@/Globals'\r\nimport React from 'react'\r\n\r\nexport default function Component(props: {\r\n  title: string\r\n  description?: string\r\n  values: number[]\r\n  items: LegendItem[]\r\n}) {\r\n  const listItems = props.items.map(item => (\r\n    <li key={item.value + item.value[0]}>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: `${Math.max(1, 3.0 * (1 * item.value - 1) + 3)}px`,\r\n          backgroundColor: `rgb(${item.color})`,\r\n        }}\r\n      ></div>\r\n      {item.label && <div style={{ marginBottom: '0.5rem' }}>{item.label}</div>}\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <h4\r\n        style={{\r\n          textAlign: 'left',\r\n          fontWeight: 'bold',\r\n          marginBottom: '0.5rem',\r\n          fontSize: '0.8rem',\r\n        }}\r\n      >\r\n        {props.title}\r\n      </h4>\r\n      <p>{props.description}</p>\r\n      <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>{listItems}</ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { StaticMap } from 'react-map-gl'\r\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core'\r\nimport DeckGL from '@deck.gl/react'\r\nimport { ArcLayer, ScatterplotLayer, IconLayer, PathLayer, TextLayer } from '@deck.gl/layers'\r\nimport PathOffsetLayer from '@/layers/PathOffsetLayer'\r\nimport { PathStyleExtension } from '@deck.gl/extensions'\r\n\r\nimport globalStore from '@/store'\r\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\r\n\r\n// -------------------------------------------------------------\r\n// Tour viz has several layers, top to bottom:\r\n//\r\n// - shipments (arc layer, orig->destination)\r\n// - destination text on top of circles\r\n// - destination circles\r\n// - delivery legs (path layer, each leg is its own path)\r\n// - shipment link (dashed line on stopActivity link itself)\r\n\r\ninterface Shipment {\r\n  $id: string\r\n  fromX: number\r\n  fromY: number\r\n  toX: number\r\n  toY: number\r\n}\r\n\r\nconst ICON_MAPPING = {\r\n  circle: { x: 0, y: 0, width: 128, height: 128, mask: true },\r\n}\r\n\r\nconst ActivityColor = {\r\n  pickup: [0, 150, 255],\r\n  delivery: [240, 0, 60],\r\n  service: [255, 64, 255],\r\n}\r\n\r\nexport default function Component(props: {\r\n  activeTab: string\r\n  shipments: Shipment[]\r\n  legs: any[]\r\n  stopActivities: any[]\r\n  depots: { link: string; midpoint: number[]; coords: number[] }[]\r\n  colors: any\r\n  center: [number, number]\r\n  onClick: any\r\n  viewId: number\r\n  settings: any\r\n  dark: boolean\r\n  numSelectedTours: number\r\n}) {\r\n  const [viewState, setViewState] = useState(globalStore.state.viewState)\r\n  const [hoverInfo, setHoverInfo] = useState({} as any)\r\n  const [pickupsAndDeliveries, setPickupsAndDeliveries] = useState({\r\n    type: 'activity',\r\n    pickups: [] as any[],\r\n    deliveries: [] as any[],\r\n  })\r\n\r\n  const {\r\n    dark,\r\n    activeTab,\r\n    numSelectedTours,\r\n    shipments,\r\n    depots,\r\n    legs,\r\n    settings,\r\n    stopActivities,\r\n    center,\r\n    onClick,\r\n  } = props\r\n\r\n  const { simplifyTours, scaleFactor, shipmentDotsOnTourMap } = settings\r\n\r\n  // range is (1/) 16384 - 0.000001\r\n  // slider is 0-100, which we invert and scale to [14 to -6], then 2^value is scaleFactor.\r\n  let widthScale = scaleFactor == 0 ? 1e-6 : 1 / Math.pow(2, (100 - scaleFactor) / 5 - 6.0)\r\n\r\n  const layers: any = []\r\n\r\n  // register setViewState in global view updater\r\n  // so we can respond to external map motion\r\n  REACT_VIEW_HANDLES[props.viewId] = () => {\r\n    setViewState(globalStore.state.viewState)\r\n  }\r\n\r\n  // update pickups and deliveries only when shipments change ----------------------\r\n  useEffect(() => {\r\n    const pickups: { [xy: string]: { type: string; coord: number[]; shipmentIds: string[] } } = {}\r\n    const deliveries: { [xy: string]: { type: string; coord: number[]; shipmentIds: string[] } } =\r\n      {}\r\n\r\n    shipments.forEach(shipment => {\r\n      let xy = `${shipment.fromX}-${shipment.fromY}`\r\n      if (!pickups[xy])\r\n        pickups[xy] = { type: 'pickup', shipmentIds: [], coord: [shipment.fromX, shipment.fromY] }\r\n      pickups[xy].shipmentIds.push(shipment.$id)\r\n\r\n      xy = `${shipment.toX}-${shipment.toY}`\r\n      if (!deliveries[xy])\r\n        deliveries[xy] = { type: 'delivery', shipmentIds: [], coord: [shipment.toX, shipment.toY] }\r\n      deliveries[xy].shipmentIds.push(shipment.$id)\r\n    })\r\n\r\n    setPickupsAndDeliveries({\r\n      type: 'activity',\r\n      pickups: Object.values(pickups),\r\n      deliveries: Object.values(deliveries),\r\n    })\r\n  }, [shipments])\r\n\r\n  function handleClick(event: any) {\r\n    if (!event.object) {\r\n      // no object: send null as message that blank area was clicked\r\n      onClick(null)\r\n    } else {\r\n      onClick(event.object)\r\n    }\r\n  }\r\n\r\n  function handleViewState(view: any) {\r\n    setViewState(view)\r\n    view.center = [view.longitude, view.latitude]\r\n    globalStore.commit('setMapCamera', view)\r\n  }\r\n\r\n  function renderTooltip(hoverInfo: any) {\r\n    const { object } = hoverInfo\r\n    if (!object) return null\r\n\r\n    // console.log(555, object)\r\n\r\n    if (object?.type == 'pickup') return renderActivityTooltip(hoverInfo, 'pickup')\r\n    if (object?.type == 'delivery') return renderActivityTooltip(hoverInfo, 'delivery')\r\n    if (object?.color) return renderLegTooltip(hoverInfo)\r\n    if (object?.type == 'depot') return null\r\n    return renderStopTooltip(hoverInfo)\r\n  }\r\n\r\n  function renderActivityTooltip(hoverInfo: any, activity: string) {\r\n    const { object, x, y } = hoverInfo\r\n\r\n    return (\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          backgroundColor: '#334455ee',\r\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\r\n          color: '#eee',\r\n          padding: '0.5rem 0.5rem',\r\n          position: 'absolute',\r\n          opacity: 0.9,\r\n          left: x + 20,\r\n          top: y + 20,\r\n        }}\r\n      >\r\n        <table style={{ maxWidth: '30rem', fontSize: '0.8rem' }}>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ textAlign: 'right', paddingRight: '0.5rem', paddingTop: '0.2rem' }}>\r\n                {activity}:\r\n              </td>\r\n              <td style={{ paddingTop: '0.2rem' }}>{object.shipmentIds.join(', ')}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renderLegTooltip(hoverInfo: any) {\r\n    const { object, x, y } = hoverInfo\r\n\r\n    return (\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          backgroundColor: '#334455ee',\r\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\r\n          color: '#eee',\r\n          padding: '0.5rem 0.5rem',\r\n          position: 'absolute',\r\n          left: x + 20,\r\n          top: y - 30,\r\n        }}\r\n      >\r\n        <b>{object?.tour?.vehicleId}</b>\r\n        <br />\r\n        Leg # {1 + object?.count} <br />\r\n        Shipments on board: {object?.shipmentsOnBoard?.length} <br />\r\n        Total size: {object?.totalSize}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renderStopTooltip(hoverInfo: any) {\r\n    const { object, x, y } = hoverInfo\r\n\r\n    // collect some info\r\n    const visits = object.visits.length\r\n    const pickups = object.visits.reduce(\r\n      (prev: number, visit: any) => prev + visit.pickup.length,\r\n      0\r\n    )\r\n    const deliveries = object.visits.reduce(\r\n      (prev: number, visit: any) => prev + visit.delivery.length,\r\n      0\r\n    )\r\n\r\n    const numPickupsAndDeliveries = pickups + deliveries\r\n    const overview = { visits, pickups, deliveries } as any\r\n\r\n    // delivery stop has complicated position stuff\r\n    const tipHeight = Object.keys(object).length * 20 + 32 // good guess\r\n    let yPosition = y - 30\r\n    if (yPosition + tipHeight > window.innerHeight) {\r\n      yPosition = y - tipHeight\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          fontSize: '0.7rem',\r\n          backgroundColor: '#334455ee',\r\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\r\n          color: '#eee',\r\n          padding: '0.5rem 0.5rem',\r\n          position: 'absolute',\r\n          left: x + 20,\r\n          top: yPosition,\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            fontSize: '0.8rem',\r\n          }}\r\n        >\r\n          <tbody>\r\n            {Object.keys(overview).map((a: any) => {\r\n              return (\r\n                <tr key={a}>\r\n                  <td style={{ textAlign: 'right', paddingRight: '0.5rem' }}>{a}:</td>\r\n                  <td style={{ fontWeight: 'bold' }}> {overview[a]}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n\r\n            {/* <tr>\r\n              <td\r\n                style={{\r\n                  fontSize: '1rem',\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'right',\r\n                  paddingRight: '0.5rem',\r\n                }}\r\n              >\r\n                {object.type} {object.count}:\r\n              </td>\r\n              <td style={{ fontSize: '1rem', fontWeight: 'bold' }}> {object.id}</td>\r\n            </tr> */}\r\n\r\n            {numPickupsAndDeliveries == 1 &&\r\n              Object.keys(object.details).map((a: any) => {\r\n                return (\r\n                  <tr key={a}>\r\n                    <td\r\n                      style={{ textAlign: 'right', paddingRight: '0.5rem', paddingTop: '0.2rem' }}\r\n                    >\r\n                      {a.slice(1)}:\r\n                    </td>\r\n                    <td style={{ paddingTop: '0.2rem' }}>{object.details[a]}</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function clickedDepot() {}\r\n\r\n  if (activeTab == 'tours') {\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new PathLayer({\r\n        id: 'shipmentLocationDashedLine',\r\n        data: stopActivities,\r\n        getPath: (d: any) => [d.ptFrom, d.ptTo],\r\n        getColor: [128, 128, 128],\r\n        getOffset: 2, // 2: RIGHT-SIDE TRAFFIC\r\n        opacity: 1,\r\n        widthMinPixels: 3,\r\n        rounded: true,\r\n        shadowEnabled: false,\r\n        pickable: false,\r\n        autoHighlight: false,\r\n        highlightColor: [255, 255, 255],\r\n        parameters: { depthTest: false },\r\n        getDashArray: [3, 2],\r\n        dashJustified: true,\r\n        extensions: [new PathStyleExtension({ dash: true })],\r\n      })\r\n    )\r\n\r\n    if (simplifyTours) {\r\n      layers.push(\r\n        //@ts-ignore:\r\n        new ArcLayer({\r\n          id: 'leg-arcs',\r\n          data: legs,\r\n          getSourcePosition: (d: any) => d.points[0],\r\n          getTargetPosition: (d: any) => d.points[d.points.length - 1],\r\n          getSourceColor: (d: any) => d.color, // [200, 32, 224],\r\n          getTargetColor: (d: any) => d.color, // [200, 32, 224],\r\n          getWidth: scaleFactor ? (d: any) => d.totalSize / 2 : 3,\r\n          getHeight: 0.5,\r\n          widthMinPixels: 2,\r\n          widthMaxPixels: 200,\r\n          widthUnits: 'pixels',\r\n          widthScale: widthScale,\r\n          opacity: 0.9,\r\n          parameters: { depthTest: false },\r\n          updateTriggers: { getWidth: [scaleFactor] },\r\n          transitions: { getWidth: 150 },\r\n          pickable: true,\r\n          autoHighlight: true,\r\n          highlightColor: [255, 255, 255], // [64, 255, 64],\r\n          onHover: setHoverInfo,\r\n        })\r\n      )\r\n    } else {\r\n      layers.push(\r\n        //@ts-ignore:\r\n        new PathOffsetLayer({\r\n          id: 'deliveryroutes',\r\n          data: legs,\r\n          getPath: (d: any) => d.points,\r\n          getColor: (d: any) => d.color,\r\n          getWidth: scaleFactor ? (d: any) => d.totalSize : 3,\r\n          getOffset: 2, // 2: RIGHT-SIDE TRAFFIC\r\n          opacity: 1,\r\n          widthMinPixels: 3,\r\n          widthMaxPixels: 200,\r\n          widthUnits: 'pixels',\r\n          widthScale: widthScale,\r\n          rounded: true,\r\n          shadowEnabled: false,\r\n          pickable: true,\r\n          autoHighlight: true,\r\n          highlightColor: [255, 255, 255], // [64, 255, 64],\r\n          onHover: setHoverInfo,\r\n          parameters: { depthTest: false },\r\n          updateTriggers: { getWidth: [scaleFactor] },\r\n          transitions: { getWidth: 150 },\r\n        })\r\n      )\r\n    }\r\n\r\n    // destination labels\r\n    layers.push(\r\n      //@ts-ignore\r\n      new TextLayer({\r\n        id: 'dest-labels',\r\n        data: stopActivities,\r\n        background: true,\r\n        backgroundPadding: numSelectedTours !== 1 ? [2, 1, 2, 1] : [3, 2, 3, 1],\r\n        getColor: [255, 255, 255],\r\n        getBackgroundColor: (d: any) => {\r\n          const pickups = d.visits.reduce(\r\n            (prev: number, visit: any) => prev + visit.pickup.length,\r\n            0\r\n          )\r\n          const deliveries = d.visits.reduce(\r\n            (prev: number, visit: any) => prev + visit.delivery.length,\r\n            0\r\n          )\r\n          if (pickups && deliveries) return [0, 0, 255]\r\n          if (pickups) return ActivityColor.pickup\r\n          if (deliveries) return ActivityColor.delivery\r\n          return [240, 130, 0]\r\n        },\r\n        getPosition: (d: any) => d.midpoint,\r\n        getText: (d: any) =>\r\n          d.label == 'Depot' ? d.label : numSelectedTours !== 1 ? ' ' : `${d.label}`,\r\n        getSize: (d: any) => (d.label == 'Depot' ? 11 : numSelectedTours !== 1 ? 4 : 11),\r\n        getTextAnchor: 'middle',\r\n        getAlignmentBaseline: 'center',\r\n        opacity: 1,\r\n        noAlloc: false,\r\n        billboard: true,\r\n        sizeScale: 1,\r\n        pickable: true,\r\n        autoHighlight: true,\r\n        highlightColor: [255, 255, 255],\r\n        onHover: setHoverInfo,\r\n        visible: shipmentDotsOnTourMap,\r\n      })\r\n    )\r\n  }\r\n\r\n  // shipment panel\r\n  if (activeTab == 'shipments') {\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new ScatterplotLayer({\r\n        id: 'deliveries',\r\n        data: pickupsAndDeliveries.deliveries,\r\n        getPosition: (d: any) => d.coord,\r\n        getColor: ActivityColor.delivery,\r\n        getRadius: 3,\r\n        opacity: 0.9,\r\n        parameters: { depthTest: false },\r\n        pickable: true,\r\n        radiusUnits: 'pixels',\r\n        onHover: setHoverInfo,\r\n      })\r\n    )\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new ScatterplotLayer({\r\n        id: 'pickups',\r\n        data: pickupsAndDeliveries.pickups,\r\n        getPosition: (d: any) => d.coord,\r\n        getColor: ActivityColor.pickup,\r\n        getRadius: 2,\r\n        opacity: 0.9,\r\n        parameters: { depthTest: false },\r\n        pickable: true,\r\n        radiusUnits: 'pixels',\r\n        onHover: setHoverInfo,\r\n      })\r\n    )\r\n\r\n    const opacity = shipments.length > 1 ? 32 : 255\r\n\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new ArcLayer({\r\n        id: 'shipments',\r\n        data: shipments,\r\n        getSourcePosition: (d: any) => [d.fromX, d.fromY],\r\n        getTargetPosition: (d: any) => [d.toX, d.toY],\r\n        getSourceColor: [0, 228, 255, opacity],\r\n        getTargetColor: [240, 0, 60, 224],\r\n        getWidth: scaleFactor ? (d: any) => parseInt(d.$size) || 1.0 : 1,\r\n        widthUnits: 'pixels',\r\n        getHeight: 0.5,\r\n        opacity: 0.9,\r\n        parameters: { depthTest: false },\r\n        widthScale: widthScale,\r\n        widthMinPixels: 1,\r\n        widthMaxPixels: 100,\r\n        updateTriggers: { getWidth: [scaleFactor] },\r\n        transitions: { getWidth: 200 },\r\n      })\r\n    )\r\n  }\r\n\r\n  // DEPOTS ------\r\n  layers.push(\r\n    //@ts-ignore:\r\n    new TextLayer({\r\n      id: 'depots',\r\n      data: depots,\r\n      background: true,\r\n      backgroundPadding: [3, 2, 3, 1],\r\n      getColor: [255, 255, 255],\r\n      getBackgroundColor: [0, 150, 240],\r\n      getPosition: (d: any) => d.midpoint,\r\n      getText: (d: any) => 'Depot',\r\n      getTextAnchor: 'middle',\r\n      getAlignmentBaseline: 'center',\r\n      getSize: 11,\r\n      opacity: 1,\r\n      noAlloc: false,\r\n      billboard: true,\r\n      sizeScale: 1,\r\n      pickable: true,\r\n      autoHighlight: true,\r\n      highlightColor: [255, 255, 255],\r\n      onHover: setHoverInfo,\r\n    })\r\n  )\r\n\r\n  return (\r\n    <DeckGL\r\n      layers={layers}\r\n      pickingRadius={3}\r\n      controller={true}\r\n      getCursor={() => 'pointer'}\r\n      onClick={handleClick}\r\n      viewState={viewState}\r\n      onViewStateChange={(e: any) => handleViewState(e.viewState)}\r\n    >\r\n      {\r\n        /*\r\n        // @ts-ignore */\r\n        <StaticMap mapboxApiAccessToken={MAPBOX_TOKEN} mapStyle={globalStore.getters.mapStyle} />\r\n      }\r\n      {renderTooltip(hoverInfo)}\r\n    </DeckGL>\r\n  )\r\n}\r\n","<template lang=\"pug\">\r\n.carrier-viewer(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n                :style='{\"background\": urlThumbnail}'\r\n                oncontextmenu=\"return false\")\r\n\r\n  .container-1\r\n    .main-panel\r\n      tour-viz.anim(v-if=\"!thumbnail\"\r\n                  :activeTab=\"activeTab\"\r\n                  :shipments=\"shownShipments\"\r\n                  :depots=\"shownDepots\"\r\n                  :legs=\"shownLegs\"\r\n                  :stopActivities=\"stopActivities\"\r\n                  :dark=\"globalState.isDarkMode\"\r\n                  :center=\"vizDetails.center\"\r\n                  :viewId=\"linkLayerId\"\r\n                  :settings=\"vizSettings\"\r\n                  :numSelectedTours=\"selectedTours.length\"\r\n                  :onClick=\"handleClick\")\r\n      ZoomButtons(v-if=\"!thumbnail\")\r\n      .xmessage(v-if=\"myState.statusMessage\") {{ myState.statusMessage }}\r\n\r\n    .right-panel(v-if=\"!thumbnail\" :darkMode=\"true\")\r\n      h3(style=\"margin-left: 0.25rem\" v-if=\"carriers.length\") {{ $t('carriers') }}\r\n\r\n      .carrier-list\r\n        .carrier(v-for=\"carrier in carriers\" :key=\"carrier.$id\"\r\n                 :class=\"{selected: carrier.$id===selectedCarrier}\"\r\n                 @click=\"handleSelectCarrier(carrier)\")\r\n          .carrier-title {{ carrier.$id }}\r\n\r\n      h4 {{ selectedCarrier || 'Details' }}\r\n\r\n\r\n      b-field.detail-buttons(v-if=\"selectedCarrier\" size=\"is-small\")\r\n\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"shipments\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('shipments') }}\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"tours\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('tours') }}\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"vehicles\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('vehicles') }}\r\n        b-radio-button(v-if=\"services.length\" v-model=\"activeTab\" native-value=\"services\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('services') }}\r\n\r\n      .detail-area\r\n        .shipments(v-if=\"activeTab=='shipments'\")\r\n            span {{ $t('shipments')}}: {{ shipments.length}}\r\n            .leaf.tour(v-for=\"shipment,i in shipments\" :key=\"`${i}-${shipment.$id}`\"\r\n                @click=\"handleSelectShipment(shipment)\"\r\n                :class=\"{selected: shipment==selectedShipment, 'shipment-in-tour': shipmentIdsInTour.includes(shipment.$id)}\"\r\n            ) {{ `${shipment.$id}: ${shipment.$from}-${shipment.$to}` }}\r\n\r\n        .tours(v-if=\"activeTab=='tours'\")\r\n            .dropdown(v-if=\"this.plans.length > 1\" :class=\"{'is-active': dropdownIsActive}\" style=\"width: 100%\")\r\n              .dropdown-trigger(@click=\"selectDropdown()\")\r\n                button\r\n                  span Plan {{ selectedPlanIndex + 1 }}\r\n                  span.icon.is-small\r\n                    i.fas.fa-angle-down\r\n              .dropdown-menu\r\n                .dropdown-content\r\n                  a.dropdown-item(v-for=\"(plan, index) in this.plans\" @click=\"selectPlan(plan)\" :class=\"{'is-active': plan.$selected == 'true'}\") Plan {{ index + 1 }}\r\n\r\n            span {{ $t('tours')}}: {{ tours.length}}\r\n            .leaf.tour(v-for=\"tour,i in tours\" :key=\"`${i}-${tour.$id}`\"\r\n                @click=\"handleSelectTour(tour)\"\r\n                :class=\"{selected: selectedTours.includes(tour)}\") {{ `${tour.vehicleId}` }}\r\n\r\n        .vehicles(v-if=\"activeTab=='vehicles'\")\r\n            span {{ $t('vehicles')}}: {{ vehicles.length}}\r\n            .leaf.tour(v-for=\"veh,i in vehicles\" :key=\"`${i}-${veh.$id}`\") {{ veh.$id }}\r\n\r\n        .services(v-if=\"activeTab=='services'\")\r\n            span {{ $t('services')}}: {{ services.length}}\r\n            .leaf.tour(v-for=\"service,i in services\" :key=\"`${i}-${service.$id}`\") {{ `${service.$id}` }}\r\n\r\n      .switchbox\r\n        .switches\r\n          p {{$t('scaleSize')}}\r\n          b-slider.slider(:tooltip=\"false\" type=\"is-link\" size=\"is-small\" v-model=\"vizSettings.scaleFactor\")\r\n        .switches\r\n          b-switch(v-model=\"vizSettings.shipmentDotsOnTourMap\")\r\n            span(v-html=\"$t('shipmentDots')\")\r\n          b-switch(v-model=\"vizSettings.simplifyTours\")\r\n            span(v-html=\"$t('flatten')\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      carriers: 'Carriers',\r\n      vehicles: 'VEHICLES',\r\n      services: 'SERVICES',\r\n      shipments: 'SHIPMENTS',\r\n      tours: 'TOURS',\r\n      pickup: 'Pickup',\r\n      delivery: 'Delivery',\r\n      flatten: 'Simple&nbsp;tours',\r\n      shipmentDots: 'Show shipments',\r\n      scaleSize: 'Widths',\r\n      scaleFactor: 'Width',\r\n    },\r\n    de: {\r\n      carriers: 'Unternehmen',\r\n      vehicles: 'FAHRZEUGE',\r\n      services: 'BETRIEBE',\r\n      shipments: 'LIEFERUNGEN',\r\n      tours: 'TOUREN',\r\n      pickup: 'Abholung',\r\n      delivery: 'Lieferung',\r\n    },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\n\r\nimport { ToggleButton } from 'vue-js-toggle-button'\r\nimport readBlob from 'read-blob'\r\nimport YAML from 'yaml'\r\nimport naturalSort from 'javascript-natural-sort'\r\nimport colorMap from 'colormap'\r\nimport pako from '@aftersim/pako'\r\nimport { blobToArrayBuffer, blobToBinaryString } from 'blob-util'\r\nimport * as coroutines from 'js-coroutines'\r\n\r\nimport globalStore from '@/store'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\nimport LegendColors from '@/components/LegendColors'\r\nimport ZoomButtons from '@/components/ZoomButtons.vue'\r\nimport { parseXML, findMatchingGlobInFiles, arrayBufferToBase64 } from '@/js/util'\r\n\r\nimport RoadNetworkLoader from '@/workers/RoadNetworkLoader.worker.ts?worker'\r\n\r\nimport TourViz from './TourViz'\r\n\r\nimport {\r\n  FileSystem,\r\n  LegendItem,\r\n  LegendItemType,\r\n  FileSystemConfig,\r\n  VisualizationPlugin,\r\n  LIGHT_MODE,\r\n  DARK_MODE,\r\n  REACT_VIEW_HANDLES,\r\n  MAP_STYLES_OFFLINE,\r\n  ColorScheme,\r\n} from '@/Globals'\r\n\r\ninterface NetworkLinks {\r\n  source: Float32Array\r\n  dest: Float32Array\r\n  linkIds: any[]\r\n  projection: String\r\n}\r\n\r\nnaturalSort.insensitive = true\r\n\r\n// An ActivityLocation is a link on which activities occur.\r\n// A location can have multiple visits on a tour!\r\n// Visits can have multiple pickups/dropoffs.\r\ninterface ActivityLocation {\r\n  link: string\r\n  midpoint: number[]\r\n  visits: any[]\r\n  label: string\r\n  tour: any\r\n  details?: any\r\n  ptFrom: number[]\r\n  ptTo: number[]\r\n}\r\n\r\nconst CarrierPlugin = defineComponent({\r\n  name: 'CarrierPlugin',\r\n  i18n,\r\n  components: {\r\n    LegendColors,\r\n    ToggleButton,\r\n    TourViz,\r\n    ZoomButtons,\r\n  },\r\n  props: {\r\n    root: { type: String, required: true },\r\n    subfolder: { type: String, required: true },\r\n    yamlConfig: String,\r\n    config: Object as any,\r\n    thumbnail: Boolean,\r\n  },\r\n  data: () => {\r\n    return {\r\n      linkLayerId: Math.floor(1e12 * Math.random()),\r\n\r\n      vizSettings: {\r\n        simplifyTours: false,\r\n        scaleShipmentSizes: true,\r\n        shipmentDotsOnTourMap: true,\r\n        scaleFactor: 0, // 0 means don't scale at all\r\n      },\r\n\r\n      vizDetails: {\r\n        network: '',\r\n        carriers: '',\r\n        projection: '',\r\n        title: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        center: null as any,\r\n      },\r\n\r\n      myState: {\r\n        statusMessage: '',\r\n        isRunning: false,\r\n        subfolder: '',\r\n        yamlConfig: '',\r\n        thumbnail: true,\r\n        data: [] as any[],\r\n      },\r\n\r\n      searchTerm: '',\r\n      searchEnabled: false,\r\n\r\n      globalState: globalStore.state,\r\n      isLoaded: true,\r\n      showHelp: false,\r\n      activeTab: 'shipments',\r\n\r\n      speedStops: [-10, -5, -2, -1, -0.5, -0.25, 0, 0.25, 0.5, 1, 2, 5, 10],\r\n      speed: 1,\r\n\r\n      legendBits: [] as any[],\r\n\r\n      links: null as any,\r\n\r\n      toggleTours: true,\r\n      toggleVehicles: true,\r\n      toggleShipments: true,\r\n      toggleServices: true,\r\n\r\n      detailContent: '',\r\n\r\n      data: null as any,\r\n\r\n      carriers: [] as any[],\r\n      vehicles: [] as any[],\r\n      shipments: [] as any[],\r\n      shipmentLookup: {} as any, // keyed on $id\r\n      services: [] as any[],\r\n      stopActivities: [] as any[],\r\n      tours: [] as any[],\r\n      plans: [] as any[],\r\n\r\n      shownShipments: [] as any[],\r\n      shipmentIdsInTour: [] as any[],\r\n\r\n      depots: [] as any,\r\n      shownDepots: [] as any,\r\n\r\n      shownLegs: [] as {\r\n        count: number\r\n        shipmentsOnBoard: string[]\r\n        totalSize: number\r\n        points: number[][]\r\n        tour: any\r\n        color: number[]\r\n        type: string\r\n      }[],\r\n\r\n      selectedCarrier: '',\r\n      selectedTours: [] as any[],\r\n      selectedPlan: null as any,\r\n      selectedPlanIndex: null as any,\r\n      selectedShipment: null as any,\r\n\r\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\r\n\r\n      vehicleLookup: [] as string[],\r\n      vehicleLookupString: {} as { [id: string]: number },\r\n\r\n      // always pick the same \"random\" colors\r\n      rgb: colorMap({\r\n        colormap: 'phase',\r\n        nshades: 9,\r\n        format: 'rba',\r\n      })\r\n        .map((a: any) => a.slice(0, 3))\r\n        .reverse(),\r\n\r\n      dropdownIsActive: false,\r\n    }\r\n  },\r\n  computed: {\r\n    fileApi(): HTTPFileSystem {\r\n      return new HTTPFileSystem(this.fileSystem, globalStore)\r\n    },\r\n\r\n    fileSystem(): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === this.root\r\n      )\r\n      if (svnProject.length === 0) {\r\n        console.log('no such project')\r\n        throw Error\r\n      }\r\n      return svnProject[0]\r\n    },\r\n\r\n    urlThumbnail(): string {\r\n      return this.thumbnailUrl\r\n    },\r\n\r\n    textColor(): any {\r\n      const lightmode = {\r\n        text: '#3498db',\r\n        bg: '#eeeef480',\r\n      }\r\n\r\n      const darkmode = {\r\n        text: 'white',\r\n        bg: '#181518aa',\r\n      }\r\n\r\n      return this.globalState.isDarkMode ? darkmode : lightmode\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    '$store.state.viewState'() {\r\n      if (!REACT_VIEW_HANDLES[this.linkLayerId]) return\r\n      REACT_VIEW_HANDLES[this.linkLayerId]()\r\n    },\r\n\r\n    'globalState.isDarkMode'() {\r\n      this.updateLegendColors()\r\n    },\r\n\r\n    async 'globalState.authAttempts'() {\r\n      console.log('AUTH CHANGED - Reload')\r\n      if (!this.yamlConfig) this.buildRouteFromUrl()\r\n      await this.getVizDetails()\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    handleSelectShipment(shipment: any) {\r\n      console.log({ shipment })\r\n\r\n      if (this.selectedShipment === shipment) {\r\n        this.selectedShipment = null\r\n        this.shownShipments = []\r\n\r\n        // if everything is deselected, reset view\r\n        if (!this.selectedTours.length) {\r\n          const carrier = this.carriers.filter(c => c.$id == this.selectedCarrier)\r\n          this.selectedCarrier = ''\r\n          this.handleSelectCarrier(carrier[0])\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      this.shownShipments = this.shipments.filter(s => s.$id === shipment.$id)\r\n      this.selectedShipment = shipment\r\n    },\r\n\r\n    processActivitiesInTour(tour: any): {\r\n      shipmentIdsInTour: any[]\r\n      stopActivities: ActivityLocation[]\r\n    } {\r\n      const shipmentIdsInTour: any[] = []\r\n      let stopCount = 0\r\n\r\n      // link ID is the lookup key for activity locations.\r\n      // BUT, since link-IDs are often numbers, we must always\r\n      // prepend an \"L\" to the link-id so that the key order\r\n      // is stable and based on insertion order.\r\n      const locations: { [link: string]: ActivityLocation } = {}\r\n\r\n      // figure out depot location as our starting point\r\n      let vehicle = this.vehicles.filter(v => v.$id === tour.vehicleId)[0]\r\n\r\n      const depotLink = this.links[vehicle.$depotLinkId]\r\n      let linkMidpoint = [0.5 * (depotLink[0] + depotLink[2]), 0.5 * (depotLink[1] + depotLink[3])]\r\n      let prevLocation = vehicle.$depotLinkId\r\n\r\n      // store starting location\r\n      locations[`L${vehicle.$depotLinkId}`] = {\r\n        link: vehicle.$depotLinkId,\r\n        midpoint: linkMidpoint,\r\n        visits: [{ pickup: [], delivery: [], service: [] }],\r\n        label: '',\r\n        tour,\r\n        details: {},\r\n        ptFrom: [depotLink[0], depotLink[1]],\r\n        ptTo: [depotLink[2], depotLink[3]],\r\n      }\r\n\r\n      for (const activity of tour.plan) {\r\n        if (!activity.$shipmentId) continue\r\n\r\n        shipmentIdsInTour.push(activity.$shipmentId)\r\n\r\n        const shipment = this.shipmentLookup[activity.$shipmentId]\r\n        if (!shipment) continue\r\n\r\n        const link = (activity.$type === 'pickup' ? shipment.$from : shipment.$to) as string\r\n        const ptFrom = [this.links[link][0], this.links[link][1]]\r\n        const ptTo = [this.links[link][2], this.links[link][3]]\r\n        const midpoint = [0.5 * (ptFrom[0] + ptTo[0]), 0.5 * (ptFrom[1] + ptTo[1])]\r\n\r\n        // pickup,delivery,service - translated for UI\r\n        const actType = this.$t(activity.$type)\r\n        // get details: remove coords, IDs, that we don't need to show the user in UI.\r\n        const { from, fromX, fromY, to, toX, toY, id, ...details } = shipment\r\n\r\n        const act = {\r\n          id: shipment.$id,\r\n          type: actType,\r\n          count: stopCount++,\r\n          link,\r\n          midpoint,\r\n          label: '',\r\n          tour,\r\n          details,\r\n          ptFrom,\r\n          ptTo,\r\n        }\r\n\r\n        // where to store it? same or new location?\r\n        if (link == prevLocation) {\r\n          // same loc as last activity\r\n          locations[`L${link}`].visits[locations[`L${link}`].visits.length - 1][\r\n            activity.$type\r\n          ].push(act)\r\n        } else if (`L${link}` in locations) {\r\n          // previously-visited location. Start a new visit!\r\n          const visit = { pickup: [], delivery: [], service: [] } as any\r\n          visit[activity.$type].push(act) // so gets saved in either pickup[] or delivery[]\r\n          locations[`L${link}`].visits.push(visit)\r\n        } else {\r\n          // never been here before\r\n          const visit = { pickup: [], delivery: [], service: [] } as any\r\n          visit[activity.$type].push(act)\r\n          locations[`L${link}`] = {\r\n            link,\r\n            midpoint,\r\n            label: '',\r\n            tour,\r\n            details,\r\n            ptFrom,\r\n            ptTo,\r\n            visits: [visit],\r\n          }\r\n        }\r\n        prevLocation = link\r\n      }\r\n\r\n      // convert to an array, insertion order is stable value order\r\n      const stopActivities = Object.values(locations)\r\n\r\n      // set stop labels: use count for all but the first one\r\n      for (let sCount = 0; sCount < stopActivities.length; sCount++) {\r\n        stopActivities[sCount].label = `${sCount}`\r\n      }\r\n      stopActivities[0].label = 'Depot'\r\n\r\n      // console.log({ shipmentIdsInTour, stopActivities })\r\n      return { shipmentIdsInTour, stopActivities }\r\n    },\r\n\r\n    setupDepots() {\r\n      const depots: { [link: string]: any } = {}\r\n\r\n      this.vehicles.forEach((v: any) => {\r\n        const linkId = v.$depotLinkId\r\n        let depotLink = this.links[linkId]\r\n\r\n        if (!depotLink) return\r\n\r\n        if (!depots[linkId]) {\r\n          depots[linkId] = {\r\n            type: 'depot',\r\n            link: v.$depotLinkId,\r\n            midpoint: [0.5 * (depotLink[0] + depotLink[2]), 0.5 * (depotLink[1] + depotLink[3])],\r\n            coords: this.links[v.$depotLinkId],\r\n            vehicles: {} as any,\r\n          }\r\n        }\r\n        depots[linkId].vehicles[v.$id] = v\r\n      })\r\n\r\n      this.depots = Object.values(depots)\r\n      this.shownDepots = this.depots.slice(0)\r\n    },\r\n\r\n    // -----------------------------------------------------------------------\r\n    selectAllTours() {\r\n      this.selectedTours = []\r\n      this.shownLegs = []\r\n      this.stopActivities = []\r\n      this.shownDepots = []\r\n      this.shownShipments = this.shipments.slice(0)\r\n\r\n      for (const tour of this.tours) {\r\n        //  all legs\r\n        tour.legs.forEach((leg: any, count_route: number) =>\r\n          this.addRouteToMap(tour, leg, count_route++)\r\n        )\r\n\r\n        // all activities\r\n        const z = this.processActivitiesInTour(tour)\r\n        this.stopActivities = this.stopActivities.concat(z.stopActivities)\r\n\r\n        // all depots\r\n        this.setupDepots()\r\n      }\r\n    },\r\n\r\n    async handleSelectTour(tour: any) {\r\n      //this unselects tour if user clicks an already-selected tour again\r\n      if (this.selectedTours.includes(tour)) {\r\n        this.selectedTours = this.selectedTours.filter((element: any) => element !== tour)\r\n        this.shownLegs = this.shownLegs.filter(leg => leg.tour !== tour)\r\n        this.stopActivities = this.stopActivities.filter(stop => stop.tour !== tour)\r\n\r\n        // if everything is deselected, EVERYTHING is selected! :-O\r\n        if (!this.selectedTours.length) this.selectAllTours()\r\n        return\r\n      }\r\n\r\n      // if this is the first selected tour, remove everything else first\r\n      if (!this.selectedTours.length) {\r\n        this.selectedTours = []\r\n        this.shownLegs = []\r\n        this.stopActivities = []\r\n        this.shownDepots = []\r\n      }\r\n\r\n      this.selectedTours.push(tour)\r\n\r\n      const { shipmentIdsInTour, stopActivities } = this.processActivitiesInTour(tour)\r\n      this.shipmentIdsInTour = shipmentIdsInTour\r\n\r\n      // Add all legs from all routes of this tour to the map\r\n      let count_route = 0\r\n      for (const leg of tour.legs) {\r\n        this.addRouteToMap(tour, leg, count_route++)\r\n      }\r\n\r\n      // add stop activity locations at the very end\r\n      this.stopActivities = this.stopActivities.concat(stopActivities)\r\n    },\r\n\r\n    addRouteToMap(\r\n      tour: any,\r\n      leg: { links: any[]; shipmentsOnBoard: string[]; totalSize: number },\r\n      count_route: number\r\n    ) {\r\n      // starting point from xy:[0,1]\r\n      const points = [[this.links[leg.links[0]][0], this.links[leg.links[0]][1]]]\r\n\r\n      for (const link of leg.links) {\r\n        const lastPoint = points[points.length - 1]\r\n        const fromXY = [this.links[link][0], this.links[link][1]]\r\n\r\n        // add from-point if it isn't a duplicate\r\n        if (fromXY[0] !== lastPoint[0] || fromXY[1] !== lastPoint[1]) {\r\n          points.push(fromXY)\r\n        }\r\n\r\n        // always add to-point: xy:[2,3]\r\n        points.push([this.links[link][2], this.links[link][3]])\r\n      }\r\n\r\n      this.shownLegs = this.shownLegs.concat([\r\n        {\r\n          tour,\r\n          shipmentsOnBoard: leg.shipmentsOnBoard,\r\n          totalSize: leg.totalSize,\r\n          count: count_route,\r\n          points,\r\n          color: this.rgb[(3 + tour.tourNumber) % this.rgb.length],\r\n          type: 'leg',\r\n        },\r\n      ])\r\n    },\r\n\r\n    handleSelectCarrier(carrier: any) {\r\n      this.dropdownIsActive = false\r\n\r\n      if (!this.links) return\r\n\r\n      const id = carrier.$id\r\n\r\n      this.vehicles = []\r\n      this.shipments = []\r\n      this.services = []\r\n      this.tours = []\r\n      this.plans = []\r\n      this.shownShipments = []\r\n      this.shownDepots = []\r\n      this.selectedShipment = null\r\n      this.shipmentIdsInTour = []\r\n      this.stopActivities = []\r\n      this.shownLegs = []\r\n\r\n      // unselect carrier\r\n      if (this.selectedCarrier === id) {\r\n        this.selectedCarrier = ''\r\n        return\r\n      }\r\n\r\n      this.selectedCarrier = id\r\n\r\n      // vehicles\r\n      let vehicles = carrier.capabilities.vehicles.vehicle || []\r\n      this.vehicles = vehicles.sort((a: any, b: any) => naturalSort(a, b))\r\n\r\n      // depots\r\n      this.setupDepots()\r\n\r\n      // shipments\r\n      this.shipments = this.processShipments(carrier)\r\n\r\n      if (carrier.services?.service?.length)\r\n        this.services = carrier.services.service\r\n          .map((s: any) => s.$)\r\n          .sort((a: any, b: any) => naturalSort(a.$id, b.$id))\r\n\r\n      this.tours = this.processTours(carrier)\r\n\r\n      // select all everything\r\n      this.shownShipments = this.shipments\r\n      this.selectAllTours()\r\n    },\r\n\r\n    getAllPlans(carrier: any) {\r\n      // Add plan to plans[] if there is no plans-tag and only one plan\r\n      if (carrier.plan != undefined) {\r\n        this.plans.push(carrier.plan)\r\n        this.selectedPlan = carrier.plan\r\n        return\r\n      }\r\n\r\n      if (carrier.plans != undefined) {\r\n        // Add plan to plans[] if a plans-tag has only one child\r\n        if (carrier.plans.plan.length == undefined) {\r\n          this.plans.push(carrier.plans.plan)\r\n          this.selectedPlan = carrier.plans.plan\r\n          return\r\n        }\r\n\r\n        // Add plans to plans[] if a plans-tag exists and the plans-tag has multiple childs\r\n        this.plans = carrier.plans.plan\r\n\r\n        for (let i = 0; i < carrier.plans.plan.length; i++) {\r\n          if (carrier.plans.plan[i].selected == 'true') {\r\n            this.selectedPlan = carrier.plans.plan[i]\r\n            break\r\n          }\r\n          this.selectedPlan = carrier.plans.plan[i]\r\n        }\r\n      }\r\n    },\r\n\r\n    processTours(carrier: any) {\r\n      this.getAllPlans(carrier)\r\n\r\n      if (!this.selectPlan || !this.plans.length) return []\r\n\r\n      const tours: any[] = this.selectedPlan.tour.map((tour: any, i: number) => {\r\n        // reconstitute the plan. Our XML library builds\r\n        // two arrays: one for acts and one for legs.\r\n        // We need them stitched back together in the correct order.\r\n        const plan = [tour.act[0]]\r\n        const shipmentsOnBoard = new Set()\r\n\r\n        for (let i = 1; i < tour.act.length; i++) {\r\n          // insert list of shipments onboard\r\n          tour.leg[i - 1].shipmentsOnBoard = [...shipmentsOnBoard]\r\n          plan.push(tour.leg[i - 1])\r\n          plan.push(tour.act[i])\r\n\r\n          // account for pickups/deliveries\r\n          if (tour.act[i].$type == 'pickup' && tour.act[i].$shipmentId)\r\n            shipmentsOnBoard.add(tour.act[i].$shipmentId)\r\n          if (tour.act[i].$type == 'delivery' && tour.act[i].$shipmentId)\r\n            shipmentsOnBoard.delete(tour.act[i].$shipmentId)\r\n        }\r\n\r\n        // Parse any route strings \"123434 234143 14241\"\r\n        const legs = tour.leg\r\n          .filter((leg: any) => leg.route && leg.route.length)\r\n          .map((leg: any) => {\r\n            // store shipment object, not id\r\n            const shipmentsOnBoard = leg.shipmentsOnBoard.map((id: any) => this.shipmentLookup[id])\r\n            const totalSize = shipmentsOnBoard.reduce(\r\n              (prev: number, curr: any) => prev + parseFloat(curr?.$size || 0),\r\n              0\r\n            )\r\n            return {\r\n              shipmentsOnBoard,\r\n              totalSize,\r\n              links: leg.route ? leg.route.split(' ') : [],\r\n            }\r\n          })\r\n\r\n        const p = {\r\n          vehicleId: tour.$vehicleId,\r\n          plan,\r\n          legs, // legs.links, legs.shipmentsOnBoard, legs.totalSize\r\n          tourNumber: 0,\r\n        }\r\n        return p\r\n      })\r\n\r\n      tours.sort((a: any, b: any) => naturalSort(a.vehicleId, b.vehicleId))\r\n\r\n      // now assign them numbers based on their sorted order\r\n      tours.forEach((tour, i) => (tour.tourNumber = i))\r\n\r\n      return tours\r\n    },\r\n\r\n    processShipments(carrier: any) {\r\n      this.shipmentLookup = {} as any\r\n      if (!carrier.shipments?.shipment?.length) return []\r\n\r\n      const shipments = carrier.shipments.shipment.sort((a: any, b: any) =>\r\n        naturalSort(a.$id, b.$id)\r\n      )\r\n      try {\r\n        for (const shipment of shipments) {\r\n          // shipment has link id, so we go from link.from to link.to\r\n          shipment.fromX = 0.5 * (this.links[shipment.$from][0] + this.links[shipment.$from][2])\r\n          shipment.fromY = 0.5 * (this.links[shipment.$from][1] + this.links[shipment.$from][3])\r\n          shipment.toX = 0.5 * (this.links[shipment.$to][0] + this.links[shipment.$to][2])\r\n          shipment.toY = 0.5 * (this.links[shipment.$to][1] + this.links[shipment.$to][3])\r\n\r\n          this.shipmentLookup[shipment.$id] = shipment\r\n        }\r\n      } catch (e) {\r\n        // if xy are missing, skip this -- just means network isn't loaded yet.\r\n      }\r\n\r\n      return shipments\r\n    },\r\n\r\n    // this happens if viz is the full page, not a thumbnail on a project page\r\n    buildRouteFromUrl() {\r\n      const params = this.$route.params\r\n      if (!params.project || !params.pathMatch) {\r\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\r\n        return\r\n      }\r\n\r\n      // subfolder and config file\r\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\r\n      const subfolder = params.pathMatch.substring(0, sep)\r\n      const config = params.pathMatch.substring(sep)\r\n\r\n      this.myState.subfolder = subfolder\r\n      this.myState.yamlConfig = config\r\n    },\r\n\r\n    async getVizDetails() {\r\n      // are we in a dashboard?\r\n      if (this.config) {\r\n        this.vizDetails = Object.assign({}, this.config)\r\n        return\r\n      }\r\n\r\n      // if a YAML file was passed in, just use it\r\n      if (this.yamlConfig?.endsWith('yaml') || this.yamlConfig?.endsWith('yml')) {\r\n        try {\r\n          const filename =\r\n            this.yamlConfig.indexOf('/') > -1\r\n              ? this.yamlConfig\r\n              : this.subfolder + '/' + this.yamlConfig\r\n\r\n          const text = await this.fileApi.getFileText(filename)\r\n          this.vizDetails = YAML.parse(text)\r\n          return\r\n        } catch (e) {\r\n          console.log('failed')\r\n          // maybe it failed because password?\r\n          const err = e as any\r\n          if (this.fileSystem.needPassword && err.status === 401) {\r\n            globalStore.commit('requestLogin', this.fileSystem.slug)\r\n          }\r\n          return\r\n        }\r\n      }\r\n\r\n      // Fine, build the config based on folder contents -------------------------\r\n      const title = this.myState.yamlConfig.substring(\r\n        0,\r\n        15 + this.myState.yamlConfig.indexOf('carriers')\r\n      )\r\n\r\n      // Road network: first try the most obvious network filename:\r\n      const { files } = await this.fileApi.getDirectory(this.myState.subfolder)\r\n\r\n      let network = this.myState.yamlConfig.replaceAll('carriers', 'network')\r\n      // if the obvious network file doesn't exist, just grab... the first network file:\r\n      if (files.indexOf(network) == -1) {\r\n        const allNetworks = files.filter(f => f.indexOf('network') > -1)\r\n        if (allNetworks.length) network = allNetworks[0]\r\n        else {\r\n          this.myState.statusMessage = 'No road network found.'\r\n          network = ''\r\n        }\r\n      }\r\n\r\n      this.vizDetails = {\r\n        network,\r\n        carriers: this.yamlConfig as any,\r\n        title,\r\n        description: '',\r\n        center: this.vizDetails.center,\r\n        projection: '',\r\n        thumbnail: '',\r\n      }\r\n\r\n      const t = 'Carrier Explorer'\r\n      this.$emit('title', t)\r\n\r\n      this.buildThumbnail()\r\n    },\r\n\r\n    async setMapCenter() {\r\n      let samples = 0\r\n      let longitude = 0\r\n      let latitude = 0\r\n\r\n      if (this.vizDetails.center) {\r\n        if (typeof this.vizDetails.center == 'string') {\r\n          this.vizDetails.center = this.vizDetails.center.split(',').map(Number)\r\n        }\r\n        longitude = this.vizDetails.center[0]\r\n        latitude = this.vizDetails.center[1]\r\n      } else if (!this.vizDetails.center) {\r\n        this.data = Object.entries(this.links)\r\n\r\n        if (!this.data.length) return\r\n\r\n        const numLinks = this.data.length / 2\r\n\r\n        const gap = 4096\r\n        for (let i = 0; i < numLinks; i += gap) {\r\n          longitude += this.data[i * 2][1][0]\r\n          latitude += this.data[i * 2 + 1][1][1]\r\n          samples++\r\n        }\r\n\r\n        longitude = longitude / samples\r\n        latitude = latitude / samples\r\n      }\r\n      if (longitude && latitude) {\r\n        this.$store.commit('setMapCamera', {\r\n          longitude,\r\n          latitude,\r\n          zoom: 9,\r\n          bearing: 0,\r\n          pitch: 0,\r\n          jump: false,\r\n        })\r\n      }\r\n    },\r\n\r\n    async buildThumbnail() {\r\n      if (this.thumbnail && this.vizDetails.thumbnail) {\r\n        try {\r\n          const blob = await this.fileApi.getFileBlob(\r\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\r\n          )\r\n          const buffer = await readBlob.arraybuffer(blob)\r\n          const base64 = arrayBufferToBase64(buffer)\r\n          if (base64)\r\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n      }\r\n    },\r\n\r\n    handleClick(object: any) {\r\n      console.log('CLICK!', object)\r\n      if (!object) this.clickedEmptyMap()\r\n      if (object?.type == 'depot') this.clickedDepot(object)\r\n      if (object?.type == 'leg') this.clickedLeg(object)\r\n    },\r\n\r\n    clickedDepot(object: any) {\r\n      const vehiclesAtThisDepot = Object.values(object.vehicles).map((v: any) => v.$id)\r\n      console.log({ vehiclesAtThisDepot })\r\n      this.selectedTours = []\r\n      this.shownShipments = []\r\n\r\n      for (const tour of this.tours) {\r\n        if (vehiclesAtThisDepot.includes(tour.vehicleId)) {\r\n          this.handleSelectTour(tour)\r\n          // ^^ has side-effect: shipmentsInTour now has the list of shipmentIds\r\n          // We can use this to filter the shipments\r\n          this.shipmentIdsInTour.forEach(id => {\r\n            this.shownShipments.push(this.shipmentLookup[id])\r\n          })\r\n        }\r\n      }\r\n    },\r\n\r\n    clickedLeg(object: any) {\r\n      if (object?.tour) this.handleSelectTour(object?.tour)\r\n    },\r\n\r\n    clickedEmptyMap() {\r\n      this.selectAllTours()\r\n    },\r\n\r\n    updateLegendColors() {},\r\n\r\n    async loadCarriers() {\r\n      // this.myState.statusMessage = '' + this.$i18n.t('message.tours')\r\n\r\n      const carriersXML = await this.loadFileOrGzippedFile(this.vizDetails.carriers)\r\n      if (!carriersXML) return []\r\n\r\n      const root: any = await parseXML(carriersXML, {\r\n        // these elements should always be arrays, even if there's just one element:\r\n        alwaysArray: [\r\n          'carriers.carrier',\r\n          'carriers.carrier.capabilities.vehicles.vehicle',\r\n          'carriers.carrier.plan.tour',\r\n          'carriers.carrier.shipments.shipment',\r\n          'carriers.carrier.services.service',\r\n        ],\r\n      })\r\n\r\n      // sort by '$id' attribute\r\n      const carrierList = root.carriers.carrier.sort((a: any, b: any) => naturalSort(a.$id, b.$id))\r\n      return carrierList\r\n    },\r\n\r\n    async loadNetwork() {\r\n      this.myState.statusMessage = 'Loading network...'\r\n\r\n      if (this.vizDetails.network.indexOf('.xml.') > -1) {\r\n        // load matsim xml file\r\n        const path = `${this.myState.subfolder}/${this.vizDetails.network}`\r\n        const net = await this.fetchNetwork(path, {})\r\n\r\n        // Handle Atlantis: no long/lat coordinates\r\n        if (net.projection == 'Atlantis') {\r\n          this.$store.commit('setMapStyles', MAP_STYLES_OFFLINE)\r\n        }\r\n\r\n        // build direct lookup of x/y from link-id\r\n        this.myState.statusMessage = 'Building network link table'\r\n        const links: { [id: string]: number[] } = {}\r\n\r\n        net.linkIds.forEach((linkId: string, i: number) => {\r\n          links[linkId] = [\r\n            net.source[i * 2],\r\n            net.source[i * 2 + 1],\r\n            net.dest[i * 2],\r\n            net.dest[i * 2 + 1],\r\n          ]\r\n        })\r\n        return links\r\n      } else {\r\n        // pre-converted output from create_network.py\r\n        const blob = await this.fileApi.getFileBlob(\r\n          this.myState.subfolder + '/' + this.vizDetails.network\r\n        )\r\n        const blobString = blob ? await blobToBinaryString(blob) : null\r\n        let text = await coroutines.run(pako.inflateAsync(blobString, { to: 'string' }))\r\n        const convertedNetwork = JSON.parse(text)\r\n\r\n        return convertedNetwork\r\n      }\r\n    },\r\n\r\n    async fetchNetwork(path: string, vizDetails: any) {\r\n      return new Promise<NetworkLinks>((resolve, reject) => {\r\n        const thread = new RoadNetworkLoader()\r\n        try {\r\n          thread.postMessage({\r\n            filePath: path,\r\n            fileSystem: this.fileSystem,\r\n            vizDetails,\r\n          })\r\n\r\n          thread.onmessage = e => {\r\n            // perhaps network has no CRS and we need to ask user\r\n            if (e.data.promptUserForCRS) {\r\n              let crs =\r\n                prompt('Enter the coordinate reference system, e.g. EPSG:25832') || 'EPSG:31468'\r\n              if (!isNaN(parseInt(crs))) crs = `EPSG:${crs}`\r\n\r\n              thread.postMessage({ crs })\r\n              return\r\n            }\r\n\r\n            // normal exit\r\n            thread.terminate()\r\n\r\n            if (e.data.error) {\r\n              console.error(e.data.error)\r\n              globalStore.commit('error', e.data.error)\r\n              reject(e.data.error)\r\n            }\r\n            resolve(e.data.links)\r\n          }\r\n        } catch (err) {\r\n          thread.terminate()\r\n          console.error(err)\r\n          reject(err)\r\n        }\r\n      })\r\n    },\r\n\r\n    toggleLoaded(loaded: boolean) {\r\n      this.isLoaded = loaded\r\n    },\r\n\r\n    rotateColors() {\r\n      localStorage.setItem(\r\n        'plugin/agent-animation/colorscheme',\r\n        this.globalState.isDarkMode ? ColorScheme.DarkMode : ColorScheme.LightMode\r\n      )\r\n    },\r\n\r\n    async loadFileOrGzippedFile(name: string) {\r\n      let filepath = `${this.subfolder}/${name}`\r\n\r\n      try {\r\n        // figure out which file to load with *? wildcards\r\n        if (filepath.indexOf('*') > -1 || filepath.indexOf('?') > -1) {\r\n          const zDataset = filepath.substring(1 + filepath.lastIndexOf('/'))\r\n          const zSubfolder = filepath.substring(0, filepath.lastIndexOf('/'))\r\n\r\n          // fetch list of files in this folder\r\n          const { files } = await this.fileApi.getDirectory(zSubfolder)\r\n          const matchingFiles = findMatchingGlobInFiles(files, zDataset)\r\n          if (matchingFiles.length == 0) throw Error(`No files matched \"${zDataset}\"`)\r\n          if (matchingFiles.length > 1)\r\n            throw Error(`More than one file matched \"${zDataset}\": ${matchingFiles}`)\r\n          filepath = `${zSubfolder}/${matchingFiles[0]}`\r\n        }\r\n\r\n        let content = ''\r\n\r\n        if (filepath.endsWith('xml')) {\r\n          content = await this.fileApi.getFileText(filepath)\r\n        } else if (filepath.endsWith('gz')) {\r\n          const blob = await this.fileApi.getFileBlob(filepath)\r\n          const blobString = blob ? await blobToBinaryString(blob) : null\r\n          content = await coroutines.run(pako.inflateAsync(blobString, { to: 'string' }))\r\n        }\r\n        return content\r\n      } catch (e) {\r\n        globalStore.commit('error', '' + e)\r\n        const error = filepath + ': ' + e\r\n        console.error(e)\r\n        this.myState.statusMessage = error\r\n        return ''\r\n      }\r\n    },\r\n\r\n    selectDropdown() {\r\n      this.dropdownIsActive = !this.dropdownIsActive\r\n    },\r\n\r\n    selectPlan(plan: any) {\r\n      // Set all plans to unselected\r\n      for (let i = 0; i < this.plans.length; i++) {\r\n        this.plans[i].$selected = 'false'\r\n      }\r\n\r\n      // Select new plan\r\n      plan.$selected = 'true'\r\n\r\n      this.selectedPlanIndex = this.plans.indexOf(plan)\r\n\r\n      // Unselect all tours\r\n      this.selectedTours = []\r\n\r\n      this.selectDropdown()\r\n      this.selectedPlan = plan\r\n    },\r\n  },\r\n  async mounted() {\r\n    globalStore.commit('setFullScreen', !this.thumbnail)\r\n\r\n    this.myState.thumbnail = this.thumbnail\r\n    this.myState.subfolder = this.subfolder\r\n\r\n    if (!this.yamlConfig) this.buildRouteFromUrl()\r\n    await this.getVizDetails()\r\n\r\n    if (this.thumbnail) return\r\n\r\n    this.showHelp = false\r\n    this.updateLegendColors()\r\n\r\n    this.myState.statusMessage = 'Loading carriers...'\r\n\r\n    this.carriers = await this.loadCarriers()\r\n\r\n    await this.$nextTick() // update UI update before network load begins\r\n    this.links = await this.loadNetwork()\r\n    this.setMapCenter()\r\n\r\n    this.myState.statusMessage = ''\r\n\r\n    // Select the first carrier if the carriers are loaded\r\n    if (this.carriers.length) this.handleSelectCarrier(this.carriers[0])\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.myState.isRunning = false\r\n\r\n    globalStore.commit('setFullScreen', false)\r\n    this.$store.commit('setFullScreen', false)\r\n  },\r\n})\r\n\r\nexport default CarrierPlugin\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n/* SCROLLBARS\r\n   The emerging W3C standard is currently Firefox-only */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #454 $steelGray;\r\n}\r\n\r\n/* And this works on Chrome/Edge/Safari */\r\n*::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n*::-webkit-scrollbar-track {\r\n  background: var(--bgPanel3);\r\n}\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: var(--textVeryPale);\r\n  border-radius: 6px;\r\n}\r\n\r\n.carrier-viewer {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  pointer-events: none;\r\n  min-height: $thumbnailHeight;\r\n}\r\n\r\n.container-1 {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n\r\n.carrier-viewer.hide-thumbnail {\r\n  background: none;\r\n}\r\n\r\n.main-panel {\r\n  position: relative;\r\n  flex: 1;\r\n}\r\n\r\nh4 {\r\n  border-top: 1px solid #bbb;\r\n  margin: 1rem 0.25rem 0.5rem 0.25rem;\r\n  padding-top: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.right-panel {\r\n  color: var(--text);\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  pointer-events: auto;\r\n  background-color: var(--bgPanel3);\r\n  width: 18rem;\r\n  max-width: 18rem;\r\n  padding: 0 0.25rem;\r\n}\r\n\r\n.nav {\r\n  grid-area: title;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 0;\r\n  padding: 0 0.5rem 0 1rem;\r\n\r\n  a {\r\n    font-weight: bold;\r\n    color: white;\r\n    text-decoration: none;\r\n\r\n    &.router-link-exact-active {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: auto 0.5rem auto 0;\r\n    padding: 0 0;\r\n    color: white;\r\n  }\r\n}\r\n\r\n.speed-block {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.legend-block {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.speed-slider {\r\n  flex: 1;\r\n  width: 100%;\r\n  margin: 0rem 0.25rem 0.25rem 0rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.big {\r\n  padding: 0rem 0;\r\n  // margin-top: 1rem;\r\n  font-size: 2rem;\r\n  line-height: 3.75rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.anim {\r\n  // background-color: #181919;\r\n  pointer-events: auto;\r\n}\r\n\r\n.speed-label {\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.clock {\r\n  grid-area: clock;\r\n  width: 273px;\r\n  background-color: #000000cc;\r\n  border: 3px solid white;\r\n  margin-bottom: 1.2rem;\r\n  color: white;\r\n}\r\n\r\n.clock p {\r\n  text-align: center;\r\n  padding: 1rem 1rem;\r\n}\r\n\r\n.tooltip {\r\n  padding: 5rem 5rem;\r\n  background-color: #ccc;\r\n  z-index: -1;\r\n}\r\n\r\n.panel-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 0;\r\n  max-height: 100%;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\nh3 {\r\n  font-size: 1.2rem;\r\n  padding: 0;\r\n}\r\n\r\ninput {\r\n  border: none;\r\n  background-color: #235;\r\n  color: #ccc;\r\n}\r\n\r\n.carrier {\r\n  padding: 0.25rem 0.5rem;\r\n  margin: 0 0rem;\r\n  color: var(--text);\r\n}\r\n\r\n.carrier:nth-of-type(odd) {\r\n  background: var(--bgPanel2);\r\n}\r\n\r\n.carrier-details {\r\n  font-weight: normal;\r\n  margin-left: 0.5rem;\r\n  animation: slide-up 0.25s ease;\r\n  color: white;\r\n}\r\n\r\n.carrier-details .carrier:hover {\r\n  cursor: pointer;\r\n  background-color: $themeColorPale; // var(--bgBold);\r\n}\r\n\r\n.carrier:hover {\r\n  color: var(--link);\r\n}\r\n\r\n.carrier-title {\r\n  margin-top: 0.1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  i {\r\n    opacity: 0.3;\r\n    margin-top: 0.2rem;\r\n    margin-left: -0.2rem;\r\n    margin-right: 0.4rem;\r\n  }\r\n}\r\n\r\n.carrier-title:hover {\r\n  i {\r\n    opacity: 0.7;\r\n  }\r\n}\r\n\r\n.carrier.selected {\r\n  font-weight: bold;\r\n  background-color: $themeColorPale;\r\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset;\r\n  color: white;\r\n}\r\n\r\n.carrier-list {\r\n  user-select: none;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  cursor: pointer;\r\n}\r\n\r\n.detail-area {\r\n  user-select: none;\r\n  flex: 1;\r\n  overflow-x: hidden;\r\n  cursor: pointer;\r\n  margin: 0 0.25rem 0.25rem 0.25rem;\r\n  // border-bottom: 1px solid #555;\r\n}\r\n\r\n.carrier-section {\r\n  margin-top: 0.25rem;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n@keyframes slide-up {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.playback-stuff {\r\n  grid-area: playback;\r\n  padding: 0rem 2rem 2rem 2rem;\r\n  pointer-events: auto;\r\n}\r\n\r\n.leaf {\r\n  padding-left: 1rem;\r\n}\r\n\r\n.leaf:hover {\r\n  color: yellowgreen;\r\n}\r\n\r\n.tour.selected {\r\n  background-color: var(--textFancy);\r\n  font-weight: bold;\r\n  color: var(--bgPanel3);\r\n}\r\n\r\n.shipment-in-tour {\r\n  background-color: #497c7e;\r\n}\r\n\r\n.detail-list {\r\n  width: 250px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n\r\n.detail-list pre {\r\n  font-family: 'Arial';\r\n  padding: 0 0;\r\n  line-height: 0.8rem;\r\n  background-color: var(--bgPanel);\r\n  color: var(--text);\r\n}\r\n\r\n.switches {\r\n  display: flex;\r\n  // margin: 0.25rem 0.25rem;\r\n\r\n  p {\r\n    flex: 1;\r\n    margin: auto 0;\r\n  }\r\n}\r\n\r\n.slider {\r\n  flex: 4;\r\n  margin-right: 0 1rem;\r\n}\r\n\r\n.detail-buttons {\r\n  margin: 0 0.25rem 0.5rem 0.25rem;\r\n}\r\n\r\n.switchbox {\r\n  margin: 0 0.25rem 0.5rem 0.25rem;\r\n}\r\n\r\n.xmessage {\r\n  position: absolute;\r\n  bottom: 0;\r\n  z-index: 10;\r\n  background-color: var(--bgPanel2);\r\n  padding: 0.5rem 1rem;\r\n}\r\n\r\n.dropdown {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n  .nav {\r\n    padding: 0.5rem 0.5rem;\r\n  }\r\n\r\n  .clock {\r\n    text-align: center;\r\n  }\r\n\r\n  .right-side {\r\n    font-size: 0.7rem;\r\n    margin-right: 0.25rem;\r\n  }\r\n\r\n  .big {\r\n    padding: 0 0rem;\r\n    margin-top: 0.5rem;\r\n    font-size: 1.3rem;\r\n    line-height: 2rem;\r\n  }\r\n\r\n  .side-section {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .extra-buttons {\r\n    margin-right: 1rem;\r\n  }\r\n}\r\n</style>\r\n","\r\n.carrier-viewer(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n                :style='{\"background\": urlThumbnail}'\r\n                oncontextmenu=\"return false\")\r\n\r\n  .container-1\r\n    .main-panel\r\n      tour-viz.anim(v-if=\"!thumbnail\"\r\n                  :activeTab=\"activeTab\"\r\n                  :shipments=\"shownShipments\"\r\n                  :depots=\"shownDepots\"\r\n                  :legs=\"shownLegs\"\r\n                  :stopActivities=\"stopActivities\"\r\n                  :dark=\"globalState.isDarkMode\"\r\n                  :center=\"vizDetails.center\"\r\n                  :viewId=\"linkLayerId\"\r\n                  :settings=\"vizSettings\"\r\n                  :numSelectedTours=\"selectedTours.length\"\r\n                  :onClick=\"handleClick\")\r\n      ZoomButtons(v-if=\"!thumbnail\")\r\n      .xmessage(v-if=\"myState.statusMessage\") {{ myState.statusMessage }}\r\n\r\n    .right-panel(v-if=\"!thumbnail\" :darkMode=\"true\")\r\n      h3(style=\"margin-left: 0.25rem\" v-if=\"carriers.length\") {{ $t('carriers') }}\r\n\r\n      .carrier-list\r\n        .carrier(v-for=\"carrier in carriers\" :key=\"carrier.$id\"\r\n                 :class=\"{selected: carrier.$id===selectedCarrier}\"\r\n                 @click=\"handleSelectCarrier(carrier)\")\r\n          .carrier-title {{ carrier.$id }}\r\n\r\n      h4 {{ selectedCarrier || 'Details' }}\r\n\r\n\r\n      b-field.detail-buttons(v-if=\"selectedCarrier\" size=\"is-small\")\r\n\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"shipments\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('shipments') }}\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"tours\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('tours') }}\r\n        b-radio-button(v-model=\"activeTab\" native-value=\"vehicles\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('vehicles') }}\r\n        b-radio-button(v-if=\"services.length\" v-model=\"activeTab\" native-value=\"services\" size=\"is-small\" type=\"is-warning\")\r\n          span {{ $t('services') }}\r\n\r\n      .detail-area\r\n        .shipments(v-if=\"activeTab=='shipments'\")\r\n            span {{ $t('shipments')}}: {{ shipments.length}}\r\n            .leaf.tour(v-for=\"shipment,i in shipments\" :key=\"`${i}-${shipment.$id}`\"\r\n                @click=\"handleSelectShipment(shipment)\"\r\n                :class=\"{selected: shipment==selectedShipment, 'shipment-in-tour': shipmentIdsInTour.includes(shipment.$id)}\"\r\n            ) {{ `${shipment.$id}: ${shipment.$from}-${shipment.$to}` }}\r\n\r\n        .tours(v-if=\"activeTab=='tours'\")\r\n            .dropdown(v-if=\"this.plans.length > 1\" :class=\"{'is-active': dropdownIsActive}\" style=\"width: 100%\")\r\n              .dropdown-trigger(@click=\"selectDropdown()\")\r\n                button\r\n                  span Plan {{ selectedPlanIndex + 1 }}\r\n                  span.icon.is-small\r\n                    i.fas.fa-angle-down\r\n              .dropdown-menu\r\n                .dropdown-content\r\n                  a.dropdown-item(v-for=\"(plan, index) in this.plans\" @click=\"selectPlan(plan)\" :class=\"{'is-active': plan.$selected == 'true'}\") Plan {{ index + 1 }}\r\n\r\n            span {{ $t('tours')}}: {{ tours.length}}\r\n            .leaf.tour(v-for=\"tour,i in tours\" :key=\"`${i}-${tour.$id}`\"\r\n                @click=\"handleSelectTour(tour)\"\r\n                :class=\"{selected: selectedTours.includes(tour)}\") {{ `${tour.vehicleId}` }}\r\n\r\n        .vehicles(v-if=\"activeTab=='vehicles'\")\r\n            span {{ $t('vehicles')}}: {{ vehicles.length}}\r\n            .leaf.tour(v-for=\"veh,i in vehicles\" :key=\"`${i}-${veh.$id}`\") {{ veh.$id }}\r\n\r\n        .services(v-if=\"activeTab=='services'\")\r\n            span {{ $t('services')}}: {{ services.length}}\r\n            .leaf.tour(v-for=\"service,i in services\" :key=\"`${i}-${service.$id}`\") {{ `${service.$id}` }}\r\n\r\n      .switchbox\r\n        .switches\r\n          p {{$t('scaleSize')}}\r\n          b-slider.slider(:tooltip=\"false\" type=\"is-link\" size=\"is-small\" v-model=\"vizSettings.scaleFactor\")\r\n        .switches\r\n          b-switch(v-model=\"vizSettings.shipmentDotsOnTourMap\")\r\n            span(v-html=\"$t('shipmentDots')\")\r\n          b-switch(v-model=\"vizSettings.simplifyTours\")\r\n            span(v-html=\"$t('flatten')\")\r\n\r\n"],"names":["dashShaders","offsetShaders","defaultProps","PathStyleExtension","LayerExtension","dash","offset","highPrecisionDash","layer","extension","result","mergeShaders","context","attributeManager","params","uniforms","path","positionSize","isNested","geometrySize","p","prevP","i","dist","_defineProperty","naturalSort","a","b","re","sre","dre","hre","ore","s","x","y","xN","yN","xD","yD","oFxNcL","oFyNcL","cLoc","numS","Component","props","listItems","items","map","React","createElement","key","item","value","style","width","height","Math","max","backgroundColor","color","label","marginBottom","textAlign","fontWeight","fontSize","title","description","listStyle","padding","margin","ActivityColor","pickup","delivery","service","viewState","setViewState","useState","globalStore","state","hoverInfo","setHoverInfo","pickupsAndDeliveries","setPickupsAndDeliveries","type","pickups","deliveries","dark","activeTab","numSelectedTours","shipments","depots","legs","settings","stopActivities","center","onClick","simplifyTours","scaleFactor","shipmentDotsOnTourMap","widthScale","pow","layers","REACT_VIEW_HANDLES","viewId","useEffect","forEach","shipment","xy","fromX","fromY","shipmentIds","coord","push","$id","toX","toY","Object","values","handleClick","event","object","handleViewState","view","longitude","latitude","commit","renderTooltip","renderActivityTooltip","renderLegTooltip","renderStopTooltip","activity","className","boxShadow","position","opacity","left","top","maxWidth","paddingRight","paddingTop","join","tour","vehicleId","count","shipmentsOnBoard","length","totalSize","visits","reduce","prev","visit","numPickupsAndDeliveries","overview","tipHeight","keys","yPosition","window","innerHeight","details","slice","PathLayer","id","data","getPath","d","ptFrom","ptTo","getColor","getOffset","widthMinPixels","rounded","shadowEnabled","pickable","autoHighlight","highlightColor","parameters","depthTest","getDashArray","dashJustified","extensions","ArcLayer","getSourcePosition","points","getTargetPosition","getSourceColor","getTargetColor","getWidth","getHeight","widthMaxPixels","widthUnits","updateTriggers","transitions","onHover","PathOffsetLayer","TextLayer","background","backgroundPadding","getBackgroundColor","getPosition","midpoint","getText","getSize","getTextAnchor","getAlignmentBaseline","noAlloc","billboard","sizeScale","visible","ScatterplotLayer","getRadius","radiusUnits","parseInt","$size","DeckGL","pickingRadius","controller","getCursor","onViewStateChange","e","StaticMap","mapboxApiAccessToken","MAPBOX_TOKEN","mapStyle","getters","i18n","CarrierPlugin","defineComponent","LegendColors","ToggleButton","TourViz","ZoomButtons","colorMap","HTTPFileSystem","svnProject","lightmode","darkmode","carrier","c","shipmentIdsInTour","stopCount","locations","vehicle","v","depotLink","linkMidpoint","prevLocation","link","actType","from","to","act","sCount","linkId","leg","count_route","z","element","stop","lastPoint","fromXY","vehicles","_b","_a","tours","plan","curr","sep","subfolder","config","filename","text","YAML","err","files","network","allNetworks","f","t","samples","numLinks","gap","blob","buffer","readBlob","base64","arrayBufferToBase64","vehiclesAtThisDepot","carriersXML","parseXML","net","MAP_STYLES_OFFLINE","links","blobString","blobToBinaryString","coroutines.run","pako","vizDetails","resolve","reject","thread","RoadNetworkLoader","crs","loaded","ColorScheme","name","filepath","zDataset","zSubfolder","matchingFiles","findMatchingGlobInFiles","content","error","render","_vm","_h","_c","$event","$$v","index","veh","staticRenderFns"],"mappings":"i5BAAO,MAAMA,GAAc,CACzB,OAAQ,CACN,WAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EACZ,eAAgB;AAAA;AAAA;AAAA,EAChB,WAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACZ,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CACnB,CACH,EACaC,GAAgB,CAC3B,OAAQ,CACN,WAAY;AAAA;AAAA,EACZ,wBAAyB;AAAA;AAAA;AAAA,EACzB,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAChB,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CACnB,CACH,ECXMC,GAAe,CACnB,aAAc,CACZ,KAAM,WACN,MAAO,CAAC,EAAG,CAAC,CACb,EACD,UAAW,CACT,KAAM,WACN,MAAO,CACR,EACD,cAAe,GACf,gBAAiB,EACnB,EACe,MAAMC,UAA2BC,EAAe,CAC7D,YAAY,CACV,KAAAC,EAAO,GACP,OAAAC,EAAS,GACT,kBAAAC,EAAoB,EACrB,EAAG,GAAI,CACN,MAAM,CACJ,KAAMF,GAAQE,EACd,OAAAD,EACA,kBAAAC,CACN,CAAK,CACF,CAED,UAAUC,EAAO,CACf,MAAO,mBAAoBA,EAAM,KAClC,CAED,WAAWC,EAAW,CACpB,GAAI,CAACA,EAAU,UAAU,IAAI,EAC3B,OAAO,KAGT,IAAIC,EAAS,CAAA,EAEb,OAAID,EAAU,KAAK,OACjBC,EAASC,EAAaD,EAAQV,EAAW,GAGvCS,EAAU,KAAK,SACjBC,EAASC,EAAaD,EAAQT,EAAa,GAGtCS,CACR,CAED,gBAAgBE,EAASH,EAAW,CAClC,MAAMI,EAAmB,KAAK,sBAE1B,CAACA,GAAoB,CAACJ,EAAU,UAAU,IAAI,IAI9CA,EAAU,KAAK,MACjBI,EAAiB,aAAa,CAC5B,mBAAoB,CAClB,KAAM,EACN,SAAU,cACX,CACT,CAAO,EAGCJ,EAAU,KAAK,mBACjBI,EAAiB,aAAa,CAC5B,oBAAqB,CACnB,KAAM,EACN,SAAU,UACV,UAAWJ,EAAU,eAAe,KAAK,IAAI,CAC9C,CACT,CAAO,EAGCA,EAAU,KAAK,QACjBI,EAAiB,aAAa,CAC5B,gBAAiB,CACf,KAAM,EACN,SAAU,WACX,CACT,CAAO,EAEJ,CAED,YAAYC,EAAQL,EAAW,CAC7B,GAAI,CAACA,EAAU,UAAU,IAAI,EAC3B,OAGF,MAAMM,EAAW,CAAA,EAEbN,EAAU,KAAK,OACjBM,EAAS,cAAgB,KAAK,MAAM,cAAgB,EAAI,EACxDA,EAAS,gBAAkB,QAAQ,KAAK,MAAM,eAAe,GAG/D,KAAK,MAAM,MAAM,YAAYA,CAAQ,CACtC,CAED,eAAeC,EAAM,CACnB,MAAMN,EAAS,CAAC,CAAC,EACXO,EAAe,KAAK,MAAM,iBAAmB,KAAO,EAAI,EACxDC,EAAW,MAAM,QAAQF,EAAK,EAAE,EAChCG,EAAeD,EAAWF,EAAK,OAASA,EAAK,OAASC,EAC5D,IAAIG,EACAC,EAEJ,QAASC,EAAI,EAAGA,EAAIH,EAAe,EAAGG,IACpCF,EAAIF,EAAWF,EAAKM,GAAKN,EAAK,MAAMM,EAAIL,EAAcK,EAAIL,EAAeA,CAAY,EACrFG,EAAI,KAAK,gBAAgBA,CAAC,EAEtBE,EAAI,IACNZ,EAAOY,GAAKZ,EAAOY,EAAI,GAAKC,GAAKF,EAAOD,CAAC,GAG3CC,EAAQD,EAGV,OAAOV,CACR,CAEH,CAEAc,GAAgBrB,EAAoB,eAAgBD,EAAY,EAEhEsB,GAAgBrB,EAAoB,gBAAiB,oBAAoB,EC3HzE,IAAAsB,EAAiB,SAASA,EAAaC,EAAGC,EAAG,CAE5C,IAAIC,EAAK,8EACRC,EAAM,iBACNC,EAAM,iHACNC,EAAM,iBACNC,EAAM,KACNV,EAAI,SAASW,EAAG,CAAE,OAAOR,EAAY,cAAgB,GAAKQ,GAAG,YAAW,GAAM,GAAKA,CAAI,EAEvFC,EAAIZ,EAAEI,CAAC,EAAE,QAAQG,EAAK,EAAE,GAAK,GAC7BM,EAAIb,EAAEK,CAAC,EAAE,QAAQE,EAAK,EAAE,GAAK,GAE7BO,EAAKF,EAAE,QAAQN,EAAI,QAAQ,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,MAAM,EAAE,EAAE,MAAM,IAAI,EAC3ES,EAAKF,EAAE,QAAQP,EAAI,QAAQ,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,MAAM,EAAE,EAAE,MAAM,IAAI,EAE3EU,EAAK,SAASJ,EAAE,MAAMH,CAAG,EAAG,EAAE,GAAMK,EAAG,SAAW,GAAKF,EAAE,MAAMJ,CAAG,GAAK,KAAK,MAAMI,CAAC,EACnFK,EAAK,SAASJ,EAAE,MAAMJ,CAAG,EAAG,EAAE,GAAKO,GAAMH,EAAE,MAAML,CAAG,GAAK,KAAK,MAAMK,CAAC,GAAK,KAC1EK,EAAQC,EAET,GAAIF,EAAI,CACP,GAAKD,EAAKC,EAAO,MAAO,GACnB,GAAKD,EAAKC,EAAO,MAAO,EAC7B,CAED,QAAQG,EAAK,EAAGC,EAAK,KAAK,IAAIP,EAAG,OAAQC,EAAG,MAAM,EAAGK,EAAOC,EAAMD,IAAQ,CAKzE,GAHAF,EAAS,EAAEJ,EAAGM,IAAS,IAAI,MAAMV,CAAG,GAAK,WAAWI,EAAGM,EAAK,GAAKN,EAAGM,IAAS,EAC7ED,EAAS,EAAEJ,EAAGK,IAAS,IAAI,MAAMV,CAAG,GAAK,WAAWK,EAAGK,EAAK,GAAKL,EAAGK,IAAS,EAEzE,MAAMF,CAAM,IAAM,MAAMC,CAAM,EAAK,OAAQ,MAAMD,CAAM,EAAK,EAAI,GAMpE,GAJS,OAAOA,GAAW,OAAOC,IACjCD,GAAU,GACVC,GAAU,IAEPD,EAASC,EAAU,MAAO,GAC9B,GAAID,EAASC,EAAU,MAAO,EAC9B,CACD,MAAO,EACR,ECzCA,SAAwBG,GAAUC,EAK/B,CACD,MAAMC,EAAYD,EAAME,MAAMC,OAC3BC,EAAAC,cAAA,KAAA,CAAGC,IAAKC,EAAKC,MAAQD,EAAKC,MAAM,EAAA,EAC9BJ,EAAAC,cAAA,MAAA,CACCI,MAAO,CACLC,MAAO,OACPC,OAAW,GAAAC,KAAKC,IAAI,EAAG,GAAO,EAAIN,EAAKC,MAAQ,GAAK,CAAC,MACrDM,uBAAwBP,EAAKQ,QAC/B,CACD,CAAA,EACAR,EAAKS,OAAUZ,EAAAC,cAAA,MAAA,CAAII,MAAO,CAAEQ,aAAc,QAAS,CAAI,EAAAV,EAAKS,KAAM,CACrE,CACD,EAGC,OAAAZ,EAAAC,cAAC,WACED,EAAAC,cAAA,KAAA,CACCI,MAAO,CACLS,UAAW,OACXC,WAAY,OACZF,aAAc,SACdG,SAAU,QACZ,CAEC,EAAApB,EAAMqB,KACT,EACAjB,EAAAC,cAAC,SAAGL,EAAMsB,WAAY,EACrBlB,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAEc,UAAW,OAAQC,QAAS,EAAGC,OAAQ,CAAE,GAAIxB,CAAU,CACtE,CAEJ,CCNA,MAAMyB,EAAgB,CACpBC,OAAQ,CAAC,EAAG,IAAK,GAAG,EACpBC,SAAU,CAAC,IAAK,EAAG,EAAE,EACrBC,QAAS,CAAC,IAAK,GAAI,GAAG,CACxB,EAEA,SAAwB9B,GAAUC,EAa/B,CACD,KAAM,CAAC8B,EAAWC,CAAY,EAAIC,EAAS,QAAA,SAAAC,EAAYC,MAAMJ,SAAS,EAChE,CAACK,EAAWC,CAAY,EAAIJ,EAAA,QAAA,SAAS,CAAS,CAAA,EAC9C,CAACK,EAAsBC,CAAuB,EAAIN,mBAAS,CAC/DO,KAAM,WACNC,QAAS,CAAC,EACVC,WAAY,CAAA,CACd,CAAC,EAEK,CACJC,KAAAA,EACAC,UAAAA,EACAC,iBAAAA,EACAC,UAAAA,EACAC,OAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAC,OAAAA,EACAC,QAAAA,CACE,EAAAnD,EAEE,CAAEoD,cAAAA,EAAeC,YAAAA,EAAaC,sBAAAA,CAA0B,EAAAN,EAI1D,IAAAO,EAAaF,GAAe,EAAI,KAAO,EAAIzC,KAAK4C,IAAI,GAAI,IAAMH,GAAe,EAAI,CAAG,EAExF,MAAMI,EAAc,CAAA,EAIDC,EAAA1D,EAAM2D,QAAU,IAAM,CAC1B5B,EAAAE,EAAYC,MAAMJ,SAAS,GAI1C8B,EAAAA,QAAAA,UAAU,IAAM,CACd,MAAMpB,EAAsF,CAAA,EACtFC,EACJ,CAAA,EAEFI,EAAUgB,QAAoBC,GAAA,CAC5B,IAAIC,EAAK,GAAGD,EAASE,SAASF,EAASG,QAClCzB,EAAQuB,KACXvB,EAAQuB,GAAM,CAAExB,KAAM,SAAU2B,YAAa,CAAI,EAAAC,MAAO,CAACL,EAASE,MAAOF,EAASG,KAAK,IACzFzB,EAAQuB,GAAIG,YAAYE,KAAKN,EAASO,GAAG,EAEpCN,EAAA,GAAGD,EAASQ,OAAOR,EAASS,MAC5B9B,EAAWsB,KACdtB,EAAWsB,GAAM,CAAExB,KAAM,WAAY2B,YAAa,CAAI,EAAAC,MAAO,CAACL,EAASQ,IAAKR,EAASS,GAAG,IAC1F9B,EAAWsB,GAAIG,YAAYE,KAAKN,EAASO,GAAG,CAC9C,CAAC,EAEuB/B,EAAA,CACtBC,KAAM,WACNC,QAASgC,OAAOC,OAAOjC,CAAO,EAC9BC,WAAY+B,OAAOC,OAAOhC,CAAU,CACtC,CAAC,CACH,EAAG,CAACI,CAAS,CAAC,EAEd,SAAS6B,EAAYC,EAAY,CAC1BA,EAAMC,OAITzB,EAAQwB,EAAMC,MAAM,EAFpBzB,EAAQ,IAAI,CAIhB,CAEA,SAAS0B,EAAgBC,EAAW,CAClC/C,EAAa+C,CAAI,EACjBA,EAAK5B,OAAS,CAAC4B,EAAKC,UAAWD,EAAKE,QAAQ,EAChC/C,EAAAgD,OAAO,eAAgBH,CAAI,CACzC,CAEA,SAASI,EAAc/C,EAAgB,CAC/B,KAAA,CAAEyC,OAAAA,CAAWzC,EAAAA,EACnB,OAAKyC,GAIDA,GAAAA,YAAAA,EAAQrC,OAAQ,SAAiB4C,EAAsBhD,EAAW,QAAQ,GAC1EyC,GAAAA,YAAAA,EAAQrC,OAAQ,WAAmB4C,EAAsBhD,EAAW,UAAU,EAC9EyC,GAAAA,MAAAA,EAAQ7D,MAAcqE,GAAiBjD,CAAS,GAChDyC,GAAAA,YAAAA,EAAQrC,OAAQ,QAAgB,KAC7B8C,GAAkBlD,CAAS,EARd,IAStB,CAES,SAAAgD,EAAsBhD,EAAgBmD,EAAkB,CAC/D,KAAM,CAAEV,OAAAA,EAAQvF,EAAAA,EAAGC,EAAAA,CAAM6C,EAAAA,EAEzB,OACG/B,EAAAC,cAAA,MAAA,CACCkF,UAAU,UACV9E,MAAO,CACLK,gBAAiB,YACjB0E,UAAW,iCACXzE,MAAO,OACPS,QAAS,gBACTiE,SAAU,WACVC,QAAS,GACTC,KAAMtG,EAAI,GACVuG,IAAKtG,EAAI,EACX,CAAA,EAECc,EAAAC,cAAA,QAAA,CAAMI,MAAO,CAAEoF,SAAU,QAASzE,SAAU,QAAS,CAAA,EACnDhB,EAAAC,cAAA,QAAA,KACED,EAAAC,cAAA,KAAA,KACED,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAES,UAAW,QAAS4E,aAAc,SAAUC,WAAY,QAAS,CAC3E,EAAAT,EAAS,GACZ,EACClF,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAEsF,WAAY,QAAS,CAAI,EAAAnB,EAAOV,YAAY8B,KAAK,IAAI,CAAE,CACtE,CACF,CACF,CACF,CAEJ,CAEA,SAASZ,GAAiBjD,EAAgB,SACxC,KAAM,CAAEyC,OAAAA,EAAQvF,EAAAA,EAAGC,EAAAA,CAAM6C,EAAAA,EAEzB,OACG/B,EAAAC,cAAA,MAAA,CACCkF,UAAU,UACV9E,MAAO,CACLW,SAAU,SACVN,gBAAiB,YACjB0E,UAAW,iCACXzE,MAAO,OACPS,QAAS,gBACTiE,SAAU,WACVE,KAAMtG,EAAI,GACVuG,IAAKtG,EAAI,EACX,CAEA,EAAAc,EAAAC,cAAC,IAAG,MAAAuE,EAAAA,GAAAA,YAAAA,EAAQqB,OAARrB,YAAAA,EAAcsB,SAAU,EAC5B9F,EAAAC,cAAC,KAAG,IAAA,EAAE,SACC,GAAIuE,GAAAA,YAAAA,EAAQuB,OAAM,IAAC/F,EAAAC,cAAC,KAAG,IAAA,EAAE,wBACXuE,EAAAA,GAAAA,YAAAA,EAAQwB,mBAARxB,YAAAA,EAA0ByB,OAAO,IAACjG,EAAAC,cAAC,KAAG,IAAA,EAAE,eAChDuE,GAAAA,YAAAA,EAAQ0B,SACvB,CAEJ,CAEA,SAASjB,GAAkBlD,EAAgB,CACzC,KAAM,CAAEyC,OAAAA,EAAQvF,EAAAA,EAAGC,EAAAA,CAAM6C,EAAAA,EAGnBoE,EAAS3B,EAAO2B,OAAOF,OACvB7D,EAAUoC,EAAO2B,OAAOC,OAC5B,CAACC,EAAcC,IAAeD,EAAOC,EAAM/E,OAAO0E,OAClD,CACF,EACM5D,EAAamC,EAAO2B,OAAOC,OAC/B,CAACC,EAAcC,IAAeD,EAAOC,EAAM9E,SAASyE,OACpD,CACF,EAEMM,GAA0BnE,EAAUC,EACpCmE,EAAW,CAAEL,OAAAA,EAAQ/D,QAAAA,EAASC,WAAAA,GAG9BoE,EAAYrC,OAAOsC,KAAKlC,CAAM,EAAEyB,OAAS,GAAK,GACpD,IAAIU,EAAYzH,EAAI,GAChB,OAAAyH,EAAYF,EAAYG,OAAOC,cACjCF,EAAYzH,EAAIuH,GAIfzG,EAAAC,cAAA,MAAA,CACCkF,UAAU,UACV9E,MAAO,CACLW,SAAU,SACVN,gBAAiB,YACjB0E,UAAW,iCACXzE,MAAO,OACPS,QAAS,gBACTiE,SAAU,WACVE,KAAMtG,EAAI,GACVuG,IAAKmB,CACP,CAAA,EAEC3G,EAAAC,cAAA,QAAA,CACCI,MAAO,CACLW,SAAU,QACZ,GAEAhB,EAAAC,cAAC,aACEmE,OAAOsC,KAAKF,CAAQ,EAAEzG,IAAKtB,GAEvBuB,EAAAC,cAAA,KAAA,CAAGC,IAAKzB,CAAA,EACNuB,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAES,UAAW,QAAS4E,aAAc,QAAS,CAAI,EAAAjH,EAAE,GAAC,EAC9DuB,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAEU,WAAY,MAAO,CAAG,EAAA,IAAEyF,EAAS/H,EAAG,CACnD,CAEH,EAgBA8H,IAA2B,GAC1BnC,OAAOsC,KAAKlC,EAAOsC,OAAO,EAAE/G,IAAKtB,GAE5BuB,EAAAC,cAAA,KAAA,CAAGC,IAAKzB,CAAA,EACNuB,EAAAC,cAAA,KAAA,CACCI,MAAO,CAAES,UAAW,QAAS4E,aAAc,SAAUC,WAAY,QAAS,CAAA,EAEzElH,EAAEsI,MAAM,CAAC,EAAE,GACd,EACC/G,EAAAC,cAAA,KAAA,CAAGI,MAAO,CAAEsF,WAAY,QAAS,CAAI,EAAAnB,EAAOsC,QAAQrI,EAAG,CAC1D,CAEH,CACL,CACF,CACF,CAEJ,CA4HA,GAxHI8D,GAAa,UACRc,EAAAW,KAEL,IAAIgD,GAAU,CACZC,GAAI,6BACJC,KAAMrE,EACNsE,QAAUC,GAAW,CAACA,EAAEC,OAAQD,EAAEE,IAAI,EACtCC,SAAU,CAAC,IAAK,IAAK,GAAG,EACxBC,UAAW,EACXlC,QAAS,EACTmC,eAAgB,EAChBC,QAAS,GACTC,cAAe,GACfC,SAAU,GACVC,cAAe,GACfC,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9BC,WAAY,CAAEC,UAAW,EAAM,EAC/BC,aAAc,CAAC,EAAG,CAAC,EACnBC,cAAe,GACfC,WAAY,CAAC,IAAIjL,EAAmB,CAAEE,KAAM,EAAK,CAAC,CAAC,CACpD,CAAA,CACH,EAEI4F,EACKK,EAAAW,KAEL,IAAIoE,EAAS,CACXnB,GAAI,WACJC,KAAMvE,EACN0F,kBAAoBjB,GAAWA,EAAEkB,OAAO,GACxCC,kBAAoBnB,GAAWA,EAAEkB,OAAOlB,EAAEkB,OAAOrC,OAAS,GAC1DuC,eAAiBpB,GAAWA,EAAEzG,MAC9B8H,eAAiBrB,GAAWA,EAAEzG,MAC9B+H,SAAUzF,EAAemE,GAAWA,EAAElB,UAAY,EAAI,EACtDyC,UAAW,GACXlB,eAAgB,EAChBmB,eAAgB,IAChBC,WAAY,SACZ1F,WAAAA,EACAmC,QAAS,GACTyC,WAAY,CAAEC,UAAW,EAAM,EAC/Bc,eAAgB,CAAEJ,SAAU,CAACzF,CAAW,CAAE,EAC1C8F,YAAa,CAAEL,SAAU,GAAI,EAC7Bd,SAAU,GACVC,cAAe,GACfC,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9BkB,QAAShH,CACV,CAAA,CACH,EAEOqB,EAAAW,KAEL,IAAIiF,GAAgB,CAClBhC,GAAI,iBACJC,KAAMvE,EACNwE,QAAUC,GAAWA,EAAEkB,OACvBf,SAAWH,GAAWA,EAAEzG,MACxB+H,SAAUzF,EAAemE,GAAWA,EAAElB,UAAY,EAClDsB,UAAW,EACXlC,QAAS,EACTmC,eAAgB,EAChBmB,eAAgB,IAChBC,WAAY,SACZ1F,WAAAA,EACAuE,QAAS,GACTC,cAAe,GACfC,SAAU,GACVC,cAAe,GACfC,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9BkB,QAAShH,EACT+F,WAAY,CAAEC,UAAW,EAAM,EAC/Bc,eAAgB,CAAEJ,SAAU,CAACzF,CAAW,CAAE,EAC1C8F,YAAa,CAAEL,SAAU,GAAI,CAC9B,CAAA,CACH,EAIKrF,EAAAW,KAEL,IAAIkF,EAAU,CACZjC,GAAI,cACJC,KAAMrE,EACNsG,WAAY,GACZC,kBAAmB5G,IAAqB,EAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EACtE+E,SAAU,CAAC,IAAK,IAAK,GAAG,EACxB8B,mBAAqBjC,GAAW,CACxB,MAAAhF,EAAUgF,EAAEjB,OAAOC,OACvB,CAACC,EAAcC,IAAeD,EAAOC,EAAM/E,OAAO0E,OAClD,CACF,EACM5D,EAAa+E,EAAEjB,OAAOC,OAC1B,CAACC,EAAcC,IAAeD,EAAOC,EAAM9E,SAASyE,OACpD,CACF,EACA,OAAI7D,GAAWC,EAAmB,CAAC,EAAG,EAAG,GAAG,EACxCD,EAAgBd,EAAcC,OAC9Bc,EAAmBf,EAAcE,SAC9B,CAAC,IAAK,IAAK,CAAC,CACrB,EACA8H,YAAclC,GAAWA,EAAEmC,SAC3BC,QAAUpC,GACRA,EAAExG,OAAS,QAAUwG,EAAExG,MAAQ4B,IAAqB,EAAI,IAAM,GAAG4E,EAAExG,QACrE6I,QAAUrC,GAAYA,EAAExG,OAAS,QAAU,GAAK4B,IAAqB,EAAI,EAAI,GAC7EkH,cAAe,SACfC,qBAAsB,SACtBrE,QAAS,EACTsE,QAAS,GACTC,UAAW,GACXC,UAAW,EACXlC,SAAU,GACVC,cAAe,GACfC,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9BkB,QAAShH,EACT+H,QAAS7G,CACV,CAAA,CACH,GAIEX,GAAa,YAAa,CACrBc,EAAAW,KAEL,IAAIgG,EAAiB,CACnB/C,GAAI,aACJC,KAAMjF,EAAqBI,WAC3BiH,YAAclC,GAAWA,EAAErD,MAC3BwD,SAAUjG,EAAcE,SACxByI,UAAW,EACX3E,QAAS,GACTyC,WAAY,CAAEC,UAAW,EAAM,EAC/BJ,SAAU,GACVsC,YAAa,SACblB,QAAShH,CACV,CAAA,CACH,EACOqB,EAAAW,KAEL,IAAIgG,EAAiB,CACnB/C,GAAI,UACJC,KAAMjF,EAAqBG,QAC3BkH,YAAclC,GAAWA,EAAErD,MAC3BwD,SAAUjG,EAAcC,OACxB0I,UAAW,EACX3E,QAAS,GACTyC,WAAY,CAAEC,UAAW,EAAM,EAC/BJ,SAAU,GACVsC,YAAa,SACblB,QAAShH,CACV,CAAA,CACH,EAEA,MAAMsD,EAAU7C,EAAUwD,OAAS,EAAI,GAAK,IAErC5C,EAAAW,KAEL,IAAIoE,EAAS,CACXnB,GAAI,YACJC,KAAMzE,EACN4F,kBAAoBjB,GAAW,CAACA,EAAExD,MAAOwD,EAAEvD,KAAK,EAChD0E,kBAAoBnB,GAAW,CAACA,EAAElD,IAAKkD,EAAEjD,GAAG,EAC5CqE,eAAgB,CAAC,EAAG,IAAK,IAAKlD,CAAO,EACrCmD,eAAgB,CAAC,IAAK,EAAG,GAAI,GAAG,EAChCC,SAAUzF,EAAemE,GAAW+C,SAAS/C,EAAEgD,KAAK,GAAK,EAAM,EAC/DvB,WAAY,SACZF,UAAW,GACXrD,QAAS,GACTyC,WAAY,CAAEC,UAAW,EAAM,EAC/B7E,WAAAA,EACAsE,eAAgB,EAChBmB,eAAgB,IAChBE,eAAgB,CAAEJ,SAAU,CAACzF,CAAW,CAAE,EAC1C8F,YAAa,CAAEL,SAAU,GAAI,CAC9B,CAAA,CACH,CACF,CAGOrF,OAAAA,EAAAW,KAEL,IAAIkF,EAAU,CACZjC,GAAI,SACJC,KAAMxE,EACNyG,WAAY,GACZC,kBAAmB,CAAC,EAAG,EAAG,EAAG,CAAC,EAC9B7B,SAAU,CAAC,IAAK,IAAK,GAAG,EACxB8B,mBAAoB,CAAC,EAAG,IAAK,GAAG,EAChCC,YAAclC,GAAWA,EAAEmC,SAC3BC,QAAUpC,GAAW,QACrBsC,cAAe,SACfC,qBAAsB,SACtBF,QAAS,GACTnE,QAAS,EACTsE,QAAS,GACTC,UAAW,GACXC,UAAW,EACXlC,SAAU,GACVC,cAAe,GACfC,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9BkB,QAAShH,CACV,CAAA,CACH,EAGGhC,EAAAC,cAAAoK,GAAA,CACChH,OAAAA,EACAiH,cAAe,EACfC,WAAY,GACZC,UAAWA,IAAM,UACjBzH,QAASuB,EACT5C,UAAAA,EACA+I,kBAAoBC,GAAWjG,EAAgBiG,EAAEhJ,SAAS,CAAA,EAKvD1B,EAAAC,cAAA0K,GAAA,CAAUC,qBAAsBC,GAAcC,SAAUjJ,EAAYkJ,QAAQD,QAAU,CAAA,EAExFhG,EAAc/C,CAAS,CAC1B,CAEJ,CChaA,MAAAiJ,GAAA,CACA,SAAA,CACA,GAAA,CACA,SAAA,WACA,SAAA,WACA,SAAA,WACA,UAAA,YACA,MAAA,QACA,OAAA,SACA,SAAA,WACA,QAAA,oBACA,aAAA,iBACA,UAAA,SACA,YAAA,OACA,EACA,GAAA,CACA,SAAA,cACA,SAAA,YACA,SAAA,WACA,UAAA,cACA,MAAA,SACA,OAAA,WACA,SAAA,WACA,CACA,CACA,EA4CAxM,EAAA,YAAA,GAgBA,MAAAyM,GAAAC,GAAA,CACA,KAAA,gBACA,KAAAF,GACA,WAAA,CAAA,aACAG,GAAA,aACAC,GAAA,QAAA,aAAA,QACAC,GACA,YAAAC,EACA,EACA,MAAA,CACA,KAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,UAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,WAAA,OACA,OAAA,OACA,UAAA,OACA,EACA,KAAA,KACA,CACA,YAAA,KAAA,MAAA,KAAA,KAAA,QAAA,EAEA,YAAA,CACA,cAAA,GACA,mBAAA,GACA,sBAAA,GACA,YAAA,CACA,EAEA,WAAA,CACA,QAAA,GACA,SAAA,GACA,WAAA,GACA,MAAA,GACA,YAAA,GACA,UAAA,GACA,OAAA,IACA,EAEA,QAAA,CACA,cAAA,GACA,UAAA,GACA,UAAA,GACA,WAAA,GACA,UAAA,GACA,KAAA,CAAA,CACA,EAEA,WAAA,GACA,cAAA,GAEA,YAAAzJ,EAAA,MACA,SAAA,GACA,SAAA,GACA,UAAA,YAEA,WAAA,CAAA,IAAA,GAAA,GAAA,GAAA,IAAA,KAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,MAAA,EAEA,WAAA,CAAA,EAEA,MAAA,KAEA,YAAA,GACA,eAAA,GACA,gBAAA,GACA,eAAA,GAEA,cAAA,GAEA,KAAA,KAEA,SAAA,CAAA,EACA,SAAA,CAAA,EACA,UAAA,CAAA,EACA,eAAA,CAAA,EACA,SAAA,CAAA,EACA,eAAA,CAAA,EACA,MAAA,CAAA,EACA,MAAA,CAAA,EAEA,eAAA,CAAA,EACA,kBAAA,CAAA,EAEA,OAAA,CAAA,EACA,YAAA,CAAA,EAEA,UAAA,CAAA,EAUA,gBAAA,GACA,cAAA,CAAA,EACA,aAAA,KACA,kBAAA,KACA,iBAAA,KAEA,aAAA,yCAEA,cAAA,CAAA,EACA,oBAAA,CAAA,EAGA,IAAA0J,GAAA,CACA,SAAA,QACA,QAAA,EACA,OAAA,KAAA,CACA,EACA,IAAA9M,GAAAA,EAAA,MAAA,EAAA,CAAA,CAAA,EACA,QAAA,EAEA,iBAAA,EAAA,GAGA,SAAA,CACA,SAAA,CACA,OAAA,IAAA+M,GAAA,KAAA,WAAA3J,CAAA,CACA,EAEA,YAAA,CACA,MAAA4J,EAAA,KAAA,OAAA,MAAA,YAAA,OACAhN,GAAAA,EAAA,OAAA,KAAA,IAAA,EAEA,GAAAgN,EAAA,SAAA,EACA,cAAA,IAAA,iBAAA,EACA,MAEA,OAAAA,EAAA,EACA,EAEA,cAAA,CACA,OAAA,KAAA,YACA,EAEA,WAAA,CACA,MAAAC,EAAA,CACA,KAAA,UACA,GAAA,WAAA,EAGAC,EAAA,CACA,KAAA,QACA,GAAA,WAAA,EAGA,OAAA,KAAA,YAAA,WAAAA,EAAAD,CACA,CACA,EAEA,MAAA,CACA,0BAAA,CACA,CAAApI,EAAA,KAAA,cACAA,EAAA,KAAA,cACA,EAEA,0BAAA,CACA,KAAA,mBAAA,CACA,EAEA,KAAA,4BAAA,CACA,QAAA,IAAA,uBAAA,EACA,KAAA,YAAA,KAAA,kBAAA,EACA,MAAA,KAAA,eACA,CACA,EAEA,QAAA,CACA,qBAAAI,EAAA,CAGA,GAFA,QAAA,IAAA,CAAA,SAAAA,CAAA,CAAA,EAEA,KAAA,mBAAAA,EAAA,CAKA,GAJA,KAAA,iBAAA,KACA,KAAA,eAAA,GAGA,CAAA,KAAA,cAAA,OAAA,CACA,MAAAkI,EAAA,KAAA,SAAA,UAAAC,EAAA,KAAA,KAAA,eAAA,EACA,KAAA,gBAAA,GACA,KAAA,oBAAAD,EAAA,EAAA,CACA,CAEA,MACA,CAEA,KAAA,eAAA,KAAA,UAAA,UAAA5M,EAAA,MAAA0E,EAAA,GAAA,EACA,KAAA,iBAAAA,CACA,EAEA,wBAAAmC,EAGA,CACA,MAAAiG,EAAA,CAAA,EACA,IAAAC,EAAA,EAMA,MAAAC,EAAA,CAAA,EAGA,IAAAC,EAAA,KAAA,SAAA,UAAAC,EAAA,MAAArG,EAAA,SAAA,EAAA,GAEA,MAAAsG,EAAA,KAAA,MAAAF,EAAA,cACA,IAAAG,EAAA,CAAA,IAAAD,EAAA,GAAAA,EAAA,IAAA,IAAAA,EAAA,GAAAA,EAAA,GAAA,EACAE,EAAAJ,EAAA,aAGAD,EAAA,IAAAC,EAAA,gBAAA,CACA,KAAAA,EAAA,aACA,SAAAG,EACA,OAAA,CAAA,CAAA,OAAA,CAAA,EAAA,SAAA,GAAA,QAAA,CAAA,EAAA,EACA,MAAA,GACA,KAAAvG,EACA,QAAA,CAAA,EACA,OAAA,CAAAsG,EAAA,GAAAA,EAAA,EAAA,EACA,KAAA,CAAAA,EAAA,GAAAA,EAAA,EAAA,CAAA,EAGA,UAAAjH,KAAAW,EAAA,KAAA,CACA,GAAA,CAAAX,EAAA,YAAA,SAEA4G,EAAA,KAAA5G,EAAA,WAAA,EAEA,MAAAxB,EAAA,KAAA,eAAAwB,EAAA,aACA,GAAA,CAAAxB,EAAA,SAEA,MAAA4I,EAAApH,EAAA,QAAA,SAAAxB,EAAA,MAAAA,EAAA,IACA2D,EAAA,CAAA,KAAA,MAAAiF,GAAA,GAAA,KAAA,MAAAA,GAAA,EAAA,EACAhF,EAAA,CAAA,KAAA,MAAAgF,GAAA,GAAA,KAAA,MAAAA,GAAA,EAAA,EACA/C,EAAA,CAAA,IAAAlC,EAAA,GAAAC,EAAA,IAAA,IAAAD,EAAA,GAAAC,EAAA,GAAA,EAGAiF,EAAA,KAAA,GAAArH,EAAA,KAAA,EAEA,CAAA,KAAAsH,EAAA,MAAA5I,EAAA,MAAAC,EAAA,GAAA4I,EAAA,IAAAvI,EAAA,IAAAC,EAAA,GAAA8C,KAAAH,CAAA,EAAApD,EAEAgJ,EAAA,CACA,GAAAhJ,EAAA,IACA,KAAA6I,EACA,MAAAR,IACA,KAAAO,EACA,SAAA/C,EACA,MAAA,GACA,KAAA1D,EACA,QAAAiB,EACA,OAAAO,EACA,KAAAC,CAAA,EAIA,GAAAgF,GAAAD,EAEAL,EAAA,IAAAM,KAAA,OAAAN,EAAA,IAAAM,KAAA,OAAA,OAAA,GACApH,EAAA,OACA,KAAAwH,CAAA,UACA,IAAAJ,MAAAN,EAAA,CAEA,MAAA1F,EAAA,CAAA,OAAA,CAAA,EAAA,SAAA,GAAA,QAAA,CAAA,GACAA,EAAApB,EAAA,OAAA,KAAAwH,CAAA,EACAV,EAAA,IAAAM,KAAA,OAAA,KAAAhG,CAAA,CAAA,KACA,CAEA,MAAAA,EAAA,CAAA,OAAA,CAAA,EAAA,SAAA,GAAA,QAAA,CAAA,GACAA,EAAApB,EAAA,OAAA,KAAAwH,CAAA,EACAV,EAAA,IAAAM,KAAA,CACA,KAAAA,EACA,SAAA/C,EACA,MAAA,GACA,KAAA1D,EACA,QAAAiB,EACA,OAAAO,EACA,KAAAC,EACA,OAAA,CAAAhB,CAAA,CAAA,CAEA,CACA+F,EAAAC,CACA,CAGA,MAAAzJ,EAAA,OAAA,OAAAmJ,CAAA,EAGA,QAAAW,EAAA,EAAAA,EAAA9J,EAAA,OAAA8J,IACA9J,EAAA8J,GAAA,MAAA,GAAAA,IAEA,OAAA9J,EAAA,GAAA,MAAA,QAGA,CAAA,kBAAAiJ,EAAA,eAAAjJ,EACA,EAEA,aAAA,CACA,MAAAH,EAAA,CAAA,EAEA,KAAA,SAAA,QAAAwJ,GAAA,CACA,MAAAU,EAAAV,EAAA,aACA,IAAAC,EAAA,KAAA,MAAAS,GAEA,CAAAT,IAEAzJ,EAAAkK,KACAlK,EAAAkK,GAAA,CACA,KAAA,QACA,KAAAV,EAAA,aACA,SAAA,CAAA,IAAAC,EAAA,GAAAA,EAAA,IAAA,IAAAA,EAAA,GAAAA,EAAA,GAAA,EACA,OAAA,KAAA,MAAAD,EAAA,cACA,SAAA,CAAA,CAAA,GAGAxJ,EAAAkK,GAAA,SAAAV,EAAA,KAAAA,EAAA,CACA,EAEA,KAAA,OAAA,OAAA,OAAAxJ,CAAA,EACA,KAAA,YAAA,KAAA,OAAA,MAAA,CAAA,CACA,EAGA,gBAAA,CACA,KAAA,cAAA,GACA,KAAA,UAAA,GACA,KAAA,eAAA,GACA,KAAA,YAAA,GACA,KAAA,eAAA,KAAA,UAAA,MAAA,CAAA,EAEA,UAAAmD,KAAA,KAAA,MAAA,CAEAA,EAAA,KAAA,QAAA,CAAAgH,EAAAC,IACA,KAAA,cAAAjH,EAAAgH,EAAAC,GAAA,CAAA,EAIA,MAAAC,EAAA,KAAA,wBAAAlH,CAAA,EACA,KAAA,eAAA,KAAA,eAAA,OAAAkH,EAAA,cAAA,EAGA,KAAA,YAAA,CACA,CACA,EAEA,MAAA,iBAAAlH,EAAA,CAEA,GAAA,KAAA,cAAA,SAAAA,CAAA,EAAA,CACA,KAAA,cAAA,KAAA,cAAA,OAAAmH,GAAAA,IAAAnH,CAAA,EACA,KAAA,UAAA,KAAA,UAAA,OAAAgH,GAAAA,EAAA,OAAAhH,CAAA,EACA,KAAA,eAAA,KAAA,eAAA,OAAAoH,GAAAA,EAAA,OAAApH,CAAA,EAGA,KAAA,cAAA,QAAA,KAAA,eAAA,EACA,MACA,CAGA,KAAA,cAAA,SACA,KAAA,cAAA,GACA,KAAA,UAAA,GACA,KAAA,eAAA,GACA,KAAA,YAAA,IAGA,KAAA,cAAA,KAAAA,CAAA,EAEA,KAAA,CAAA,kBAAAiG,EAAA,eAAAjJ,CAAA,EAAA,KAAA,wBAAAgD,CAAA,EACA,KAAA,kBAAAiG,EAGA,IAAAgB,EAAA,EACA,UAAAD,KAAAhH,EAAA,KACA,KAAA,cAAAA,EAAAgH,EAAAC,GAAA,EAIA,KAAA,eAAA,KAAA,eAAA,OAAAjK,CAAA,CACA,EAEA,cACAgD,EACAgH,EACAC,EACA,CAEA,MAAAxE,EAAA,CAAA,CAAA,KAAA,MAAAuE,EAAA,MAAA,IAAA,GAAA,KAAA,MAAAA,EAAA,MAAA,IAAA,EAAA,CAAA,EAEA,UAAAP,KAAAO,EAAA,MAAA,CACA,MAAAK,EAAA5E,EAAAA,EAAA,OAAA,GACA6E,EAAA,CAAA,KAAA,MAAAb,GAAA,GAAA,KAAA,MAAAA,GAAA,EAAA,GAGAa,EAAA,KAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,KACA5E,EAAA,KAAA6E,CAAA,EAIA7E,EAAA,KAAA,CAAA,KAAA,MAAAgE,GAAA,GAAA,KAAA,MAAAA,GAAA,EAAA,CAAA,CACA,CAEA,KAAA,UAAA,KAAA,UAAA,OAAA,CACA,CACA,KAAAzG,EACA,iBAAAgH,EAAA,iBACA,UAAAA,EAAA,UACA,MAAAC,EACA,OAAAxE,EACA,MAAA,KAAA,KAAA,EAAAzC,EAAA,YAAA,KAAA,IAAA,QACA,KAAA,KACA,CAAA,CACA,CACA,EAEA,oBAAA+F,EAAA,SAGA,GAFA,KAAA,iBAAA,GAEA,CAAA,KAAA,MAAA,OAEA,MAAA3E,EAAA2E,EAAA,IAeA,GAbA,KAAA,SAAA,GACA,KAAA,UAAA,GACA,KAAA,SAAA,GACA,KAAA,MAAA,GACA,KAAA,MAAA,GACA,KAAA,eAAA,GACA,KAAA,YAAA,GACA,KAAA,iBAAA,KACA,KAAA,kBAAA,GACA,KAAA,eAAA,GACA,KAAA,UAAA,GAGA,KAAA,kBAAA3E,EAAA,CACA,KAAA,gBAAA,GACA,MACA,CAEA,KAAA,gBAAAA,EAGA,IAAAmG,EAAAxB,EAAA,aAAA,SAAA,SAAA,CAAA,EACA,KAAA,SAAAwB,EAAA,KAAA,CAAA3O,EAAAC,IAAAF,EAAAC,EAAAC,CAAA,CAAA,EAGA,KAAA,YAAA,EAGA,KAAA,UAAA,KAAA,iBAAAkN,CAAA,GAEAyB,GAAAC,EAAA1B,EAAA,WAAA,YAAA0B,EAAA,UAAA,MAAAD,EAAA,SACA,KAAA,SAAAzB,EAAA,SAAA,QACA,IAAA5M,GAAAA,EAAA,CAAA,EACA,KAAA,CAAAP,EAAAC,IAAAF,EAAAC,EAAA,IAAAC,EAAA,GAAA,CAAA,GAEA,KAAA,MAAA,KAAA,aAAAkN,CAAA,EAGA,KAAA,eAAA,KAAA,UACA,KAAA,eAAA,CACA,EAEA,YAAAA,EAAA,CAEA,GAAAA,EAAA,MAAA,KAAA,CACA,KAAA,MAAA,KAAAA,EAAA,IAAA,EACA,KAAA,aAAAA,EAAA,KACA,MACA,CAEA,GAAAA,EAAA,OAAA,KAAA,CAEA,GAAAA,EAAA,MAAA,KAAA,QAAA,KAAA,CACA,KAAA,MAAA,KAAAA,EAAA,MAAA,IAAA,EACA,KAAA,aAAAA,EAAA,MAAA,KACA,MACA,CAGA,KAAA,MAAAA,EAAA,MAAA,KAEA,QAAA,EAAA,EAAA,EAAAA,EAAA,MAAA,KAAA,OAAA,IAAA,CACA,GAAAA,EAAA,MAAA,KAAA,GAAA,UAAA,OAAA,CACA,KAAA,aAAAA,EAAA,MAAA,KAAA,GACA,KACA,CACA,KAAA,aAAAA,EAAA,MAAA,KAAA,EACA,CACA,CACA,EAEA,aAAAA,EAAA,CAGA,GAFA,KAAA,YAAAA,CAAA,EAEA,CAAA,KAAA,YAAA,CAAA,KAAA,MAAA,OAAA,MAAA,GAEA,MAAA2B,EAAA,KAAA,aAAA,KAAA,IAAA,CAAA1H,EAAAxH,IAAA,CAIA,MAAAmP,EAAA,CAAA3H,EAAA,IAAA,EAAA,EACAG,MAAA,IAEA,QAAA3H,EAAA,EAAAA,EAAAwH,EAAA,IAAA,OAAAxH,IAEAwH,EAAA,IAAAxH,EAAA,GAAA,iBAAA,CAAA,GAAA2H,CAAA,EACAwH,EAAA,KAAA3H,EAAA,IAAAxH,EAAA,EAAA,EACAmP,EAAA,KAAA3H,EAAA,IAAAxH,EAAA,EAGAwH,EAAA,IAAAxH,GAAA,OAAA,UAAAwH,EAAA,IAAAxH,GAAA,aACA2H,EAAA,IAAAH,EAAA,IAAAxH,GAAA,WAAA,EACAwH,EAAA,IAAAxH,GAAA,OAAA,YAAAwH,EAAA,IAAAxH,GAAA,aACA2H,EAAA,OAAAH,EAAA,IAAAxH,GAAA,WAAA,EAIA,MAAAsE,EAAAkD,EAAA,IACA,OAAAgH,GAAAA,EAAA,OAAAA,EAAA,MAAA,MAAA,EACA,IAAAA,GAAA,CAEA7G,MAAAA,EAAA6G,EAAA,iBAAA,IAAA5F,GAAA,KAAA,eAAAA,EAAA,EACAf,EAAAF,EAAA,OACA,CAAAK,EAAAoH,IAAApH,EAAA,YAAAoH,GAAA,YAAAA,EAAA,QAAA,CAAA,EACA,CAAA,EAEA,MAAA,CACA,iBAAAzH,EACA,UAAAE,EACA,MAAA2G,EAAA,MAAAA,EAAA,MAAA,MAAA,GAAA,EAAA,CAAA,CAAA,CACA,CACA,EAQA,MANA,CACA,UAAAhH,EAAA,WACA,KAAA2H,EACA,KAAA7K,EACA,WAAA,CAAA,CAEA,CACA,EAEA,OAAA4K,EAAA,KAAA,CAAA9O,EAAAC,IAAAF,EAAAC,EAAA,UAAAC,EAAA,SAAA,CAAA,EAGA6O,EAAA,QAAA,CAAA1H,EAAAxH,IAAAwH,EAAA,WAAAxH,CAAA,EAEAkP,CACA,EAEA,iBAAA3B,EAAA,SAEA,GADA,KAAA,eAAA,GACA,GAAAyB,GAAAC,EAAA1B,EAAA,YAAA,YAAA0B,EAAA,WAAA,MAAAD,EAAA,QAAA,MAAA,GAEA,MAAA5K,EAAAmJ,EAAA,UAAA,SAAA,KAAA,CAAAnN,EAAAC,IACAF,EAAAC,EAAA,IAAAC,EAAA,GAAA,CAAA,EAEA,GAAA,CACA,UAAAgF,KAAAjB,EAEAiB,EAAA,MAAA,IAAA,KAAA,MAAAA,EAAA,OAAA,GAAA,KAAA,MAAAA,EAAA,OAAA,IACAA,EAAA,MAAA,IAAA,KAAA,MAAAA,EAAA,OAAA,GAAA,KAAA,MAAAA,EAAA,OAAA,IACAA,EAAA,IAAA,IAAA,KAAA,MAAAA,EAAA,KAAA,GAAA,KAAA,MAAAA,EAAA,KAAA,IACAA,EAAA,IAAA,IAAA,KAAA,MAAAA,EAAA,KAAA,GAAA,KAAA,MAAAA,EAAA,KAAA,IAEA,KAAA,eAAAA,EAAA,KAAAA,QAIA,CAEA,OAAAjB,CACA,EAGA,mBAAA,CACA,MAAA5E,EAAA,KAAA,OAAA,OACA,GAAA,CAAAA,EAAA,SAAA,CAAAA,EAAA,UAAA,CACA,QAAA,IAAA,mCAAA,EACA,MACA,CAGA,MAAA6P,EAAA,EAAA7P,EAAA,UAAA,YAAA,GAAA,EACA8P,EAAA9P,EAAA,UAAA,UAAA,EAAA6P,CAAA,EACAE,EAAA/P,EAAA,UAAA,UAAA6P,CAAA,EAEA,KAAA,QAAA,UAAAC,EACA,KAAA,QAAA,WAAAC,CACA,EAEA,MAAA,eAAA,SAEA,GAAA,KAAA,OAAA,CACA,KAAA,WAAA,OAAA,OAAA,CAAA,EAAA,KAAA,MAAA,EACA,MACA,CAGA,KAAAN,EAAA,KAAA,aAAA,YAAAA,EAAA,SAAA,YAAAD,EAAA,KAAA,aAAA,YAAAA,EAAA,SAAA,QACA,GAAA,CACA,MAAAQ,EACA,KAAA,WAAA,QAAA,GAAA,EAAA,GACA,KAAA,WACA,KAAA,UAAA,IAAA,KAAA,WAEAC,EAAA,MAAA,KAAA,QAAA,YAAAD,CAAA,EACA,KAAA,WAAAE,GAAA,MAAAD,CAAA,EACA,aACApD,GACA,QAAA,IAAA,QAAA,EAEA,MAAAsD,EAAAtD,EACA,KAAA,WAAA,cAAAsD,EAAA,SAAA,KACAnM,EAAA,OAAA,eAAA,KAAA,WAAA,IAAA,EAEA,MACA,CAIA,MAAAZ,EAAA,KAAA,QAAA,WAAA,UACA,EACA,GAAA,KAAA,QAAA,WAAA,QAAA,UAAA,CAAA,EAIA,CAAA,MAAAgN,GAAA,MAAA,KAAA,QAAA,aAAA,KAAA,QAAA,SAAA,EAEA,IAAAC,EAAA,KAAA,QAAA,WAAA,WAAA,WAAA,SAAA,EAEA,GAAAD,EAAA,QAAAC,CAAA,GAAA,GAAA,CACA,MAAAC,EAAAF,EAAA,OAAAG,GAAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EACAD,EAAA,OAAAD,EAAAC,EAAA,IAEA,KAAA,QAAA,cAAA,yBACAD,EAAA,GAEA,CAEA,KAAA,WAAA,CACA,QAAAA,EACA,SAAA,KAAA,WACA,MAAAjN,EACA,YAAA,GACA,OAAA,KAAA,WAAA,OACA,WAAA,GACA,UAAA,EAAA,EAGA,MAAAoN,EAAA,mBACA,KAAA,MAAA,QAAAA,CAAA,EAEA,KAAA,eAAA,CACA,EAEA,MAAA,cAAA,CACA,IAAAC,EAAA,EACA3J,EAAA,EACAC,EAAA,EAEA,GAAA,KAAA,WAAA,OACA,OAAA,KAAA,WAAA,QAAA,WACA,KAAA,WAAA,OAAA,KAAA,WAAA,OAAA,MAAA,GAAA,EAAA,IAAA,MAAA,GAEAD,EAAA,KAAA,WAAA,OAAA,GACAC,EAAA,KAAA,WAAA,OAAA,WACA,CAAA,KAAA,WAAA,OAAA,CAGA,GAFA,KAAA,KAAA,OAAA,QAAA,KAAA,KAAA,EAEA,CAAA,KAAA,KAAA,OAAA,OAEA,MAAA2J,EAAA,KAAA,KAAA,OAAA,EAEAC,EAAA,KACA,QAAAnQ,EAAA,EAAAA,EAAAkQ,EAAAlQ,GAAAmQ,EACA7J,GAAA,KAAA,KAAAtG,EAAA,GAAA,GAAA,GACAuG,GAAA,KAAA,KAAAvG,EAAA,EAAA,GAAA,GAAA,GACAiQ,IAGA3J,EAAAA,EAAA2J,EACA1J,EAAAA,EAAA0J,CACA,CACA3J,GAAAC,GACA,KAAA,OAAA,OAAA,eAAA,CACA,UAAAD,EACA,SAAAC,EACA,KAAA,EACA,QAAA,EACA,MAAA,EACA,KAAA,EAAA,CACA,CAEA,EAEA,MAAA,gBAAA,CACA,GAAA,KAAA,WAAA,KAAA,WAAA,UACA,GAAA,CACA,MAAA6J,EAAA,MAAA,KAAA,QAAA,YACA,KAAA,QAAA,UAAA,IAAA,KAAA,WAAA,SAAA,EAEAC,EAAA,MAAAC,GAAA,YAAAF,CAAA,EACAG,EAAAC,GAAAH,CAAA,EACAE,IACA,KAAA,aAAA,sDAAAA,YACAlE,GACA,QAAA,MAAAA,CAAA,CACA,CAEA,EAEA,YAAAlG,EAAA,CACA,QAAA,IAAA,SAAAA,CAAA,EACAA,GAAA,KAAA,gBAAA,GACAA,GAAA,YAAAA,EAAA,OAAA,SAAA,KAAA,aAAAA,CAAA,GACAA,GAAA,YAAAA,EAAA,OAAA,OAAA,KAAA,WAAAA,CAAA,CACA,EAEA,aAAAA,EAAA,CACA,MAAAsK,EAAA,OAAA,OAAAtK,EAAA,QAAA,EAAA,IAAA0H,GAAAA,EAAA,GAAA,EACA,QAAA,IAAA,CAAA,oBAAA4C,CAAA,CAAA,EACA,KAAA,cAAA,GACA,KAAA,eAAA,GAEA,UAAAjJ,KAAA,KAAA,MACAiJ,EAAA,SAAAjJ,EAAA,SAAA,IACA,KAAA,iBAAAA,CAAA,EAGA,KAAA,kBAAA,QAAAoB,GAAA,CACA,KAAA,eAAA,KAAA,KAAA,eAAAA,EAAA,CAAA,CACA,EAGA,EAEA,WAAAzC,EAAA,CACAA,GAAA,MAAAA,EAAA,MAAA,KAAA,iBAAAA,GAAA,YAAAA,EAAA,IAAA,CACA,EAEA,iBAAA,CACA,KAAA,eAAA,CACA,EAEA,oBAAA,CAAA,EAEA,MAAA,cAAA,CAGA,MAAAuK,EAAA,MAAA,KAAA,sBAAA,KAAA,WAAA,QAAA,EACA,OAAAA,GAEA,MAAAC,GAAAD,EAAA,CAEA,YAAA,CACA,mBACA,iDACA,6BACA,sCACA,mCACA,CAAA,CACA,GAGA,SAAA,QAAA,KAAA,CAAAtQ,EAAAC,IAAAF,EAAAC,EAAA,IAAAC,EAAA,GAAA,CAAA,EAdA,EAgBA,EAEA,MAAA,aAAA,CAGA,GAFA,KAAA,QAAA,cAAA,qBAEA,KAAA,WAAA,QAAA,QAAA,OAAA,EAAA,GAAA,CAEA,MAAAX,EAAA,GAAA,KAAA,QAAA,aAAA,KAAA,WAAA,UACAkR,EAAA,MAAA,KAAA,aAAAlR,EAAA,CAAA,CAAA,EAGAkR,EAAA,YAAA,YACA,KAAA,OAAA,OAAA,eAAAC,EAAA,EAIA,KAAA,QAAA,cAAA,8BACA,MAAAC,EAAA,CAAA,EAEA,OAAAF,EAAA,QAAA,QAAA,CAAArC,EAAAvO,IAAA,CACA8Q,EAAAvC,GAAA,CACAqC,EAAA,OAAA5Q,EAAA,GACA4Q,EAAA,OAAA5Q,EAAA,EAAA,GACA4Q,EAAA,KAAA5Q,EAAA,GACA4Q,EAAA,KAAA5Q,EAAA,EAAA,EAAA,CACA,CACA,EACA8Q,CAAA,KACA,CAEA,MAAAV,EAAA,MAAA,KAAA,QAAA,YACA,KAAA,QAAA,UAAA,IAAA,KAAA,WAAA,OAAA,EAEAW,EAAAX,EAAA,MAAAY,EAAAZ,CAAA,EAAA,KACA,IAAAX,EAAA,MAAAwB,EAAA,IAAAC,EAAA,aAAAH,EAAA,CAAA,GAAA,QAAA,CAAA,CAAA,EAGA,OAFA,KAAA,MAAAtB,CAAA,CAGA,CACA,EAEA,MAAA,aAAA/P,EAAAyR,EAAA,CACA,OAAA,IAAA,QAAA,CAAAC,EAAAC,IAAA,CACA,MAAAC,EAAA,IAAAC,GACA,GAAA,CACAD,EAAA,YAAA,CACA,SAAA5R,EACA,WAAA,KAAA,WACA,WAAAyR,CAAA,CACA,EAEAG,EAAA,UAAAjF,GAAA,CAEA,GAAAA,EAAA,KAAA,iBAAA,CACA,IAAAmF,EACA,OAAA,wDAAA,GAAA,aACA,MAAA,SAAAA,CAAA,CAAA,IAAAA,EAAA,QAAAA,KAEAF,EAAA,YAAA,CAAA,IAAAE,CAAA,CAAA,EACA,MACA,CAGAF,EAAA,UAAA,EAEAjF,EAAA,KAAA,QACA,QAAA,MAAAA,EAAA,KAAA,KAAA,EACA7I,EAAA,OAAA,QAAA6I,EAAA,KAAA,KAAA,EACAgF,EAAAhF,EAAA,KAAA,KAAA,GAEA+E,EAAA/E,EAAA,KAAA,KAAA,CAAA,QAEAsD,GACA2B,EAAA,UAAA,EACA,QAAA,MAAA3B,CAAA,EACA0B,EAAA1B,CAAA,CACA,CAAA,CACA,CACA,EAEA,aAAA8B,EAAA,CACA,KAAA,SAAAA,CACA,EAEA,cAAA,CACA,aAAA,QACA,qCACA,KAAA,YAAA,WAAAC,EAAA,SAAAA,EAAA,SAAA,CAEA,EAEA,MAAA,sBAAAC,EAAA,CACA,IAAAC,EAAA,GAAA,KAAA,aAAAD,IAEA,GAAA,CAEA,GAAAC,EAAA,QAAA,GAAA,EAAA,IAAAA,EAAA,QAAA,GAAA,EAAA,GAAA,CACA,MAAAC,EAAAD,EAAA,UAAA,EAAAA,EAAA,YAAA,GAAA,CAAA,EACAE,EAAAF,EAAA,UAAA,EAAAA,EAAA,YAAA,GAAA,CAAA,EAGA,CAAA,MAAAhC,CAAA,EAAA,MAAA,KAAA,QAAA,aAAAkC,CAAA,EACAC,EAAAC,GAAApC,EAAAiC,CAAA,EACA,GAAAE,EAAA,QAAA,EAAA,MAAA,MAAA,qBAAAF,IAAA,EACA,GAAAE,EAAA,OAAA,EACA,MAAA,MAAA,+BAAAF,OAAAE,GAAA,EACAH,EAAA,GAAAE,KAAAC,EAAA,IACA,CAEA,IAAAE,EAAA,GAEA,GAAAL,EAAA,SAAA,KAAA,EACAK,EAAA,MAAA,KAAA,QAAA,YAAAL,CAAA,UACAA,EAAA,SAAA,IAAA,EAAA,CACA,MAAAxB,EAAA,MAAA,KAAA,QAAA,YAAAwB,CAAA,EACAb,EAAAX,EAAA,MAAAY,EAAAZ,CAAA,EAAA,KACA6B,EAAA,MAAAhB,MAAAC,EAAA,aAAAH,EAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CACA,CACA,OAAAkB,QACA,GACAzO,EAAA,OAAA,QAAA,GAAA,CAAA,EACA,MAAA0O,EAAAN,EAAA,KAAA,EACA,eAAA,MAAA,CAAA,EACA,KAAA,QAAA,cAAAM,EACA,EACA,CACA,EAEA,gBAAA,CACA,KAAA,iBAAA,CAAA,KAAA,gBACA,EAEA,WAAA/C,EAAA,CAEA,QAAA,EAAA,EAAA,EAAA,KAAA,MAAA,OAAA,IACA,KAAA,MAAA,GAAA,UAAA,QAIAA,EAAA,UAAA,OAEA,KAAA,kBAAA,KAAA,MAAA,QAAAA,CAAA,EAGA,KAAA,cAAA,GAEA,KAAA,eAAA,EACA,KAAA,aAAAA,CACA,CACA,EACA,MAAA,SAAA,CACA3L,EAAA,OAAA,gBAAA,CAAA,KAAA,SAAA,EAEA,KAAA,QAAA,UAAA,KAAA,UACA,KAAA,QAAA,UAAA,KAAA,UAEA,KAAA,YAAA,KAAA,kBAAA,EACA,MAAA,KAAA,gBAEA,MAAA,YAEA,KAAA,SAAA,GACA,KAAA,mBAAA,EAEA,KAAA,QAAA,cAAA,sBAEA,KAAA,SAAA,MAAA,KAAA,aAAA,EAEA,MAAA,KAAA,YACA,KAAA,MAAA,MAAA,KAAA,YAAA,EACA,KAAA,aAAA,EAEA,KAAA,QAAA,cAAA,GAGA,KAAA,SAAA,QAAA,KAAA,oBAAA,KAAA,SAAA,EAAA,EACA,EAEA,eAAA,CACA,KAAA,QAAA,UAAA,GAEAA,EAAA,OAAA,gBAAA,EAAA,EACA,KAAA,OAAA,OAAA,gBAAA,EAAA,CACA,CACA,CAAA,ECvmCA,IAAI2O,GAAS,UAAY,CACvB,IAAIC,EAAI,KACJC,EAAGD,EAAI,eACPE,EAAGF,EAAI,MAAM,IAAIC,EAErB,OAAOC,EAAG,MAAO,CACf,YAAa,iBACb,MAAO,CACL,iBAAkB,CAACF,EAAI,SACxB,EACD,MAAO,CACL,WAAcA,EAAI,YACnB,EACD,MAAO,CACL,cAAiB,cAClB,CACL,EAAK,CAACE,EAAG,MAAO,CACZ,YAAa,aACjB,EAAK,CAACA,EAAG,MAAO,CACZ,YAAa,YACd,EAAE,CAAEF,EAAI,UAeJA,EAAI,GAAE,EAfUE,EAAG,WAAY,CAClC,YAAa,OACb,MAAO,CACL,UAAaF,EAAI,UACjB,UAAaA,EAAI,eACjB,OAAUA,EAAI,YACd,KAAQA,EAAI,UACZ,eAAkBA,EAAI,eACtB,KAAQA,EAAI,YAAY,WACxB,OAAUA,EAAI,WAAW,OACzB,OAAUA,EAAI,YACd,SAAYA,EAAI,YAChB,iBAAoBA,EAAI,cAAc,OACtC,QAAWA,EAAI,WAChB,CACL,CAAG,EAAeA,EAAI,UAAgCA,EAAI,GAAE,EAA1BE,EAAG,aAAa,EAAcF,EAAI,QAAQ,cAAgBE,EAAG,MAAO,CAClG,YAAa,UACjB,EAAK,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,QAAQ,aAAa,CAAC,CAAC,CAAC,EAAIA,EAAI,GAAI,CAAA,EAAG,CAAC,EAAIA,EAAI,UA6MnDA,EAAI,KA7M2DE,EAAG,MAAO,CAC1F,YAAa,cACb,MAAO,CACL,SAAY,EACb,CACF,EAAE,CAACF,EAAI,SAAS,OAASE,EAAG,KAAM,CACjC,YAAa,CACX,cAAe,SAChB,CACL,EAAK,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,EAAIA,EAAI,GAAI,EAAEE,EAAG,MAAO,CAC7D,YAAa,cACd,EAAEF,EAAI,GAAGA,EAAI,SAAU,SAAU7E,EAAS,CACzC,OAAO+E,EAAG,MAAO,CACf,IAAK/E,EAAQ,IACb,YAAa,UACb,MAAO,CACL,SAAUA,EAAQ,MAAQ6E,EAAI,eAC/B,EACD,GAAI,CACF,MAAS,SAAUG,EAAQ,CACzB,OAAOH,EAAI,oBAAoB7E,CAAO,CACvC,CACF,CACP,EAAO,CAAC+E,EAAG,MAAO,CACZ,YAAa,eACnB,EAAO,CAACF,EAAI,GAAGA,EAAI,GAAG7E,EAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACtC,CAAG,EAAG,CAAC,EAAG+E,EAAG,KAAM,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,iBAAmB,SAAS,CAAC,CAAC,CAAC,EAAGA,EAAI,gBAAkBE,EAAG,UAAW,CACxG,YAAa,iBACb,MAAO,CACL,KAAQ,UACT,CACL,EAAK,CAACA,EAAG,iBAAkB,CACvB,MAAO,CACL,eAAgB,YAChB,KAAQ,WACR,KAAQ,YACT,EACD,MAAO,CACL,MAAOF,EAAI,UACX,SAAU,SAAUI,EAAK,CACvBJ,EAAI,UAAYI,CACjB,EACD,WAAY,WACb,CACL,EAAK,CAACF,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGE,EAAG,iBAAkB,CAC5E,MAAO,CACL,eAAgB,QAChB,KAAQ,WACR,KAAQ,YACT,EACD,MAAO,CACL,MAAOF,EAAI,UACX,SAAU,SAAUI,EAAK,CACvBJ,EAAI,UAAYI,CACjB,EACD,WAAY,WACb,CACL,EAAK,CAACF,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGE,EAAG,iBAAkB,CACxE,MAAO,CACL,eAAgB,WAChB,KAAQ,WACR,KAAQ,YACT,EACD,MAAO,CACL,MAAOF,EAAI,UACX,SAAU,SAAUI,EAAK,CACvBJ,EAAI,UAAYI,CACjB,EACD,WAAY,WACb,CACL,EAAK,CAACF,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGA,EAAI,SAAS,OAASE,EAAG,iBAAkB,CACjG,MAAO,CACL,eAAgB,WAChB,KAAQ,WACR,KAAQ,YACT,EACD,MAAO,CACL,MAAOF,EAAI,UACX,SAAU,SAAUI,EAAK,CACvBJ,EAAI,UAAYI,CACjB,EACD,WAAY,WACb,CACF,EAAE,CAACF,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAIA,EAAI,IAAI,EAAG,CAAC,EAAIA,EAAI,KAAME,EAAG,MAAO,CAC3F,YAAa,aACd,EAAE,CAACF,EAAI,WAAa,YAAcE,EAAG,MAAO,CAC3C,YAAa,WACd,EAAE,CAACA,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,WAAW,CAAC,EAAI,KAAOA,EAAI,GAAGA,EAAI,UAAU,MAAM,CAAC,CAAC,CAAC,EAAGA,EAAI,GAAGA,EAAI,UAAW,SAAU/M,EAAUrF,EAAG,CACxI,OAAOsS,EAAG,MAAO,CACf,IAAK,GAAGtS,KAAKqF,EAAS,MACtB,YAAa,YACb,MAAO,CACL,SAAUA,GAAY+M,EAAI,iBAC1B,mBAAoBA,EAAI,kBAAkB,SAAS/M,EAAS,GAAG,CAChE,EACD,GAAI,CACF,MAAS,SAAUkN,EAAQ,CACzB,OAAOH,EAAI,qBAAqB/M,CAAQ,CACzC,CACF,CACP,EAAO,CAAC+M,EAAI,GAAGA,EAAI,GAAG,GAAG/M,EAAS,QAAQA,EAAS,SAASA,EAAS,KAAK,CAAC,CAAC,CAAC,CAC1E,CAAA,CAAC,EAAG,CAAC,EAAI+M,EAAI,GAAE,EAAIA,EAAI,WAAa,QAAUE,EAAG,MAAO,CACvD,YAAa,OACjB,EAAK,CAAC,KAAK,MAAM,OAAS,EAAIA,EAAG,MAAO,CACpC,YAAa,WACb,MAAO,CACL,YAAaF,EAAI,gBAClB,EACD,YAAa,CACX,MAAS,MACV,CACL,EAAK,CAACE,EAAG,MAAO,CACZ,YAAa,mBACb,GAAI,CACF,MAAS,SAAUC,EAAQ,CACzB,OAAOH,EAAI,gBACZ,CACF,CACF,EAAE,CAACE,EAAG,SAAU,CAACA,EAAG,OAAQ,CAACF,EAAI,GAAG,QAAUA,EAAI,GAAGA,EAAI,kBAAoB,CAAC,CAAC,CAAC,CAAC,EAAGA,EAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGE,EAAG,MAAO,CAC5G,YAAa,eACjB,EAAK,CAACA,EAAG,MAAO,CACZ,YAAa,kBACjB,EAAKF,EAAI,GAAG,KAAK,MAAO,SAAUjD,EAAMsD,EAAO,CAC3C,OAAOH,EAAG,IAAK,CACb,YAAa,gBACb,MAAO,CACL,YAAanD,EAAK,WAAa,MAChC,EACD,GAAI,CACF,MAAS,SAAUoD,EAAQ,CACzB,OAAOH,EAAI,WAAWjD,CAAI,CAC3B,CACF,CACP,EAAO,CAACiD,EAAI,GAAG,QAAUA,EAAI,GAAGK,EAAQ,CAAC,CAAC,CAAC,CAAC,CAC5C,CAAG,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAIL,EAAI,GAAI,EAAEE,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,OAAO,CAAC,EAAI,KAAOA,EAAI,GAAGA,EAAI,MAAM,MAAM,CAAC,CAAC,CAAC,EAAGA,EAAI,GAAGA,EAAI,MAAO,SAAU5K,EAAMxH,EAAG,CAC3I,OAAOsS,EAAG,MAAO,CACf,IAAK,GAAGtS,KAAKwH,EAAK,MAClB,YAAa,YACb,MAAO,CACL,SAAU4K,EAAI,cAAc,SAAS5K,CAAI,CAC1C,EACD,GAAI,CACF,MAAS,SAAU+K,EAAQ,CACzB,OAAOH,EAAI,iBAAiB5K,CAAI,CACjC,CACF,CACF,EAAE,CAAC4K,EAAI,GAAGA,EAAI,GAAG,GAAG5K,EAAK,WAAW,CAAC,CAAC,CAAC,CACzC,CAAA,CAAC,EAAG,CAAC,EAAI4K,EAAI,GAAE,EAAIA,EAAI,WAAa,WAAaE,EAAG,MAAO,CAC1D,YAAa,UACd,EAAE,CAACA,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,UAAU,CAAC,EAAI,KAAOA,EAAI,GAAGA,EAAI,SAAS,MAAM,CAAC,CAAC,CAAC,EAAGA,EAAI,GAAGA,EAAI,SAAU,SAAUM,EAAK1S,EAAG,CAChI,OAAOsS,EAAG,MAAO,CACf,IAAK,GAAGtS,KAAK0S,EAAI,MACjB,YAAa,WACnB,EAAO,CAACN,EAAI,GAAGA,EAAI,GAAGM,EAAI,GAAG,CAAC,CAAC,CAAC,CAC7B,CAAA,CAAC,EAAG,CAAC,EAAIN,EAAI,GAAE,EAAIA,EAAI,WAAa,WAAaE,EAAG,MAAO,CAC1D,YAAa,UACd,EAAE,CAACA,EAAG,OAAQ,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,UAAU,CAAC,EAAI,KAAOA,EAAI,GAAGA,EAAI,SAAS,MAAM,CAAC,CAAC,CAAC,EAAGA,EAAI,GAAGA,EAAI,SAAU,SAAUhP,EAASpD,EAAG,CACpI,OAAOsS,EAAG,MAAO,CACf,IAAK,GAAGtS,KAAKoD,EAAQ,MACrB,YAAa,WACd,EAAE,CAACgP,EAAI,GAAGA,EAAI,GAAG,GAAGhP,EAAQ,KAAK,CAAC,CAAC,CAAC,CACzC,CAAG,CAAC,EAAG,CAAC,EAAIgP,EAAI,GAAE,CAAE,CAAC,EAAGE,EAAG,MAAO,CAC9B,YAAa,WACjB,EAAK,CAACA,EAAG,MAAO,CACZ,YAAa,UACjB,EAAK,CAACA,EAAG,IAAK,CAACF,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,EAAGE,EAAG,WAAY,CACjE,YAAa,SACb,MAAO,CACL,QAAW,GACX,KAAQ,UACR,KAAQ,UACT,EACD,MAAO,CACL,MAAOF,EAAI,YAAY,YACvB,SAAU,SAAUI,EAAK,CACvBJ,EAAI,KAAKA,EAAI,YAAa,cAAeI,CAAG,CAC7C,EACD,WAAY,yBACb,CACF,CAAA,CAAC,EAAG,CAAC,EAAGF,EAAG,MAAO,CACjB,YAAa,UACjB,EAAK,CAACA,EAAG,WAAY,CACjB,MAAO,CACL,MAAOF,EAAI,YAAY,sBACvB,SAAU,SAAUI,EAAK,CACvBJ,EAAI,KAAKA,EAAI,YAAa,wBAAyBI,CAAG,CACvD,EACD,WAAY,mCACb,CACL,EAAK,CAACF,EAAG,OAAQ,CACb,SAAU,CACR,UAAaF,EAAI,GAAGA,EAAI,GAAG,cAAc,CAAC,CAC3C,CACL,CAAG,CAAC,CAAC,EAAGE,EAAG,WAAY,CACnB,MAAO,CACL,MAAOF,EAAI,YAAY,cACvB,SAAU,SAAUI,EAAK,CACvBJ,EAAI,KAAKA,EAAI,YAAa,gBAAiBI,CAAG,CAC/C,EACD,WAAY,2BACb,CACL,EAAK,CAACF,EAAG,OAAQ,CACb,SAAU,CACR,UAAaF,EAAI,GAAGA,EAAI,GAAG,SAAS,CAAC,CACtC,CACF,CAAA,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,EAAG,CAAC,CAAY,CAAC,CAAC,CAAC,CAChC,EACIO,GAAkB,CAAC,UAAY,CACjC,IAAIP,EAAI,KACJC,EAAGD,EAAI,eACPE,EAAGF,EAAI,MAAM,IAAIC,EAErB,OAAOC,EAAG,OAAQ,CAChB,YAAa,eACjB,EAAK,CAACA,EAAG,IAAK,CACV,YAAa,mBACd,CAAA,CAAC,CAAC,CACL,CAAC"}