import{d as x,g as v,U as z,B as y,n as _}from"./index.1d7144b8.js";import{b as O}from"./index.d10190c4.js";import{V as b}from"./VuePlotly.a136978d.js";import{H as j}from"./HTTPFileSystem.33aea9ff.js";import{D as E}from"./DashboardDataManager.6cb84912.js";import{c as C}from"./ColorsAndWidths.b0ff51a4.js";import{m as w}from"./util.5fe75924.js";import"./RoadNetworkLoader.worker.655695af.js";import"./index.5877f313.js";import"./cubehelix.15b78c18.js";import"./threshold.d4cae24d.js";import"./rainbow.d98e4227.js";const S={messages:{en:{total:"total",showChanges:"Only show changes"},de:{total:"Insgesamt",showChanges:"Nur \xC4nderungen zeigen"}}},k=x({name:"PlotlyPlugin",components:{VuePlotly:b},i18n:S,props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},config:{type:Object},datamanager:{type:Object},resize:Object,thumbnail:Boolean,yamlConfig:String},data(){return{globalState:v.state,vizDetails:{title:"",description:""},loadingText:"",jsonChart:{},id:`plotly-id-${Math.floor(1e12*Math.random())}`,traces:[],prevWidth:-1,prevHeight:-1,myDataManager:this.datamanager||new E(this.root,this.subfolder),layout:{margin:{t:8,b:0,l:0,r:0,pad:2},font:{color:"#444444",family:z},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0,rangemode:"tozero"},legend:{orientation:"v",x:1,y:1}},options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"chart",width:null,height:null}}}},computed:{fileApi(){return new j(this.fileSystem,v)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]}},watch:{"globalState.resizeEvents"(){this.changeDimensions({})},resize(t){this.changeDimensions(t)},"globalState.isDarkMode"(){this.updateTheme()}},async mounted(){if(await this.getVizDetails(),!this.thumbnail){try{this.vizDetails.datasets&&await this.prepareData(),this.vizDetails.traces&&(this.traces=this.vizDetails.traces),this.vizDetails.layout&&this.mergeLayouts(),this.vizDetails.fixedRatio&&(this.vizDetails.layout.xaxis=Object.assign(this.vizDetails.layout.xaxis,{constrain:"domain"}),this.vizDetails.layout.yaxis=Object.assign(this.vizDetails.layout.yaxis,{constrain:"domain",scaleanchor:"x",scaleration:1})),this.vizDetails.dropdownMenu&&(this.vizDetails.interactive="dropdown"),this.vizDetails.interactive&&this.createMenus(this.vizDetails.interactive)}catch(t){const e=t;console.error({e}),this.loadingText=""+e}this.updateTheme(),window.addEventListener("resize",this.changeDimensions)}},beforeDestroy(){window.removeEventListener("resize",this.changeDimensions)},methods:{changeDimensions(t){(t==null?void 0:t.height)&&(t==null?void 0:t.width)&&(t.height!==this.prevHeight||t.width!==this.prevWidth)&&(this.prevHeight=t.height,this.prevWidth=t.width,this.layout=Object.assign({},this.layout,t))},mergeLayouts(){const t={...this.vizDetails.layout};t.margin=this.layout.margin,t.font=this.layout.font,t.legend=this.layout.legend,delete t.height,delete t.width,t.xaxis?(t.xaxis.automargin=!0,t.xaxis.autorange=!0,t.xaxis.animate=!0,t.xaxis.title||(t.xaxis.title=this.layout.xaxis.title)):t.xaxis=this.layout.xaxis,t.yaxis?(t.yaxis.automargin=!0,t.yaxis.autorange=!0,t.yaxis.animate=!0,t.yaxis.title||(t.yaxis.title=this.layout.yaxis.title)):t.yaxis=this.layout.yaxis,this.layout=t},createMenus(t){if(t=="none")return;const e=[],i={},a=Object.values(this.traces).length;Object.values(this.traces).forEach((s,l)=>{"original_name"in s&&(s.name=s.original_name),s.group_name in i||(i[s.group_name]=[]),i[s.group_name].push(l),s.visible=!1}),Object.entries(i).forEach(s=>{const[l,c]=s,h=new Array(a);h.fill(!1);for(const r of c)h[r]=!0;e.push({method:"update",args:[{visible:h}],label:l})});const n=Object.values(i)[0];for(const s of n)this.traces[s].visible=!0;const o=this.layout;if(t=="dropdown"){const s=[{buttons:e,y:1,yanchor:"top"}];o.updatemenus=s}else if(t=="slider"){const s=[{pad:{t:10},currentvalue:{visible:!1,xanchor:"left",prefix:""},steps:e}];o.sliders=s}},updateTheme(){const t={paper_bgcolor:y[this.globalState.colorScheme],plot_bgcolor:y[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},async getVizDetails(){var n;if(this.config){this.vizDetails=Object.assign({},this.config),this.$emit("title",this.vizDetails.title||"Chart"),this.vizDetails.traces&&(this.traces=this.vizDetails.traces);return}this.loadingText="Loading config...";const t=(n=this.yamlConfig)!=null?n:"",e=t.indexOf("/")>-1?t:this.subfolder+"/"+t,i=await this.fileApi.getFileText(e),a=O.parse(i);this.vizDetails=a,this.vizDetails.title||(this.vizDetails.title="Chart"),this.$emit("title",this.vizDetails.title)},async prepareData(){await Promise.all(Object.entries(this.vizDetails.datasets).map(a=>{let[n,o]=a;return typeof o=="string"&&(o={file:o}),this.loadDataset(n,o)})),this.vizDetails.mergeDatasets&&Object.values(this.vizDetails.datasets).length>1&&(this.vizDetails.datasets={dataset:{name:"dataset",file:"none",data:this.mergeDatasets(Object.values(this.vizDetails.datasets))}});const t=Object.values(this.vizDetails.datasets),e=[],i=this.getColors(this.vizDetails,this.vizDetails.traces.length);this.vizDetails.traces.forEach((a,n)=>{let o=!1;t.forEach(s=>{var c;const l="$"+s.name;if((c=a.name)!=null&&c.startsWith(l)){const h=a.name.replace(l+".",""),r=this.groupDataTable(s.data,h),u=Object.keys(r).length,f=this.getColors(a,u);Object.keys(r).forEach((m,p)=>{const g=JSON.parse(JSON.stringify(a));g.name=m,g.group_name=m,this.recursiveCheckForTemplate(r[m],g,l),f&&("marker"in a||(g.marker={}),g.marker.color=f[p]),e.push(g)}),o=!0}else this.recursiveCheckForTemplate(s.data,a,l)}),o||(i&&("marker"in a||(a.marker={}),a.marker.color=i[n]),e.push(a))}),this.vizDetails.traces=e},async loadDataset(t,e){this.loadingText="Loading datasets...";const i=await this.myDataManager.getDataset({dataset:e.file},{highPrecision:!0});return e.data=i.allRows,e.name=t,this.vizDetails.datasets[t]=e,this.transformData(e),e},getColors(t,e){if("colorRamp"in t){const i=typeof t.colorRamp=="string"?{ramp:t.colorRamp}:t.colorRamp;return C(i,e>=2?e:2)}return null},transformData(t){"pivot"in t&&this.pivot(t.name,t.data,t.pivot.exclude,t.pivot.valuesTo,t.pivot.namesTo),"aggregate"in t&&this.aggregateColumns(t.data,t.aggregate.groupBy,t.aggregate.target),"constant"in t&&Object.entries(t.constant).forEach(e=>{const[i,a]=e,n=new Array(Object.values(t.data)[0].values.length);n.fill(a),t.data[i]={name:i,values:n,type:1}})},countOccurrences(t){let e={};return t.forEach(i=>{e[i]=e[i]?e[i]+1:1}),e},groupDataTable(t,e){let i={},a=t[e],n=this.countOccurrences(a.values);Object.entries(n).forEach(l=>{const[c,h]=l;let r={};Object.entries(t).forEach(u=>{const[f,m]=u;r[f]={...m};let p=Object.getPrototypeOf(m.values).constructor;r[f].values=new p(h)}),i[c]=r});for(var o=0;o<t[e].values.length;o++){var s=t[e].values[o];let l=i[s],c=l[e].values.length-n[s]--;Object.entries(t).forEach(h=>{const[r,u]=h;l[r].values[c]=u.values[o]})}return i},aggregateColumns(t,e,i){const a={},n=t[Object.keys(t)[0]].values.length;for(let s=0;s<n;s++){const l=e.reduce((c,h)=>c+=t[h].values[s],"");l in a?a[l][i]+=t[i].values[s]:(a[l]=Object.fromEntries(e.map(c=>[c,t[c].values[s]])),a[l][i]=t[i].values[s])}Object.keys(t).forEach(s=>{e.indexOf(s)==-1&&s!=i&&delete t[s]});const o=Object.fromEntries([...e,i].map(s=>[s,[]]));Object.values(a).forEach(s=>{Object.entries(s).forEach(l=>{o[l[0]].push(l[1])})}),Object.entries(o).forEach(s=>{t[s[0]].values=s[1]})},pivot(t,e,i,a,n){const o=Object.keys(e).filter(r=>i.indexOf(r)==-1);i.forEach(r=>{r in e||v.commit("error",`Pivot column ${r} not in ${t}`)});const s=Object.fromEntries(i.map(r=>[r,[]])),l=[],c=[],h=e[Object.keys(e)[0]].values.length;for(let r=0;r<h;r++)o.forEach(u=>{i.forEach(f=>s[f].push(e[f].values[r])),c.push(u),l.push(e[u].values[r])});i.forEach(r=>{e[r].values=s[r]}),e[a]={name:a,values:l},e[n]={name:n,values:c}},mergeDatasets(t){const e={},i=t[0].data;return Object.keys(i).forEach(a=>{const n=t.map(s=>(a in s.data||v.commit("error",`Merged dataset ${s.name} does not contain column ${a}`),s.data[a].values));let o;i[a].values instanceof Float32Array||i[a].values instanceof Float64Array?o=w(n):o=n.flat(),e[a]={name:a,type:i[a].type,values:o}}),e},recursiveCheckForTemplate(t,e,i){Object.entries(e).forEach(a=>{const[n,o]=a;if(typeof o=="string"){if(o.includes(i)){const s=o.substring(o.indexOf(".")+1);s in t?this.vizDetails.multiIndex&&s in this.vizDetails.multiIndex?e[n]=[t[s].values,t[this.vizDetails.multiIndex[s]].values]:e[n]=t[s].values:v.commit("error",`Column "${s}" not in ${Object.keys(t)}`)}}else Array.isArray(o)?typeof o[0]=="object"&&o.forEach(s=>this.recursiveCheckForTemplate(t,s,i)):typeof o=="object"&&this.recursiveCheckForTemplate(t,o,i)})}}});var $=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"mycomponent",class:{"is-thumbnail":t.thumbnail}},[i("VuePlotly",{staticClass:"myplot",attrs:{data:t.traces,layout:t.layout,options:t.options,id:t.id}})],1)},M=[];const d={};var P=_(k,$,M,!1,F,"9f4b194c",null,null);function F(t){for(let e in d)this[e]=d[e]}var R=function(){return P.exports}(),A=x({name:"PlotlyDiagramPanel",components:{PlotlyDiagram:R},data:()=>({resizeEvent:{}}),props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},config:{type:Object,required:!0},cardId:String},mounted(){this.$emit("isLoaded"),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions})},methods:{changeDimensions(t){this.resizeEvent=t}}}),I=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("plotly-diagram",{staticClass:"plotly-panel",attrs:{root:t.fileSystemConfig.slug,subfolder:t.subfolder,config:t.config,thumbnail:!1,resize:t.resizeEvent}})},L=[];const D={};var H=_(A,I,L,!1,V,"4d016750",null,null);function V(t){for(let e in D)this[e]=D[e]}var T=function(){return H.exports}();export{T as default};
//# sourceMappingURL=plotly.ebf80527.js.map
