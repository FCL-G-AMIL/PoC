import{r as T,h as p,g as f,R as b,M as z,d as M,S as d,n as A}from"./index.1d7144b8.js";import{T as I,G as R}from"./TimeSlider.f59ec47d.js";import{b as k}from"./index.d10190c4.js";import{c as x}from"./index.7080a99e.js";import{u as F}from"./util.5fe75924.js";import{C as _}from"./CollapsiblePanel.c7402232.js";import{D as $}from"./DrawingTool.dcd0790f.js";import{H as N}from"./HTTPFileSystem.33aea9ff.js";import{L as O}from"./LegendBox.9918cd96.js";import{L as P}from"./LegendStore.64d2f56a.js";import{D as j,S as W}from"./deckgl.8395df4c.js";import"./layer.0cd20467.js";import{I as Y,W as V}from"./moving-icons-vehicles-layer.dcedca1c.js";import{D as B}from"./data-filter-extension.4c0d9778.js";import{S as H}from"./text-layer.c8c59efd.js";import{Z as G}from"./ZoomButtons.6b3cc4d8.js";import{D as q}from"./DashboardDataManager.6cb84912.js";import"./path-layer.4a6bc071.js";import"./extends.946277fc.js";import"./index.84f8ccb6.js";import"./icon-manager.44d6d2bd.js";import"./layer-extension.7ccbe2ef.js";import"./RoadNetworkLoader.worker.655695af.js";import"./index.5877f313.js";const X="/",U={marker:{x:0,y:0,width:128,height:128,mask:!0},info:{x:128,y:0,width:128,height:128,mask:!0},vehicle:{x:128,y:128,width:128,height:128,mask:!0},diamond:{x:0,y:128,width:128,height:128,mask:!1}},Z=new B({filterSize:1}),J={pitch:0,zoom:8,bearing:0,longitude:14,latitude:52};function K({viewId:t=0,eventLayers:e=[],network:i={},linkIdLookup:n={},timeFilter:a=[],dark:h=!1,colors:m=[[1,0,0],[.25,.25,1]],breakpoints:l=[0],radius:c=5,mapIsIndependent:r=!1,simulationTime:s=2e4}){const[g,u]=T.exports.useState(J);p[t]=()=>{u(f.state.viewState)};function w(o){!o.latitude||(o.center||(o.center=[0,0]),o.center[0]=o.longitude,o.center[1]=o.latitude,u(o),r||f.commit("setMapCamera",o))}function S(o){return o.index<0?null:"hi"}const D=e.map((o,y)=>{const v=o.times[0]>a[1]||o.times[o.times.length-1]<a[0];return new H({data:{length:o.times.length,attributes:{getFilterValue:{value:o.times,size:1},getPosition:{value:o.positions,size:2}}},autoHighlight:!0,breakpoints:l,colors:m,extensions:[Z],id:"hello"+y,filled:!0,filterRange:a.length?a:null,getRadius:20,getFillColor:[240,128,10],highlightColor:[255,0,224],opacity:1,parameters:{depthTest:!1},pickable:!0,radiusScale:1,stroked:!1,updateTriggers:{getPosition:e,getFilterValue:a},visible:!v})}),L=e.map((o,y)=>{const v=o.vehicles.t0[0]>a[1]||o.vehicles.t1[o.vehicles.t1.length-1]<a[0];return new Y({data:{length:o.vehicles.t0.length,attributes:{getTimeStart:{value:o.vehicles.t0,size:1},getTimeEnd:{value:o.vehicles.t1,size:1},getPathStart:{value:o.vehicles.locO,size:2},getPathEnd:{value:o.vehicles.locD,size:2}}},id:"vehicles"+y,getColor:[64,96,255],iconMoving:"vehicle",iconStill:"diamond",getSize:20,opacity:1,currentTime:s,shadowEnabled:!0,iconAtlas:X+"/images/icon-atlas.png",iconMapping:U,sizeScale:1,billboard:!1,pickable:!0,depthTest:!0,autoHighlight:!1,highlightColor:[255,0,255],parameters:{depthTest:!1},visible:!v})}),E=[...D,...L];return b.createElement(j,{layers:E,controller:!0,useDevicePixels:!0,viewState:g,onViewStateChange:o=>w(o.viewState),pickingRadius:4,onClick:S,getTooltip:S},b.createElement(W,{mapStyle:f.getters.mapStyle,preventStyleDiffing:!0,mapboxApiAccessToken:z}))}const Q={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count",promptCRS:`Enter the coordinate reference system, e.g. EPSG:25832

These coordinates are not in long/lat format. To fix this permanently, convert them to long/lat or add "# EPSG:xxxx" to your CSV header`},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D H\xF6he",showDetails:"Details anzeigen",selection:"Ausgew\xE4hlt",areas:"Orte",count:"Anzahl"}}},tt=M({name:"EventViewerPlugin",i18n:Q,components:{CollapsiblePanel:_,DrawingTool:$,EventMap:K,LegendBox:O,TimeSlider:I,ZoomButtons:G},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data:()=>{const t=["bathymetry","electric","inferno","jet","magma","par","viridis"];return{myDataManager:null,network:{source:new Float32Array,dest:new Float32Array,linkIds:[]},linkIdLookup:{},guiConfig:{buckets:7,exponent:4,radius:5,"clip max":100,"color ramp":"viridis",flip:!1,colorRamps:t},viewId:"xyt-id-"+Math.floor(1e12*Math.random()),configId:"gui-config-"+Math.floor(1e12*Math.random()),timeLabels:[0,1],startTime:0,isAnimating:!1,timeFilter:[0,3599],colors:[[128,128,128],[128,128,128]],breakpoints:[0],range:[1/0,-1/0],timeRange:[1/0,-1/0],legendStore:null,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",radius:250,maxHeight:0,center:null,zoom:9},YAMLrequirementsXY:{file:""},columnLookup:[],gzipWorker:null,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",center:null,zoom:9},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},eventLayers:[],isLoaded:!1,animator:null,guiController:null,resizer:null,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",ANIMATE_SPEED:.25,animationElapsedTime:0,animationClockTime:0}},computed:{fileApi(){return new N(this.fileSystem,f)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]},urlThumbnail(){return this.thumbnailUrl}},watch:{"$store.state.viewState"(){p[this.viewId]&&p[this.viewId]()}},methods:{handleTimeSliderValues(t){this.animationElapsedTime=t[0],this.timeFilter=t,this.timeLabels=[this.convertSecondsToClockTimeMinutes(t[0]),this.convertSecondsToClockTimeMinutes(t[1])]},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`id-${this.viewId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`${this.viewId}`),e=t==null?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const i=t.clientWidth>640?"280px":"36px";e.style.right=i}},setupGui(){this.guiController=new R({title:"Color Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const t=this.guiController;t.add(this.guiConfig,"buckets",2,19,1).onChange(this.setColors),t.add(this.guiConfig,"exponent",1,10,1).onChange(this.setColors),t.add(this.guiConfig,"clip max",0,100,1).onChange(this.setColors),t.add(this.guiConfig,"radius",1,20,1),t.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(this.setColors),t.add(this.guiConfig,"flip").onChange(this.setColors)},async solveProjection(){if(!this.thumbnail){console.log("WHAT PROJECTION:");try{const t=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=k.parse(t)}catch(t){console.error(t)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},this.config);return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.setConfigForRawCSV()},setConfigForRawCSV(){let t="EPSG:4326";this.vizDetails={title:"EVENTS: "+this.myState.yamlConfig,description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:t,center:this.vizDetails.center,zoom:this.vizDetails.zoom},this.$emit("title",this.vizDetails.title||this.vizDetails.file)},async loadStandaloneYAMLConfig(){if(!!this.fileApi)try{const t=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,e=await this.fileApi.getFileText(t);this.standaloneYAMLconfig=Object.assign({},k.parse(e)),this.validateYAML(),this.setVizDetails()}catch{console.log("failed"),this.$store.commit("setStatus",{type:d.ERROR,msg:"File not found",desc:`Could not find: ${this.myState.subfolder}/${this.myState.yamlConfig}`})}},validateYAML(){const t=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let e;t?(console.log("has yaml"),e=this.standaloneYAMLconfig):(console.log("no yaml"),e=this.config);for(const i in this.YAMLrequirementsXY)i in e||this.$store.commit("setStatus",{type:d.ERROR,msg:`YAML file missing required key: ${i}`,desc:"Check this.YAMLrequirementsXY for required keys"});e.radius==0&&this.$store.commit("setStatus",{type:d.WARNING,msg:"Radius set to zero",desc:"Radius can not be zero, preset value used instead. "}),(e.zoom<5||e.zoom>20)&&this.$store.commit("setStatus",{type:d.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const t=this.vizDetails.title?this.vizDetails.title:"EVENTS: "+this.vizDetails.file;this.$emit("title",t)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),i=F.arrayBufferToBase64(e);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(t){console.error(t)}},async streamEventFile(t){this.myState.statusMessage="Loading file...";let e=0;this.range=[1/0,-1/0],this.timeRange=[1/0,-1/0],this.animationElapsedTime=0,this.timeFilter=[0,59],this.gzipWorker&&this.gzipWorker.terminate(),this.eventLayers=[],this.gzipWorker=new V;const i=Intl.NumberFormat();this.gzipWorker.onmessage=async n=>{const a=n.data;if(a.status)this.myState.statusMessage=a.status;else if(a.error)this.myState.statusMessage=a.error,this.$store.commit("setStatus",{type:d.ERROR,msg:"XYT Loading Error",desc:`Error loading: ${this.myState.subfolder}/${this.vizDetails.file}`});else if(a.finished)this.finishedLoadingData(e,a);else{const h=a.events;console.log(h.length),e+=h.length,this.myState.statusMessage="Loading "+i.format(e)+" events",this.timeRange=[Math.min(this.timeRange[0],h[0].time),Math.max(this.timeRange[1],h[h.length-1].time)],this.timeRange=[Math.min(this.timeRange[0],a.vehicleTrips[0].t0),Math.max(this.timeRange[1],a.vehicleTrips[a.vehicleTrips.length-1].t1)];const m=h.map(s=>({time:s.time,link:s.link})),l=new Float32Array(2*m.length).fill(NaN);for(let s=0;s<m.length;s++){const g=2*this.linkIdLookup[m[s].link];l[s*2]=this.network.source[g],l[s*2+1]=this.network.source[g+1]}const c=a.vehicleTrips.length,r={locO:new Float32Array(2*c).fill(NaN),locD:new Float32Array(2*c).fill(NaN),t0:new Float32Array(c).fill(NaN),t1:new Float32Array(c).fill(NaN)};for(let s=0;s<c;s++){const g=a.vehicleTrips[s],u=2*this.linkIdLookup[g.link];r.locO[s*2+0]=this.network.source[0+u],r.locO[s*2+1]=this.network.source[1+u],r.locD[s*2+0]=this.network.dest[0+u],r.locD[s*2+1]=this.network.dest[1+u],s==0?(r.locO[s*2+0]=.5*(r.locO[s*2+0]+r.locD[s*2+0]),r.locO[s*2+1]=.5*(r.locO[s*2+1]+r.locD[s*2+1])):s==c-1&&(r.locD[s*2+0]=.5*(r.locO[s*2+0]+r.locD[s*2+0]),r.locD[s*2+1]=.5*(r.locO[s*2+1]+r.locD[s*2+1])),r.t0[s]=g.t0,r.t1[s]=g.t1}this.eventLayers.push({events:h.slice(1,2),positions:l,vehicles:r,times:a.times})}},this.gzipWorker.postMessage({filePath:t,fileSystem:this.fileSystem,projection:this.vizDetails.projection})},setFirstZoom(t,e){const i=.5*(t[0]+t[e*2-2]),n=.5*(t[1]+t[e*2-1]);Number.isFinite(i)&&Number.isFinite(n)&&f.commit("setMapCamera",Object.assign({},f.state.viewState,{longitude:i,latitude:n,zoom:10}))},finishedLoadingData(t,e){this.isLoaded=!0,this.range=e.range,this.myState.statusMessage="",this.timeFilter=[this.timeRange[0],this.timeRange[0]+59],this.gzipWorker&&this.gzipWorker.terminate(),this.setColors(),this.moveLogo(),console.log("ALL DONE",{totalRows:t,data:e.range,time:this.timeRange,layers:this.eventLayers.length})},toggleAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.animationElapsedTime=this.timeFilter[0]-this.timeRange[0],this.startTime=Date.now()-this.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},setColors(){const t=this.guiConfig.exponent;let e=x({colormap:this.guiConfig["color ramp"],nshades:256,format:"rba",alpha:1}).map(l=>[l[0],l[1],l[2]]);this.guiConfig.flip&&(e=e.reverse());const i=256/(this.guiConfig.buckets-1),n=[];for(let l=0;l<this.guiConfig.buckets-1;l++)n.push(e[Math.round(i*l)]);n.push(e[255]);const h=Math.pow(this.range[1],1/t)*this.guiConfig["clip max"]/100,m=[];for(let l=1;l<this.guiConfig.buckets;l++){const c=h*l/this.guiConfig.buckets,r=Math.pow(c,t);m.push(r)}this.isLoaded&&this.setLegend(n,m),this.colors=n,this.breakpoints=m},setLegend(t,e){this.range[1]-this.range[0]!==0&&(this.legendStore=new P,this.legendStore.setLegendSection({section:"Legend",column:"Legend",values:t.map((i,n)=>{const a=e[n==0?n:n-1];let h=""+Math.round(1e6*a)/1e6;return n==0&&(h="< "+h),n==t.length-1&&(h="> "+h),{label:h,value:i}})}))},async loadNetwork(){if(!this.myDataManager)throw Error("event viewer: no datamanager");let t=this.vizDetails.file.replace("events.xml","network.xml");const e=await this.myDataManager.getRoadNetwork(t,this.myState.subfolder,Object.assign({projection:"25833"},this.vizDetails)),i={};let n=0;for(const a of e.linkIds)i[`${a}`]=n,n++;return{network:e,linkIdLookup:i}},async loadFiles(){const{network:t,linkIdLookup:e}=await this.loadNetwork();this.network=t,this.linkIdLookup=e;let i=[];if(!this.fileApi)return{dataArray:i};try{let n=`${this.myState.subfolder}/${this.vizDetails.file}`;await this.streamEventFile(n)}catch(n){console.error(n),this.myState.statusMessage=""+n,this.$store.commit("setStatus",{type:d.ERROR,msg:"Loading/Parsing Error",desc:"Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}"})}},animate(){if(!this.isAnimating)return;this.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.startTime),this.animationClockTime=this.animationElapsedTime+this.timeRange[0],this.animationClockTime>this.timeRange[1]&&(this.startTime=Date.now(),this.animationElapsedTime=0);const t=this.timeFilter[1]-this.timeFilter[0];this.timeFilter=[this.animationClockTime,this.animationClockTime+t],this.animator=window.requestAnimationFrame(this.animate)},convertSecondsToClockTimeMinutes(t){const e=Math.floor(t/3600),i=Math.floor((t-e*3600)/60),n=t-e*3600-i*60,a={h:`${e}`,m:`${i}`.padStart(2,"0"),s:`${n}`.padStart(2,"0")};return`${a.h}:${a.m}`}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,this.myDataManager=this.datamanager||new q(this.root,this.subfolder),await this.getVizDetails(),await this.buildThumbnail(),!this.thumbnail&&(this.setupLogoMover(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.isLoaded||await this.loadFiles())},beforeDestroy(){p[this.viewId]=void 0,delete p[this.viewId];try{this.gzipWorker&&(this.gzipWorker.postMessage({terminate:!0}),this.gzipWorker.terminate()),this.guiController&&this.guiController.destroy()}catch(t){console.warn(t)}this.animator&&window.cancelAnimationFrame(this.animator),this.$store.commit("setFullScreen",!1)}});var et=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"viz-plugin",attrs:{oncontextmenu:"return false",id:`id-${t.viewId}`}},[!t.thumbnail&&t.isLoaded?i("event-map",{staticClass:"map-layer",attrs:{viewId:t.viewId,eventLayers:t.eventLayers,network:t.network,linkIdLookup:t.linkIdLookup,timeFilter:t.timeFilter,dark:this.$store.state.isDarkMode,colors:this.colors,breakpoints:this.breakpoints,radius:this.guiConfig.radius,mapIsIndependent:!1,simulationTime:t.timeFilter[1]}}):t._e(),t.thumbnail?t._e():i("zoom-buttons",{attrs:{corner:"bottom"}}),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),i("div",{staticClass:"bottom-right"},[t.legendStore?i("div",{staticClass:"legend-area"},[i("legend-box",{attrs:{legendStore:t.legendStore}})],1):t._e()]),t.isLoaded?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,activeTimeExtent:t.timeFilter,labels:t.timeLabels,isAnimating:t.isAnimating},on:{timeExtent:t.handleTimeSliderValues,toggleAnimation:t.toggleAnimation,drag:function(n){t.isAnimating=!1}}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e()],1)},it=[];const C={};var st=A(tt,et,it,!1,at,"74f7b665",null,null);function at(t){for(let e in C)this[e]=C[e]}var Mt=function(){return st.exports}();export{Mt as default};
//# sourceMappingURL=EventViewer.c97200e9.js.map
