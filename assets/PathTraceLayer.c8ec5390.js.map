{"version":3,"file":"PathTraceLayer.c8ec5390.js","sources":["../../src/components/PlaybackControls.vue","../../src/components/PlaybackControls.vue?vue&type=template&lang.js","../../node_modules/@deck.gl/core/dist/esm/effects/lighting/point-light.js","../../src/layers/moving-icons/moving-icons-layer.ts","../../src/layers/PathTraceLayer.ts"],"sourcesContent":["<template lang=\"pug\">\r\n.slider-thingy\r\n  b-slider.slider(\r\n    v-model=\"sliderValue\"\r\n    v-bind=\"sliderOptions\"\r\n    size=\"is-large\"\r\n    @dragging=\"dragging\"\r\n    @dragstart=\"dragStart\"\r\n    @dragend=\"dragEnd\")\r\n\r\n  .buttons\r\n    .playpause(@click='toggleSimulation')\r\n      i.button-icon.fa.fa-1x.fa-pause(v-if=\"isRunning\")\r\n      i.button-icon.fa.fa-1x.fa-play(v-else)\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport * as timeConvert from 'convert-seconds'\r\n\r\nexport default defineComponent({\r\n  name: 'PlaybackControls',\r\n  props: {\r\n    isRunning: { type: Boolean, required: true },\r\n    timeStart: { type: Number, required: true },\r\n    timeEnd: { type: Number, required: true },\r\n    currentTime: { type: Number, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      pauseWhileDragging: false,\r\n      sliderValue: 0,\r\n      sliderOptions: {\r\n        min: 0,\r\n        max: 1000000,\r\n        clickable: false,\r\n        duration: 0,\r\n        lazy: true,\r\n        tooltip: true,\r\n        'tooltip-placement': 'top',\r\n      } as any,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.sliderOptions['custom-formatter'] = (v: number) => {\r\n      return this.convertSecondsToClockTimeMinutes(v)\r\n    }\r\n    window.addEventListener('keyup', this.onKeyPressed)\r\n  },\r\n\r\n  beforeDestroy() {\r\n    window.removeEventListener('keyup', this.onKeyPressed)\r\n  },\r\n  watch: {\r\n    currentTime() {\r\n      this.sliderValue =\r\n        (1000000.0 * (this.currentTime - this.timeStart)) / (this.timeEnd - this.timeStart)\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggleSimulation() {\r\n      this.$emit('click')\r\n    },\r\n\r\n    convertSecondsToClockTimeMinutes(index: number) {\r\n      const seconds = this.getSecondsFromSlider(index)\r\n\r\n      try {\r\n        const hms = timeConvert(seconds)\r\n        const minutes = ('00' + hms.minutes).slice(-2)\r\n        return `${hms.hours}:${minutes}`\r\n      } catch (e) {\r\n        return '00:00'\r\n      }\r\n    },\r\n\r\n    dragStart() {\r\n      if (this.isRunning) {\r\n        this.pauseWhileDragging = true\r\n        this.$emit('click')\r\n      }\r\n    },\r\n\r\n    dragEnd() {\r\n      if (this.pauseWhileDragging) this.$emit('click')\r\n      this.pauseWhileDragging = false\r\n    },\r\n\r\n    dragging(value: number) {\r\n      this.$emit('time', this.getSecondsFromSlider(value))\r\n    },\r\n\r\n    onKeyPressed(ev: KeyboardEvent) {\r\n      if (ev.code === 'Space') this.toggleSimulation()\r\n    },\r\n\r\n    getSecondsFromSlider(value: number) {\r\n      let seconds = ((this.timeEnd - this.timeStart) * value) / 1000000.0\r\n      if (seconds === this.timeEnd) seconds = this.timeEnd - 1\r\n      return seconds\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n.slider-thingy {\r\n  display: flex;\r\n  flex-direction: row;\r\n  z-index: 1;\r\n}\r\n\r\n.slider {\r\n  margin: auto 0;\r\n  flex: 1;\r\n  font-weight: bold;\r\n}\r\n\r\n.buttons {\r\n  margin: 0 0 0 2rem;\r\n}\r\n\r\n.playpause {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  color: white;\r\n  background-color: $themeColor;\r\n  display: flex;\r\n  text-align: center;\r\n  // box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n}\r\n\r\n.playpause:hover {\r\n  background-color: #39a8f1;\r\n  border: 2px solid white;\r\n}\r\n\r\n.button-icon {\r\n  margin: auto auto;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n  .slider-thingy {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .slider {\r\n    flex: 1;\r\n    margin: auto 0rem;\r\n  }\r\n\r\n  .buttons {\r\n    margin: 0.25rem 0 0 2rem;\r\n  }\r\n}\r\n</style>\r\n","\r\n.slider-thingy\r\n  b-slider.slider(\r\n    v-model=\"sliderValue\"\r\n    v-bind=\"sliderOptions\"\r\n    size=\"is-large\"\r\n    @dragging=\"dragging\"\r\n    @dragstart=\"dragStart\"\r\n    @dragend=\"dragEnd\")\r\n\r\n  .buttons\r\n    .playpause(@click='toggleSimulation')\r\n      i.button-icon.fa.fa-1x.fa-pause(v-if=\"isRunning\")\r\n      i.button-icon.fa.fa-1x.fa-play(v-else)\r\n\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib/constants';\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nlet idCount = 0;\nexport class PointLight {\n  constructor(props = {}) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"color\", void 0);\n\n    _defineProperty(this, \"intensity\", void 0);\n\n    _defineProperty(this, \"type\", 'point');\n\n    _defineProperty(this, \"position\", void 0);\n\n    _defineProperty(this, \"attenuation\", void 0);\n\n    _defineProperty(this, \"projectedLight\", void 0);\n\n    const {\n      color = DEFAULT_LIGHT_COLOR\n    } = props;\n    const {\n      intensity = DEFAULT_LIGHT_INTENSITY\n    } = props;\n    const {\n      position = DEFAULT_LIGHT_POSITION\n    } = props;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = { ...this\n    };\n  }\n\n  getProjectedLight({\n    layer\n  }) {\n    const {\n      projectedLight\n    } = this;\n    const viewport = layer.context.viewport;\n    const {\n      coordinateSystem,\n      coordinateOrigin\n    } = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n\n}\n\nfunction getAttenuation(props) {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n\n  return DEFAULT_ATTENUATION;\n}\n//# sourceMappingURL=point-light.js.map","// BC 2021-04-30: this file forked from https://github.com/visgl/deck.gl\r\n//\r\n// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport { Layer, project32, picking, log } from '@deck.gl/core'\r\nimport GL from '@luma.gl/constants'\r\nimport { Model, Geometry } from '@luma.gl/core'\r\n\r\nimport vertShader from './icon-layer.glsl.vert?raw'\r\nimport fragShader from './icon-layer.glsl.frag?raw'\r\n\r\nimport IconManager from './icon-manager'\r\n\r\nconst DEFAULT_COLOR = [0, 0, 0, 255]\r\n\r\nconst defaultProps = {\r\n  iconAtlas: { type: 'image', value: null, async: true },\r\n  iconMapping: { type: 'object', value: {}, async: true },\r\n  sizeScale: { type: 'number', value: 1, min: 0 },\r\n  billboard: false,\r\n  sizeUnits: 'pixels',\r\n  sizeMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\r\n  sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\r\n  alphaCutoff: { type: 'number', value: 0.05, min: 0, max: 1 },\r\n  iconStill: { type: 'object', value: null },\r\n\r\n  getIcon: { type: 'accessor', value: (x: any) => x.icon },\r\n  getColor: { type: 'accessor', value: DEFAULT_COLOR },\r\n  getSize: { type: 'accessor', value: 1 },\r\n  getAngle: { type: 'accessor', value: 0 },\r\n  getPixelOffset: { type: 'accessor', value: [0, 0] },\r\n\r\n  getPathStart: { type: 'accessor', value: null },\r\n  getPathEnd: { type: 'accessor', value: null },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  currentTime: { type: 'number', value: 0 },\r\n\r\n  pickable: { type: 'boolean', value: true },\r\n  onIconError: { type: 'function', value: null, compare: false, optional: true },\r\n}\r\n\r\nexport default class IconLayer extends Layer {\r\n  getShaders() {\r\n    return super.getShaders({ vs: vertShader, fs: fragShader, modules: [project32, picking] })\r\n  }\r\n\r\n  initializeState() {\r\n    this.state = {\r\n      iconManager: new IconManager(this.context.gl, {\r\n        onUpdate: this._onUpdate.bind(this),\r\n        onError: this._onError.bind(this) as any,\r\n      }),\r\n    }\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n\r\n    /* eslint-disable max-len */\r\n    attributeManager.addInstanced({\r\n      instanceTimestamps: {\r\n        size: 1,\r\n        accessor: 'getTimeStart',\r\n      },\r\n      instanceTimestampsNext: {\r\n        size: 1,\r\n        accessor: 'getTimeEnd',\r\n      },\r\n      instanceStartPositions: {\r\n        size: 2,\r\n        accessor: 'getPathStart',\r\n      },\r\n      instanceEndPositions: {\r\n        size: 2,\r\n        accessor: 'getPathEnd',\r\n      },\r\n      instanceSizes: {\r\n        size: 1,\r\n        transition: true,\r\n        accessor: 'getSize',\r\n        defaultValue: 1,\r\n      },\r\n      instanceOffsets: { size: 2, accessor: 'getIcon', transform: this.getInstanceOffset },\r\n      instanceIconFrames: { size: 4, accessor: 'getIcon', transform: this.getInstanceIconFrame },\r\n      instanceColorModes: {\r\n        size: 1,\r\n        type: GL.UNSIGNED_BYTE,\r\n        accessor: 'getIcon',\r\n        transform: this.getInstanceColorMode,\r\n      },\r\n      instanceColors: {\r\n        size: this.props.colorFormat.length,\r\n        type: GL.UNSIGNED_BYTE,\r\n        normalized: true,\r\n        transition: true,\r\n        accessor: 'getColor',\r\n        defaultValue: DEFAULT_COLOR,\r\n      },\r\n      instanceAngles: {\r\n        size: 1,\r\n        transition: true,\r\n        accessor: 'getAngle',\r\n      },\r\n      instancePixelOffset: {\r\n        size: 2,\r\n        transition: true,\r\n        accessor: 'getPixelOffset',\r\n      },\r\n    })\r\n    /* eslint-enable max-len */\r\n  }\r\n\r\n  /* eslint-disable max-statements, complexity */\r\n  updateState({ oldProps, props, changeFlags }: any) {\r\n    super.updateState({ props, oldProps, changeFlags })\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    const { iconAtlas, iconMapping, data, getIcon } = props\r\n    const { iconManager } = this.state\r\n\r\n    iconManager.setProps({ loadOptions: props.loadOptions })\r\n\r\n    let iconMappingChanged = false\r\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas')\r\n\r\n    // prepacked iconAtlas from user\r\n    if (prePacked) {\r\n      if (oldProps.iconAtlas !== props.iconAtlas) {\r\n        iconManager.setProps({ iconAtlas, autoPacking: false })\r\n      }\r\n\r\n      if (oldProps.iconMapping !== props.iconMapping) {\r\n        iconManager.setProps({ iconMapping })\r\n        iconMappingChanged = true\r\n      }\r\n    } else {\r\n      // otherwise, use autoPacking\r\n      iconManager.setProps({ autoPacking: true })\r\n    }\r\n\r\n    // handle data changed\r\n    if (\r\n      changeFlags.dataChanged ||\r\n      (changeFlags.updateTriggersChanged &&\r\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))\r\n    ) {\r\n      iconManager.setProps({ data, getIcon })\r\n    }\r\n\r\n    if (iconMappingChanged) {\r\n      attributeManager.invalidate('instanceOffsets')\r\n      attributeManager.invalidate('instanceIconFrames')\r\n      attributeManager.invalidate('instanceColorModes')\r\n    }\r\n\r\n    if (changeFlags.extensionsChanged) {\r\n      const { gl } = this.context\r\n      this.state.model?.delete()\r\n      this.state.model = this._getModel(gl)\r\n      attributeManager.invalidateAll()\r\n    }\r\n  }\r\n  /* eslint-enable max-statements, complexity */\r\n\r\n  get isLoaded() {\r\n    return super.isLoaded && this.state.iconManager.isLoaded\r\n  }\r\n\r\n  finalizeState() {\r\n    super.finalizeState()\r\n    // Release resources held by the icon manager\r\n    this.state.iconManager.finalize()\r\n  }\r\n\r\n  draw({ uniforms }: any) {\r\n    const {\r\n      sizeScale,\r\n      sizeMinPixels,\r\n      sizeMaxPixels,\r\n      sizeUnits,\r\n      billboard,\r\n      alphaCutoff,\r\n      currentTime,\r\n      iconStill,\r\n      pickable,\r\n    } = this.props\r\n\r\n    const { iconManager } = this.state\r\n    const { viewport } = this.context\r\n\r\n    const iconsTexture = iconManager.getTexture()\r\n    if (iconsTexture) {\r\n      this.state.model\r\n        .setUniforms(uniforms)\r\n        .setUniforms({\r\n          iconsTexture,\r\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\r\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\r\n          sizeMinPixels,\r\n          sizeMaxPixels,\r\n          billboard,\r\n          alphaCutoff,\r\n          currentTime,\r\n          pickable,\r\n          iconStillOffsets: this.getInstanceOffset(iconStill),\r\n          iconStillFrames: this.getInstanceIconFrame(iconStill),\r\n        })\r\n        .draw()\r\n    }\r\n  }\r\n\r\n  _getModel(gl: any) {\r\n    // The icon-layer vertex shader uses 2d positions\r\n    // specifed via: attribute vec2 positions;\r\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1]\r\n\r\n    return new Model(gl, {\r\n      ...this.getShaders(),\r\n      id: this.props.id,\r\n      geometry: new Geometry({\r\n        drawMode: GL.TRIANGLE_FAN,\r\n        attributes: {\r\n          // The size must be explicitly passed here otherwise luma.gl\r\n          // will default to assuming that positions are 3D (x,y,z)\r\n          positions: {\r\n            size: 2,\r\n            value: new Float32Array(positions),\r\n          },\r\n        },\r\n      }),\r\n      isInstanced: true,\r\n    })\r\n  }\r\n\r\n  _onUpdate() {\r\n    this.setNeedsRedraw()\r\n  }\r\n\r\n  _onError(evt: any) {\r\n    const { onIconError } = this.getCurrentLayer().props\r\n    if (onIconError) {\r\n      onIconError(evt)\r\n    } else {\r\n      log.error(evt.error)()\r\n    }\r\n  }\r\n\r\n  getInstanceOffset(icon: any) {\r\n    const rect = this.state.iconManager.getIconMapping(icon)\r\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0]\r\n  }\r\n\r\n  getInstanceColorMode(icon: any) {\r\n    const mapping = this.state.iconManager.getIconMapping(icon)\r\n    return mapping.mask ? 1 : 0\r\n  }\r\n\r\n  getInstanceIconFrame(icon: any) {\r\n    const rect = this.state.iconManager.getIconMapping(icon)\r\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0]\r\n  }\r\n}\r\n\r\nIconLayer.layerName = 'FlatIconLayer'\r\nIconLayer.defaultProps = defaultProps\r\n","import { LineLayer } from '@deck.gl/layers'\r\n\r\nconst defaultProps = {\r\n  currentTime: { type: 'number', value: 0, min: 0 },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  searchFlag: { type: 'number', value: 0 },\r\n}\r\n\r\nexport default class PathTraceLayer extends LineLayer {\r\n  getShaders() {\r\n    const shaders = super.getShaders()\r\n    shaders.inject = {\r\n      // Timestamp of the vertex\r\n      'vs:#decl': `\\\r\n        attribute float timeStart;\r\n        attribute float timeEnd;\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'vs:#main-start': `\\\r\n        if (searchFlag == 1.0) {\r\n          vTime = 999.0;\r\n        } else if(timeStart > currentTime || timeEnd < currentTime ) {\r\n          vTime = -1.0;\r\n          return;\r\n        } else {\r\n          float nearBeginning = currentTime - timeStart;\r\n          float nearEnd = timeEnd - currentTime;\r\n          vTime = min(nearBeginning, nearEnd);\r\n        }\r\n      `,\r\n      'fs:#decl': `\\\r\n        uniform float currentTime;\r\n        varying float vTime;\r\n        uniform float searchFlag;\r\n      `,\r\n      'fs:#main-start': `\\\r\n        if (searchFlag == 0.0 && vTime == -1.0 ) discard;\r\n      `,\r\n      // fade the traces in and out\r\n      'fs:DECKGL_FILTER_COLOR': `\\\r\n        if (searchFlag == 0.0 && vTime <= 10.0) color.a *= (vTime / 10.0);\r\n      `,\r\n    }\r\n    return shaders\r\n  }\r\n\r\n  initializeState(params: any) {\r\n    super.initializeState(params)\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    attributeManager.addInstanced({\r\n      timeStart: { size: 1, accessor: 'getTimeStart' },\r\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\r\n    })\r\n  }\r\n\r\n  draw(params: any) {\r\n    const { currentTime, searchFlag } = this.props\r\n\r\n    params.uniforms = Object.assign({}, params.uniforms, {\r\n      currentTime,\r\n      searchFlag,\r\n    })\r\n\r\n    super.draw(params)\r\n  }\r\n}\r\n\r\nPathTraceLayer.layerName = 'PathTraceLayer'\r\nPathTraceLayer.defaultProps = defaultProps\r\n"],"names":["__vue2_script","defineComponent","v","index","seconds","hms","timeConvert","minutes","value","ev","render","_vm","_h","_c","$$v","staticRenderFns","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","props","_defineProperty","color","intensity","position","getAttenuation","layer","projectedLight","viewport","coordinateSystem","coordinateOrigin","projectPosition","COORDINATE_SYSTEM","DEFAULT_COLOR","defaultProps","x","IconLayer","Layer","vertShader","fragShader","project32","picking","IconManager","GL","oldProps","changeFlags","attributeManager","iconAtlas","iconMapping","data","getIcon","iconManager","iconMappingChanged","gl","_a","uniforms","sizeScale","sizeMinPixels","sizeMaxPixels","sizeUnits","billboard","alphaCutoff","currentTime","iconStill","pickable","iconsTexture","positions","Model","Geometry","evt","onIconError","log","icon","rect","PathTraceLayer","LineLayer","shaders","params","searchFlag"],"mappings":"yUAqBA,IAAAA,EAAAC,EAAA,CACA,KAAA,mBACA,MAAA,CACA,UAAA,CAAA,KAAA,QAAA,SAAA,EAAA,EACA,UAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,QAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,YAAA,CAAA,KAAA,OAAA,SAAA,EAAA,CACA,EACA,KAAA,KACA,CACA,mBAAA,GACA,YAAA,EACA,cAAA,CACA,IAAA,EACA,IAAA,IACA,UAAA,GACA,SAAA,EACA,KAAA,GACA,QAAA,GACA,oBAAA,KACA,CAAA,GAGA,SAAA,CACA,KAAA,cAAA,oBAAAC,GACA,KAAA,iCAAAA,CAAA,EAEA,OAAA,iBAAA,QAAA,KAAA,YAAA,CACA,EAEA,eAAA,CACA,OAAA,oBAAA,QAAA,KAAA,YAAA,CACA,EACA,MAAA,CACA,aAAA,CACA,KAAA,YACA,KAAA,KAAA,YAAA,KAAA,YAAA,KAAA,QAAA,KAAA,UACA,CACA,EAEA,QAAA,CACA,kBAAA,CACA,KAAA,MAAA,OAAA,CACA,EAEA,iCAAAC,EAAA,CACA,MAAAC,EAAA,KAAA,qBAAAD,CAAA,EAEA,GAAA,CACA,MAAAE,EAAAC,EAAAF,CAAA,EACAG,GAAA,KAAAF,EAAA,SAAA,MAAA,EAAA,EACA,MAAA,GAAAA,EAAA,SAAAE,UAEA,MAAA,OACA,CACA,EAEA,WAAA,CACA,KAAA,YACA,KAAA,mBAAA,GACA,KAAA,MAAA,OAAA,EAEA,EAEA,SAAA,CACA,KAAA,oBAAA,KAAA,MAAA,OAAA,EACA,KAAA,mBAAA,EACA,EAEA,SAAAC,EAAA,CACA,KAAA,MAAA,OAAA,KAAA,qBAAAA,CAAA,CAAA,CACA,EAEA,aAAAC,EAAA,CACAA,EAAA,OAAA,SAAA,KAAA,iBAAA,CACA,EAEA,qBAAAD,EAAA,CACA,IAAAJ,GAAA,KAAA,QAAA,KAAA,WAAAI,EAAA,IACA,OAAAJ,IAAA,KAAA,UAAAA,EAAA,KAAA,QAAA,GACAA,CACA,CACA,CACA,CAAA,ECxGIM,EAAS,UAAY,CACvB,IAAIC,EAAI,KACJC,EAAGD,EAAI,eACPE,EAAGF,EAAI,MAAM,IAAIC,EAErB,OAAOC,EAAG,MAAO,CACf,YAAa,eACd,EAAE,CAACA,EAAG,WAAYF,EAAI,GAAG,CACxB,YAAa,SACb,MAAO,CACL,KAAQ,UACT,EACD,GAAI,CACF,SAAYA,EAAI,SAChB,UAAaA,EAAI,UACjB,QAAWA,EAAI,OAChB,EACD,MAAO,CACL,MAAOA,EAAI,YACX,SAAU,SAAUG,EAAK,CACvBH,EAAI,YAAcG,CACnB,EACD,WAAY,aACb,CACL,EAAK,WAAYH,EAAI,cAAe,EAAK,CAAC,EAAGE,EAAG,MAAO,CACnD,YAAa,SACjB,EAAK,CAACA,EAAG,MAAO,CACZ,YAAa,YACb,GAAI,CACF,MAASF,EAAI,gBACd,CACF,EAAE,CAACA,EAAI,UAAYE,EAAG,IAAK,CAC1B,YAAa,+BACjB,CAAG,EAAIA,EAAG,IAAK,CACX,YAAa,8BACd,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAG,CAAC,CACZ,EACIE,EAAkB,CAAE,sIClCxB,MAAMC,EAAsB,CAAC,IAAK,IAAK,GAAG,EACpCC,EAA0B,EAC1BC,EAAsB,CAAC,EAAG,EAAG,CAAC,EAC9BC,EAAyB,CAAC,EAAK,EAAK,CAAG,EAC7C,IAAIC,EAAU,EACP,MAAMC,EAAW,CACtB,YAAYC,EAAQ,GAAI,CACtBC,EAAgB,KAAM,KAAM,MAAM,EAElCA,EAAgB,KAAM,QAAS,MAAM,EAErCA,EAAgB,KAAM,YAAa,MAAM,EAEzCA,EAAgB,KAAM,OAAQ,OAAO,EAErCA,EAAgB,KAAM,WAAY,MAAM,EAExCA,EAAgB,KAAM,cAAe,MAAM,EAE3CA,EAAgB,KAAM,iBAAkB,MAAM,EAE9C,KAAM,CACJ,MAAAC,EAAQR,CACT,EAAGM,EACE,CACJ,UAAAG,EAAYR,CACb,EAAGK,EACE,CACJ,SAAAI,EAAWP,CACZ,EAAGG,EACJ,KAAK,GAAKA,EAAM,IAAM,SAAS,OAAOF,GAAS,EAC/C,KAAK,MAAQI,EACb,KAAK,UAAYC,EACjB,KAAK,KAAO,QACZ,KAAK,SAAWC,EAChB,KAAK,YAAcC,EAAeL,CAAK,EACvC,KAAK,eAAiB,CAAE,GAAG,IAC/B,CACG,CAED,kBAAkB,CAChB,MAAAM,CACJ,EAAK,CACD,KAAM,CACJ,eAAAC,CACD,EAAG,KACEC,EAAWF,EAAM,QAAQ,SACzB,CACJ,iBAAAG,EACA,iBAAAC,CACN,EAAQJ,EAAM,MACJF,EAAWO,EAAgB,KAAK,SAAU,CAC9C,SAAAH,EACA,iBAAAC,EACA,iBAAAC,EACA,qBAAsBF,EAAS,aAAeI,EAAkB,OAASA,EAAkB,UAC3F,qBAAsB,CAAC,EAAG,EAAG,CAAC,CACpC,CAAK,EACD,OAAAL,EAAe,MAAQ,KAAK,MAC5BA,EAAe,UAAY,KAAK,UAChCA,EAAe,SAAWH,EACnBG,CACR,CAEH,CAEA,SAASF,EAAeL,EAAO,CAC7B,OAAIA,EAAM,YACDA,EAAM,YAGX,cAAeA,EACV,CAAC,EAAG,EAAGA,EAAM,WAAa,CAAC,EAG7BJ,CACT,CChDA,MAAMiB,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAG,EAE7BC,EAAe,CACnB,UAAW,CAAE,KAAM,QAAS,MAAO,KAAM,MAAO,EAAK,EACrD,YAAa,CAAE,KAAM,SAAU,MAAO,CAAC,EAAG,MAAO,EAAK,EACtD,UAAW,CAAE,KAAM,SAAU,MAAO,EAAG,IAAK,CAAE,EAC9C,UAAW,GACX,UAAW,SACX,cAAe,CAAE,KAAM,SAAU,IAAK,EAAG,MAAO,CAAE,EAClD,cAAe,CAAE,KAAM,SAAU,IAAK,EAAG,MAAO,OAAO,gBAAiB,EACxE,YAAa,CAAE,KAAM,SAAU,MAAO,IAAM,IAAK,EAAG,IAAK,CAAE,EAC3D,UAAW,CAAE,KAAM,SAAU,MAAO,IAAK,EAEzC,QAAS,CAAE,KAAM,WAAY,MAAQC,GAAWA,EAAE,IAAK,EACvD,SAAU,CAAE,KAAM,WAAY,MAAOF,CAAc,EACnD,QAAS,CAAE,KAAM,WAAY,MAAO,CAAE,EACtC,SAAU,CAAE,KAAM,WAAY,MAAO,CAAE,EACvC,eAAgB,CAAE,KAAM,WAAY,MAAO,CAAC,EAAG,CAAC,CAAE,EAElD,aAAc,CAAE,KAAM,WAAY,MAAO,IAAK,EAC9C,WAAY,CAAE,KAAM,WAAY,MAAO,IAAK,EAC5C,aAAc,CAAE,KAAM,WAAY,MAAO,IAAK,EAC9C,WAAY,CAAE,KAAM,WAAY,MAAO,IAAK,EAC5C,YAAa,CAAE,KAAM,SAAU,MAAO,CAAE,EAExC,SAAU,CAAE,KAAM,UAAW,MAAO,EAAK,EACzC,YAAa,CAAE,KAAM,WAAY,MAAO,KAAM,QAAS,GAAO,SAAU,EAAK,CAC/E,EAEA,MAAqBG,UAAkBC,CAAM,CAC3C,YAAa,CACX,OAAO,MAAM,WAAW,CAAE,GAAIC,EAAY,GAAIC,EAAY,QAAS,CAACC,EAAWC,CAAO,CAAG,CAAA,CAC3F,CAEA,iBAAkB,CAChB,KAAK,MAAQ,CACX,YAAa,IAAIC,EAAY,KAAK,QAAQ,GAAI,CAC5C,SAAU,KAAK,UAAU,KAAK,IAAI,EAClC,QAAS,KAAK,SAAS,KAAK,IAAI,CAAA,CACjC,CAAA,EAGsB,KAAK,sBAGb,aAAa,CAC5B,mBAAoB,CAClB,KAAM,EACN,SAAU,cACZ,EACA,uBAAwB,CACtB,KAAM,EACN,SAAU,YACZ,EACA,uBAAwB,CACtB,KAAM,EACN,SAAU,cACZ,EACA,qBAAsB,CACpB,KAAM,EACN,SAAU,YACZ,EACA,cAAe,CACb,KAAM,EACN,WAAY,GACZ,SAAU,UACV,aAAc,CAChB,EACA,gBAAiB,CAAE,KAAM,EAAG,SAAU,UAAW,UAAW,KAAK,iBAAkB,EACnF,mBAAoB,CAAE,KAAM,EAAG,SAAU,UAAW,UAAW,KAAK,oBAAqB,EACzF,mBAAoB,CAClB,KAAM,EACN,KAAMC,EAAG,cACT,SAAU,UACV,UAAW,KAAK,oBAClB,EACA,eAAgB,CACd,KAAM,KAAK,MAAM,YAAY,OAC7B,KAAMA,EAAG,cACT,WAAY,GACZ,WAAY,GACZ,SAAU,WACV,aAAcV,CAChB,EACA,eAAgB,CACd,KAAM,EACN,WAAY,GACZ,SAAU,UACZ,EACA,oBAAqB,CACnB,KAAM,EACN,WAAY,GACZ,SAAU,gBACZ,CAAA,CACD,CAEH,CAGA,YAAY,CAAE,SAAAW,EAAU,MAAAxB,EAAO,YAAAyB,GAAoB,OACjD,MAAM,YAAY,CAAE,MAAAzB,EAAO,SAAAwB,EAAU,YAAAC,CAAa,CAAA,EAE5C,MAAAC,EAAmB,KAAK,sBACxB,CAAE,UAAAC,EAAW,YAAAC,EAAa,KAAAC,EAAM,QAAAC,GAAY9B,EAC5C,CAAE,YAAA+B,CAAY,EAAI,KAAK,MAE7BA,EAAY,SAAS,CAAE,YAAa/B,EAAM,WAAa,CAAA,EAEvD,IAAIgC,EAAqB,GAiCzB,GAhCkBL,GAAa,KAAK,cAAc,mBAAmB,WAAW,GAI1EH,EAAS,YAAcxB,EAAM,WAC/B+B,EAAY,SAAS,CAAE,UAAAJ,EAAW,YAAa,EAAO,CAAA,EAGpDH,EAAS,cAAgBxB,EAAM,cACrB+B,EAAA,SAAS,CAAE,YAAAH,CAAA,CAAa,EACfI,EAAA,KAIvBD,EAAY,SAAS,CAAE,YAAa,EAAM,CAAA,GAK1CN,EAAY,aACXA,EAAY,wBACVA,EAAY,sBAAsB,KAAOA,EAAY,sBAAsB,WAE9EM,EAAY,SAAS,CAAE,KAAAF,EAAM,QAAAC,CAAS,CAAA,EAGpCE,IACFN,EAAiB,WAAW,iBAAiB,EAC7CA,EAAiB,WAAW,oBAAoB,EAChDA,EAAiB,WAAW,oBAAoB,GAG9CD,EAAY,kBAAmB,CAC3B,KAAA,CAAE,GAAAQ,CAAG,EAAI,KAAK,SACfC,EAAA,KAAA,MAAM,QAAN,MAAAA,EAAa,SAClB,KAAK,MAAM,MAAQ,KAAK,UAAUD,CAAE,EACpCP,EAAiB,cAAc,CACjC,CACF,CAGA,IAAI,UAAW,CACb,OAAO,MAAM,UAAY,KAAK,MAAM,YAAY,QAClD,CAEA,eAAgB,CACd,MAAM,cAAc,EAEf,KAAA,MAAM,YAAY,UACzB,CAEA,KAAK,CAAE,SAAAS,GAAiB,CAChB,KAAA,CACJ,UAAAC,EACA,cAAAC,EACA,cAAAC,EACA,UAAAC,EACA,UAAAC,EACA,YAAAC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,CAAA,EACE,KAAK,MAEH,CAAE,YAAAb,CAAY,EAAI,KAAK,MACvB,CAAE,SAAAvB,CAAS,EAAI,KAAK,QAEpBqC,EAAed,EAAY,aAC7Bc,GACF,KAAK,MAAM,MACR,YAAYV,CAAQ,EACpB,YAAY,CACX,aAAAU,EACA,gBAAiB,CAACA,EAAa,MAAOA,EAAa,MAAM,EACzD,UAAWT,GAAaG,IAAc,SAAW/B,EAAS,eAAiB,GAC3E,cAAA6B,EACA,cAAAC,EACA,UAAAE,EACA,YAAAC,EACA,YAAAC,EACA,SAAAE,EACA,iBAAkB,KAAK,kBAAkBD,CAAS,EAClD,gBAAiB,KAAK,qBAAqBA,CAAS,CAAA,CACrD,EACA,KAAK,CAEZ,CAEA,UAAUV,EAAS,CAGX,MAAAa,EAAY,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAE,EAEtC,OAAA,IAAIC,EAAMd,EAAI,CACnB,GAAG,KAAK,WAAW,EACnB,GAAI,KAAK,MAAM,GACf,SAAU,IAAIe,EAAS,CACrB,SAAUzB,EAAG,aACb,WAAY,CAGV,UAAW,CACT,KAAM,EACN,MAAO,IAAI,aAAauB,CAAS,CACnC,CACF,CAAA,CACD,EACD,YAAa,EAAA,CACd,CACH,CAEA,WAAY,CACV,KAAK,eAAe,CACtB,CAEA,SAASG,EAAU,CACjB,KAAM,CAAE,YAAAC,CAAgB,EAAA,KAAK,kBAAkB,MAC3CA,EACFA,EAAYD,CAAG,EAEXE,EAAA,MAAMF,EAAI,KAAK,EAAE,CAEzB,CAEA,kBAAkBG,EAAW,CAC3B,MAAMC,EAAO,KAAK,MAAM,YAAY,eAAeD,CAAI,EACvD,MAAO,CAACC,EAAK,MAAQ,EAAIA,EAAK,SAAW,EAAGA,EAAK,OAAS,EAAIA,EAAK,SAAW,CAAC,CACjF,CAEA,qBAAqBD,EAAW,CAEvB,OADS,KAAK,MAAM,YAAY,eAAeA,CAAI,EAC3C,KAAO,EAAI,CAC5B,CAEA,qBAAqBA,EAAW,CAC9B,MAAMC,EAAO,KAAK,MAAM,YAAY,eAAeD,CAAI,EACvD,MAAO,CAACC,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,OAAS,EAAGA,EAAK,QAAU,CAAC,CACrE,CACF,CAEArC,EAAU,UAAY,gBACtBA,EAAU,aAAeF,ECvRzB,MAAMA,EAAe,CACnB,YAAa,CAAE,KAAM,SAAU,MAAO,EAAG,IAAK,CAAE,EAChD,aAAc,CAAE,KAAM,WAAY,MAAO,IAAK,EAC9C,WAAY,CAAE,KAAM,WAAY,MAAO,IAAK,EAC5C,WAAY,CAAE,KAAM,SAAU,MAAO,CAAE,CACzC,EAEA,MAAqBwC,UAAuBC,CAAU,CACpD,YAAa,CACL,MAAAC,EAAU,MAAM,aACtB,OAAAA,EAAQ,OAAS,CAEf,WAAY;AAAA;AAAA;AAAA;AAAA;AAAA,QAOZ,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYlB,WAAY;AAAA;AAAA;AAAA,QAKZ,iBAAkB;AAAA,QAIlB,yBAA0B;AAAA,OAAA,EAIrBA,CACT,CAEA,gBAAgBC,EAAa,CAC3B,MAAM,gBAAgBA,CAAM,EAEH,KAAK,sBACb,aAAa,CAC5B,UAAW,CAAE,KAAM,EAAG,SAAU,cAAe,EAC/C,QAAS,CAAE,KAAM,EAAG,SAAU,YAAa,CAAA,CAC5C,CACH,CAEA,KAAKA,EAAa,CAChB,KAAM,CAAE,YAAAf,EAAa,WAAAgB,GAAe,KAAK,MAEzCD,EAAO,SAAW,OAAO,OAAO,CAAC,EAAGA,EAAO,SAAU,CACnD,YAAAf,EACA,WAAAgB,CAAA,CACD,EAED,MAAM,KAAKD,CAAM,CACnB,CACF,CAEAH,EAAe,UAAY,iBAC3BA,EAAe,aAAexC"}