import{d,n as c,g as l,S as f,m as y,C as g}from"./index.1d7144b8.js";import{r as $}from"./index.028cf17b.js";import{c as _,l as T}from"./turf.es.943b3175.js";import{d as u}from"./index.39efad9c.js";import{n as v}from"./nprogress.e9f925da.js";import{C as D,p as b}from"./Coords.820cd7bc.js";import{r as C}from"./index.a906c0e7.js";import{V as O}from"./vue-slider-component.umd.min.c2de2844.js";import{b as j}from"./index.d10190c4.js";import{f as V}from"./util.5fe75924.js";import{C as z}from"./CollapsiblePanel.c7402232.js";import{Z as E}from"./ZoomButtons.6b3cc4d8.js";import{H as A}from"./HTTPFileSystem.33aea9ff.js";const I={messages:{en:{linewidth:"Line widths:",legend:"Legend:"},de:{linewidth:"Linienbreite:",legend:"Legende:"}}};var R=d({name:"LegendBoxOD",i18n:I,props:{rows:{type:Array,required:!0}}}),W=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{attrs:{id:"legend-container"}},[t("p",{staticClass:"title"},[e._v(e._s(e.$t("legend")))]),e._l(e.rows,function(s){return t("div",{staticClass:"legend-item"},[typeof s=="string"&&s.includes("#")?t("div",{staticClass:"legend-col",style:{"background-color":s}}):e._e(),typeof s=="string"&&!s.includes("#")&&s=="\u2193"?t("div",{staticClass:"legend-element1"},[e._v(e._s(s))]):e._e(),typeof s=="string"&&!s.includes("#")&&s!="\u2193"?t("div",{staticClass:"legend-element2"},[e._v(e._s(s))]):e._e()])})],2)},Y=[];const S={};var B=c(R,W,Y,!1,X,"25f20161",null,null);function X(e){for(let i in S)this[i]=S[i]}var P=function(){return B.exports}(),N=d({name:"LineFilterSlider",props:{initialValue:{type:Number,required:!0}},data:()=>({sliderValue:0,options:{size:"is-small",indicator:!0,min:0,max:100,"tooltip-always":!0,tooltip:!0,data:[0,1,2,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,"Alle"]}}),mounted(){this.options["custom-formatter"]=e=>""+this.options.data[e],this.sliderValue=this.initialValue,this.sliderValue=this.options.data.includes(this.initialValue)?this.options.data.indexOf(this.initialValue):0,this.options.max=this.options.data.length-1},watch:{sliderValue(e){this.$emit("change",this.options.data[e])}}}),G=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("b-slider",e._b({staticClass:"time-slider",attrs:{"tooltip-always":""},model:{value:e.sliderValue,callback:function(s){e.sliderValue=s},expression:"sliderValue"}},"b-slider",e.options,!1),e._l(e.options.data,function(s,o){return t("b-slider-tick",{key:o,attrs:{value:o}})}),1)},q=[];const w={};var H=c(N,G,q,!1,Z,"b6d8f2c4",null,null);function Z(e){for(let i in w)this[i]=w[i]}var K=function(){return H.exports}();const U={messages:{en:{linewidth:"Line widths:",legend:"Legend:",trips:"trips"},de:{linewidth:"Linienbreite:",legend:"Legende:",trips:"Fahrten"}}};var J=d({name:"LineFilterSlider",i18n:U,props:{rows:{type:Array,required:!0}}}),Q=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{attrs:{id:"scale-container"}},[t("p",{staticClass:"title"},[e._v(e._s(e.$t("linewidth")))]),t("div",{staticClass:"scale-element"},[e._v(e._s("|\u2194\uFE0E|"))]),t("div",{staticClass:"scale-scale"},[e._v(e._s(`~ ${this.rows[0]} `+e.$t("trips")))]),t("p")])},ee=[];const F={};var te=c(J,Q,ee,!1,ie,"8348752a",null,null);function ie(e){for(let i in F)this[i]=F[i]}var se=function(){return te.exports}(),oe=d({name:"TimeSliderX",components:{},props:{useRange:Boolean,all:String,stops:{type:Array,required:!0}},data:()=>({sliderValue:0}),computed:{allStops(){return[...this.all?[this.all]:[],...this.stops]},stopLabel(){return Array.isArray(this.sliderValue)?`${this.allStops[this.sliderValue[0]]} : ${this.allStops[this.sliderValue[1]]}`:this.allStops[this.sliderValue]}},watch:{useRange(e){e?this.sliderValue=[1,this.allStops.length-1]:this.sliderValue=this.sliderValue[0]},sliderValue(){const e=Array.isArray(this.sliderValue)?[this.allStops[this.sliderValue[0]],this.allStops[this.sliderValue[1]]]:this.allStops[this.sliderValue];this.$emit("change",e)}},mounted(){},methods:{}}),ae=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"time-slider"},[t("b-slider",{attrs:{min:0,max:e.stops.length,tooltip:!1},model:{value:e.sliderValue,callback:function(s){e.sliderValue=s},expression:"sliderValue"}},e._l(e.allStops,function(s,o){return t("b-slider-tick",{key:s,attrs:{value:o}})}),1),t("p",[t("b",[e._v(e._s(e.stopLabel))])])],1)},re=[];const x={};var ne=c(oe,ae,re,!1,le,"91754016",null,null);function le(e){for(let i in x)this[i]=x[i]}var de=function(){return ne.exports}(),ce=d({name:"ScaleSlider",props:{stops:{type:Array,required:!0},initialValue:{type:Number,required:!0}},data:()=>({sliderValue:1,options:{"tooltip-always":!0,min:0,size:"is-small",max:100,indicator:!0,data:[],"custom-formatter":{}}}),mounted(){this.options["custom-formatter"]=e=>""+this.options.data[e],this.options.max=this.stops.length-1,this.options.data=this.stops,this.sliderValue=this.stops.includes(this.initialValue)?this.stops.indexOf(this.initialValue):0},watch:{sliderValue(){this.sliderChangedEvent()}},methods:{sliderChangedEvent(){this.$emit("change",this.options.data[this.sliderValue])}}}),he=function(){var e=this,i=e.$createElement,t=e._self._c||i;return e.options.data.length?t("b-slider",e._b({staticClass:"time-slider",model:{value:e.sliderValue,callback:function(s){e.sliderValue=s},expression:"sliderValue"}},"b-slider",e.options,!1),e._l(e.options.data,function(s,o){return t("b-slider-tick",{key:o,attrs:{value:o}})}),1):e._e()},pe=[];const L={};var me=c(ce,he,pe,!1,ue,"00beb8d2",null,null);function ue(e){for(let i in L)this[i]=L[i]}var fe=function(){return me.exports}();function ye(){return new Worker("/assets/AggregateDatasetStreamer.worker.3fdca75e.js",{type:"module"})}const ge={messages:{en:{legend:"Legend:",lineWidth:"Line width:",lineWidths:"Line widths",hide:"Hide smaller than",time:"Time of Day",duration:"Duration",circle:"Centroids",showCentroids:"Show centroids",showNumbers:"Show totals",total:"Totals for",origins:"Origins",dest:"Destinations"},de:{}}},m="Alle >>",_e=0,M=[1,3,5,10,25,50,100,150,200,300,400,450,500,1e3,5e3],ve=d({name:"AggregateOD",i18n:ge,components:{CollapsiblePanel:z,LegendBox:P,LineFilterSlider:K,ScaleBox:se,ScaleSlider:fe,TimeSlider:de,ZoomButtons:E,VueSlider:O},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean},data:()=>({globalState:l.state,isFinishedLoading:!1,myState:{subfolder:"",yamlConfig:"",thumbnail:!1},vizDetails:{csvFile:"",shpFile:"",dbfFile:"",projection:"",scaleFactor:1,title:"",description:"",mapIsIndependent:!1},standaloneYAMLconfig:{csvFile:"",shpFile:"",dbfFile:"",projection:"",scaleFactor:1,title:"",description:"",mapIsIndependent:!1},YAMLrequirementsOD:{shpFile:"",dbfFile:"",csvFile:"",projection:"",scaleFactor:1},containerId:`c${Math.floor(1e12*Math.random())}`,mapId:`map-c${Math.floor(1e12*Math.random())}`,centroids:{},centroidSource:{},linkData:{},spiderLinkFeatureCollection:{},zoneData:{},dailyData:{},marginals:{},hoveredStateId:0,rowName:"",colName:"",headers:[],geojson:{},idColumn:"",mapIsIndependent:!1,showTimeRange:!1,showCentroids:!0,showCentroidLabels:!0,isOrigin:!0,selectedCentroid:0,maxZonalTotal:0,loadingText:"Aggregierte Quell-Ziel Muster",mymap:{},project:{},scaleFactor:1,scaleValues:M,currentScale:M[0],currentTimeBin:m,allTimeBinsLabel:m,lineFilter:0,projection:"",hoverId:null,_mapExtentXYXY:null,_maximum:null,bounceTimeSlider:{},bounceScaleSlider:{},bounceLineFilter:{},resizer:null,isMapMoving:!1,isDarkMode:!1,csvWorker:null}),computed:{fileSystem(){const e=this.$store.state.svnProjects.filter(i=>i.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},fileApi(){return new A(this.fileSystem,l)},isMobile(){const e=window,i=document,t=i.documentElement,s=i.getElementsByTagName("body")[0],o=e.innerWidth||t.clientWidth||s.clientWidth;return e.innerHeight||t.clientHeight||s.clientHeight,o<640},legendRows(){return["#00aa66","#880033","\u2193","\u2191"]},scaleRows(){return[Math.min(Math.round((1200*Math.pow(this.currentScale,-1)+20)*Math.sqrt(this.scaleFactor)),1e3*this.scaleFactor)]}},methods:{setupResizer(){this.resizer=new ResizeObserver(()=>{this.mymap&&this.mymap.resize()});const e=document.getElementById(this.containerId);this.resizer.observe(e)},configureSettings(){(this.vizDetails.lineWidths||this.vizDetails.lineWidth)&&(this.currentScale=this.vizDetails.lineWidth||this.vizDetails.lineWidths||1),this.vizDetails.hideSmallerThan&&(this.lineFilter=this.vizDetails.hideSmallerThan)},handleMapMotion(){const e={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.mapIsIndependent||this.$store.commit("setMapCamera",e),this.isMapMoving||(this.isMapMoving=!0)},async getVizDetails(){if(this.config)this.validateYAML(),this.vizDetails=Object.assign({},this.config);else try{const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,i=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=Object.assign({},j.parse(i)),this.validateYAML(),this.setVizDetails()}catch(e){console.error(""+e)}this.$emit("title",this.vizDetails.title),this.scaleFactor=this.vizDetails.scaleFactor,this.projection=this.vizDetails.projection,this.mapIsIndependent=!!this.vizDetails.mapIsIndependent,this.idColumn=this.vizDetails.idColumn?this.vizDetails.idColumn:"id",v.done()},validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let i={};e?i=this.standaloneYAMLconfig:i=this.config;for(const t in this.YAMLrequirementsOD)t in i||this.$store.commit("setStatus",{type:f.ERROR,msg:`${this.yamlConfig}: missing required key: ${t}`,desc:""})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const e=this.vizDetails.title?this.vizDetails.title:"Aggregate OD";this.$emit("title",e)},async findFilenameFromWildcard(e){let i=e.indexOf("/")>-1?e.substring(0,e.lastIndexOf("/")):this.subfolder;const{files:t}=await this.fileApi.getDirectory(i);let s=e.indexOf("/")===-1?e:e.substring(e.lastIndexOf("/")+1);const o=V(t,s);if(o.length===1)return`${i}/${o[0]}`;throw Error("File not found: "+e)},async loadFiles(){try{this.loadingText="Dateien laden...";const e=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.shpFile}`),i=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.dbfFile}`),t=await this.fileApi.getFileBlob(e),s=await C.arraybuffer(t),o=await this.fileApi.getFileBlob(i),a=await C.arraybuffer(o);return{shpFile:s,dbfFile:a}}catch(e){const i=e;let t=i.statusText||""+i;return i.url&&(t+=": "+i.url),console.error(t),this.loadingText=""+e,this.$store.commit("error",t),null}},async setupMap(){try{this.mymap=new y.Map({container:this.mapId,style:l.getters.mapStyle,logoPosition:"top-left"})}catch{console.error("HUH?");return}try{const e=localStorage.getItem(this.$route.fullPath+"-bounds");if(e){const i=JSON.parse(e),t=this.isMobile?0:1,s={top:50*t,bottom:50*t,right:100*t,left:50*t};this.$store.commit("setMapCamera",{longitude:.5*(i[0]+i[2]),latitude:.5*(i[1]+i[3]),zoom:8,pitch:0,bearing:0,jump:!0})}}catch{}if(this.mymap.on("click",this.handleEmptyClick),this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion),this.thumbnail){let e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact");for(const i of e)i.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-group");for(const i of e)i.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const i of e)i.setAttribute("style","display: none")}else{let e=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const i of e)i.setAttribute("style","margin-bottom: 3rem;")}},handleEmptyClick(e){this.mymap.queryRenderedFeatures(e.point).filter(i=>i.source==="centroids"||i.source==="spider-source").length===0&&(this.fadeUnselectedLinks(-1),this.selectedCentroid=0,this.isMobile)},async mapIsReady(){const e=await this.loadFiles();e&&(this.geojson=await this.processShapefile(e),this.geojson&&this.loadCSVData()),v.done()},createSpiderLinks(){this.spiderLinkFeatureCollection={type:"FeatureCollection",features:[]};for(const e of Object.keys(this.linkData)){const i=this.linkData[e];if(!(i.daily<=this.lineFilter))try{const t=this.centroids[i.orig].geometry.coordinates,s=this.centroids[i.dest].geometry.coordinates,o=t[1]-s[1]>0?"#00aa66":"#880033",a=.7,r={id:e,orig:i.orig||0,dest:i.dest||0,daily:i.daily||0,color:o,fade:a};r[m]=i.daily,i.values.forEach((p,n)=>{r[this.headers[n]]=p!=null?p:0});const h={type:"Feature",properties:r,geometry:{type:"LineString",coordinates:[t,s]}};this.spiderLinkFeatureCollection.features.push(h)}catch{}}},updateSpiderLinks(){this.createSpiderLinks(),this.selectedCentroid?this.fadeUnselectedLinks(this.selectedCentroid):this.mymap.getSource("spider-source").setData(this.spiderLinkFeatureCollection)},buildSpiderLinks(){this.mymap.getSource("spider-source")||(this.createSpiderLinks(),this.mymap.addSource("spider-source",{data:this.spiderLinkFeatureCollection,type:"geojson"})),this.mymap.getLayer("spider-layer")&&this.mymap.removeLayer("spider-layer"),this.mymap.addLayer({id:"spider-layer",source:"spider-source",type:"line",paint:{"line-color":["get","color"],"line-width":["*",1/500*this.scaleFactor,["get","daily"]],"line-offset":["*",.5,["get","daily"]],"line-opacity":["get","fade"]},filter:[">",["get",this.currentTimeBin],0]},"centroid-layer"),this.changedScale(this.currentScale);const e=this;this.mymap.on("click","spider-layer",function(i){e.clickedOnSpiderLink(i)}),this.mymap.on("mousemove","spider-layer",function(i){e.mymap.getCanvas().style.cursor=i?"pointer":"grab"}),this.mymap.on("mouseleave","spider-layer",function(){e.mymap.getCanvas().style.cursor="grab"})},clickedOrigins(){this.isOrigin=!0,this.updateCentroidLabels(),this.convertRegionColors(this.geojson),this.mymap.getSource("shpsource").setData(this.geojson)},clickedDestinations(){this.isOrigin=!1,this.updateCentroidLabels(),this.convertRegionColors(this.geojson),this.mymap.getSource("shpsource").setData(this.geojson)},updateCentroidLabels(){const e=this.isOrigin?"{dailyFrom}":"{dailyTo}",i=this.isOrigin?"widthFrom":"widthTo";this.mymap.getLayer("centroid-layer")&&this.mymap.removeLayer("centroid-layer"),this.mymap.getLayer("centroid-label-layer")&&this.mymap.removeLayer("centroid-label-layer"),this.showCentroids&&this.mymap.addLayer({layout:{visibility:this.thumbnail?"none":"visible"},id:"centroid-layer",source:"centroids",type:"circle",paint:{"circle-color":"#ec0","circle-radius":["get",i],"circle-stroke-width":2,"circle-stroke-color":"white"},filter:[">",["get",this.isOrigin?"dailyFrom":"dailyTo"],0]}),this.showCentroidLabels&&this.mymap.addLayer({id:"centroid-label-layer",source:"centroids",type:"symbol",layout:{"text-field":e,"text-size":11},paint:this.showCentroids?{}:{"text-halo-color":"white","text-halo-width":2},filter:[">",["get",this.isOrigin?"dailyFrom":"dailyTo"],0]})},unselectAllCentroids(){this.fadeUnselectedLinks(-1),this.selectedCentroid=0},clickedOnCentroid(e){e.originalEvent.stopPropagating=!0;const t=e.features[0].properties.id;if(t===this.selectedCentroid){this.unselectAllCentroids();return}this.selectedCentroid=t,this.fadeUnselectedLinks(t)},fadeUnselectedLinks(e){const i=this.mymap;for(const t of this.spiderLinkFeatureCollection.features){const s=t.properties.id.split(":");let o=s[0]===String(e)||s[1]===String(e)?.7:_e;e===-1&&(o=.7),t.properties.fade=o}i.getSource("spider-source").setData(this.spiderLinkFeatureCollection)},clickedOnSpiderLink(e){if(e.originalEvent.stopPropagating)return;const i=e.features[0].properties,t=Math.round(1e4*i.daily*this.scaleFactor)/1e4;let s=0;const o=""+i.dest+":"+i.orig;this.linkData[o]&&(s=Math.round(1e4*this.linkData[o].daily*this.scaleFactor)/1e4);const a=t+s;let r=`<h1><b>${a} Bidirectional Trip${a!==1?"s":""}</b></h1>`;r+='<p style="width: max-content">_________________________</p>',r+=`<p style="width: max-content">${t} trip${t!==1?"s":""} // ${s} reverse trip${s!==1?"s":""}</p>`,new y.Popup({closeOnClick:!0}).setLngLat(e.lngLat).setHTML(r).addTo(this.mymap)},convertRegionColors(e){for(const i of e.features){if(!i.properties)continue;const s=(this.isOrigin?i.properties.dailyFrom:i.properties.dailyTo)/this.maxZonalTotal;let o=128+127*(1-s);o||(o=255),i.properties.blue=o}},handleCentroidsForTimeOfDayChange(e){const i={type:"FeatureCollection",features:[]};for(const s of this.geojson.features){const o=_(s);o.properties.id=s.id;const a=this.calculateCentroidValuesForZone(e,s);o.properties.dailyFrom=Math.round(1e4*a.from*this.scaleFactor)/1e4,o.properties.dailyTo=Math.round(1e4*a.to*this.scaleFactor)/1e4;let r=Math.log10(o.properties.dailyFrom);o.properties.widthFrom=6+r*3.5,r=Math.log10(o.properties.dailyTo),o.properties.widthTo=6+r*3.5,s.properties||(s.properties={}),s.properties.dailyFrom=a.from,s.properties.dailyTo=a.to,o.properties.dailyFrom+o.properties.dailyTo>0&&(i.features.push(o),s.properties&&(this.centroids[s.properties[this.idColumn]]=o))}this.centroidSource=i,this.mymap.getSource("centroids").setData(this.centroidSource),this.updateCentroidLabels()},calculateCentroidValuesForZone(e,i){let t=0,s=0;if(e==="Alle >>")return s=i.properties.dailyTo,t=i.properties.dailyFrom,{from:t,to:s};const o=this.marginals.from[i.id],a=this.marginals.to[i.id];if(Array.isArray(e)){let h=this.headers.indexOf(e[0])-1;h<0&&(h=0);const p=this.headers.indexOf(e[1])-1;for(let n=h;n<=p;n++)t+=o?Math.round(o[n]):0,s+=a?Math.round(a[n]):0;return{from:t,to:s}}const r=this.headers.indexOf(e)-1;return t=o?Math.round(o[r]):0,s=a?Math.round(a[r]):0,{from:t,to:s}},buildCentroids(e){const i={type:"FeatureCollection",features:[]};for(const t of e.features){if(!t.id)continue;const s=_(t);s.properties.id=t.id,s.id=t.id;let o=Math.round(this.marginals.rowTotal[t.id]),a=Math.round(this.marginals.colTotal[t.id]);o||(o=0),a||(a=0),s.properties.dailyFrom=o*this.scaleFactor,s.properties.dailyTo=a*this.scaleFactor;let r=Math.log10(s.properties.dailyFrom);s.properties.widthFrom=6+r*3.5,r=Math.log10(s.properties.dailyTo),s.properties.widthTo=6+r*3.5,o&&(this.maxZonalTotal=Math.max(this.maxZonalTotal,o)),a&&(this.maxZonalTotal=Math.max(this.maxZonalTotal,a)),t.properties||(t.properties={}),t.properties.dailyFrom=o,t.properties.dailyTo=a,s.properties.dailyFrom+s.properties.dailyTo>0&&(i.features.push(s),t.properties&&(this.centroids[t.id]=s),this.updateMapExtent(s.geometry.coordinates))}this.centroidSource=i,this.mymap.getSource("centroids")||this.mymap.addSource("centroids",{data:this.centroidSource,type:"geojson"}),this.updateCentroidLabels(),this.mymap.on("click","centroid-layer",t=>{this.clickedOnCentroid(t)}),this.mymap.on("mousemove","centroid-layer",t=>{this.mymap.getCanvas().style.cursor=t?"pointer":"grab"}),this.mymap.on("mouseleave","centroid-layer",()=>{this.mymap.getCanvas().style.cursor="grab"})},setMapExtent(){localStorage.setItem(this.$route.fullPath+"-bounds",JSON.stringify(this._mapExtentXYXY));const e=this.thumbnail?{animate:!1}:{padding:{top:25,bottom:25,right:100,left:100},animate:!1};this.mymap.fitBounds(this._mapExtentXYXY,e)},setupKeyListeners(){window.addEventListener("keyup",e=>{e.keyCode===27&&this.pressedEscape()}),window.addEventListener("keydown",e=>{e.keyCode===38&&this.pressedArrowKey(-1),e.keyCode===40&&this.pressedArrowKey(1)})},processGeojson(){for(const e of this.geojson.features){const i=e.properties;i.dailyFrom!==0||i.dailyTo!==0?e.properties.isVisible=!0:e.properties.isVisible=!1}},async processShapefile(e){this.loadingText="Verkehrsnetz bauarbeiten...";const i=await $(e.shpFile,e.dbfFile);i.features.length>150&&(this.lineFilter=10),this.loadingText="Koordinaten berechnen...";for(const t of i.features){const s=t.properties;if(!this.idColumn&&s&&(this.idColumn=Object.keys(s)[0]),!(this.idColumn in s)){this.$store.commit("error",`Shapefile does not contain ID column "${this.idColumn}"`);return}t.properties&&(t.id=t.properties[this.idColumn]);try{t.geometry.type==="MultiPolygon"?this.convertMultiPolygonCoordinatesToWGS84(t):this.convertPolygonCoordinatesToWGS84(t)}catch(o){console.error("ERR with feature: "+t),console.error(o)}}return i},convertPolygonCoordinatesToWGS84(e){for(const i of e.geometry.coordinates){const t=[];for(const s of i){const o=D.toLngLat(this.projection,s);t.push(o)}i.length=0,i.push(...t)}},origConvertMultiPolygonCoordinatesToWGS84(e){for(const i of e.geometry.coordinates){const t=i[0],s=[];for(const o of t){const a=b(this.projection,"WGS84",o);s.push(a)}i[0]=s}},convertMultiPolygonCoordinatesToWGS84(e){e.geometry.coordinates=this.recurseWGS84(e.geometry.coordinates)},recurseWGS84(e){const i=[];for(let t of e)Array.isArray(t[0])?i.push(this.recurseWGS84(t)):i.push(b(this.projection,"WGS84",t));return i},async getDailyDataSummary(){const e={},i={},t={},s={};for(const o of Object.keys(this.zoneData)){t[o]=Array(this.headers.length-1).fill(0);for(const a of Object.keys(this.zoneData[o])){e[o]||(e[o]=0),i[a]||(i[a]=0),this.dailyData[o][a]&&(e[o]+=this.dailyData[o][a],i[a]+=this.dailyData[o][a]),s[a]||(s[a]=Array(this.headers.length-1).fill(0));for(let r=0;r<this.headers.length-1;r++)this.zoneData[o][a][r]&&(t[o][r]+=this.zoneData[o][a][r],s[a][r]+=this.zoneData[o][a][r])}}return{rowTotal:e,colTotal:i,from:t,to:s}},async loadCSVData(){this.loadingText="Load CSV data...";let e="";try{e=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.csvFile}`)}catch{this.$store.commit("error",`Error loading ${this.myState.subfolder}/${this.vizDetails.csvFile}`);return}this.csvWorker=new ye,this.csvWorker.onmessage=i=>{var s,o;const t=i.data;t.status?this.loadingText=t.status:t.error?((s=this.csvWorker)==null||s.terminate(),this.loadingText=t.error,this.$store.commit("setStatus",{type:f.ERROR,msg:`Aggr.OD: Error loading "${this.myState.subfolder}/${this.vizDetails.csvFile}"`,desc:"Check the path and filename"})):t.finished&&((o=this.csvWorker)==null||o.terminate(),this.finishedLoadingData(t))},this.csvWorker.postMessage({fileSystem:this.fileSystem,filePath:e})},async finishedLoadingData(e){console.log(222,"done"),this.loadingText="Building diagram...",this.isFinishedLoading=!0,await this.$nextTick(),this.rowName=e.rowName,this.colName=e.colName,this.headers=e.headers,this.dailyData=e.dailyZoneData,this.zoneData=e.zoneData,this.linkData=e.dailyLinkData,this.marginals=await this.getDailyDataSummary(),this.buildCentroids(this.geojson),this.convertRegionColors(this.geojson),this.addGeojsonToMap(this.geojson),this.setMapExtent(),this.buildSpiderLinks(),this.setupKeyListeners(),this.loadingText=""},updateMapExtent(e){this._mapExtentXYXY[0]=Math.min(this._mapExtentXYXY[0],e[0]),this._mapExtentXYXY[1]=Math.min(this._mapExtentXYXY[1],e[1]),this._mapExtentXYXY[2]=Math.max(this._mapExtentXYXY[2],e[0]),this._mapExtentXYXY[3]=Math.max(this._mapExtentXYXY[3],e[1])},addGeojsonToMap(e){this.processGeojson(),this.addGeojsonLayers(e),this.addNeighborhoodHoverEffects()},addGeojsonLayers(e){this.mymap.getSource("shpsource")||this.mymap.addSource("shpsource",{data:e,type:"geojson"}),this.mymap.getLayer("shplayer-fill")&&this.mymap.removeLayer("shplayer-fill"),this.mymap.addLayer({id:"shplayer-fill",source:"shpsource",type:"fill",paint:{"fill-color":["rgb",["get","blue"],["get","blue"],255],"fill-opacity":.5}},"water"),this.mymap.getLayer("shplayer-border")&&this.mymap.removeLayer("shplayer-border"),this.mymap.addLayer({id:"shplayer-border",source:"shpsource",type:"line",paint:{"line-color":"#66f","line-opacity":.5,"line-width":["case",["boolean",["feature-state","hover"],!1],3,1]},filter:["==","isVisible",!0]},"centroid-layer")},addNeighborhoodHoverEffects(){const e=this;this.mymap.on("mousemove","shplayer-fill",function(i){const t=e.mymap;i.features.length>0&&(e.hoveredStateId&&t.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!1}),e.hoveredStateId=i.features[0].properties[e.idColumn],t.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!0}))}),this.mymap.on("mouseleave","shplayer-fill",function(){const i=e.mymap;e.hoveredStateId&&i.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!1}),e.hoveredStateId=null})},offsetLineByMeters(e,i){try{return T(e,i,{units:"meters"})}catch{}return e},pressedEscape(){this.unselectAllCentroids()},pressedArrowKey(e){},changedTimeSlider(e){this.currentTimeBin=e;const i=this.currentScale/500*this.scaleFactor;if(this.showTimeRange==!1)this.mymap.setPaintProperty("spider-layer","line-width",["*",i,["get",e]]),this.mymap.setPaintProperty("spider-layer","line-offset",["*",.5*i,["get",e]]);else{const t=["+"];let s=!1;for(const o of this.headers)o===e[0]&&(s=!0),o!==m&&(s&&t.push(["get",o]),o===e[1]&&(s=!1));this.mymap.setPaintProperty("spider-layer","line-width",["*",i,t]),this.mymap.setPaintProperty("spider-layer","line-offset",["*",.5*i,t])}this.handleCentroidsForTimeOfDayChange(e)},changedScale(e){!this.isFinishedLoading||(this.currentScale=e,this.changedTimeSlider(this.currentTimeBin))},changedLineFilter(e){e==="Alle"?this.lineFilter=1/0:this.lineFilter=e,this.updateSpiderLinks()}},watch:{"globalState.viewState"(e){if(this.mapIsIndependent)return;if(!this.mymap||this.isMapMoving||this.thumbnail){this.isMapMoving=!1;return}const{bearing:i,longitude:t,latitude:s,zoom:o,pitch:a}=e;if(!!o)try{this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:i,zoom:o,center:[t,s],pitch:a}),this.mymap.on("move",this.handleMapMotion)}catch{}},"$store.state.colorScheme"(){this.isDarkMode=this.$store.state.colorScheme===g.DarkMode,this.mymap&&(this.mymap.setStyle(l.getters.mapStyle),this.mymap.on("style.load",()=>{this.buildCentroids(this.geojson),this.buildSpiderLinks(),this.addGeojsonToMap(this.geojson)}))},"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()},showTimeRange(){},showCentroids(){this.updateCentroidLabels()},showCentroidLabels(){this.updateCentroidLabels()}},async created(){this._mapExtentXYXY=[180,90,-180,-90],this._maximum=0},async mounted(){l.commit("setFullScreen",!this.thumbnail),this.isDarkMode=this.$store.state.colorScheme===g.DarkMode,this.bounceTimeSlider=u.debounce(this.changedTimeSlider,100),this.bounceScaleSlider=u.debounce(this.changedScale,50),this.bounceLineFilter=u.debounce(this.changedLineFilter,250),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),!this.thumbnail&&(this.setupMap(),this.configureSettings(),this.setupResizer())},beforeDestroy(){this.csvWorker&&this.csvWorker.terminate()},destroyed(){l.commit("setFullScreen",!1)}});var be=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"mycomponent",attrs:{id:e.containerId}},[e.thumbnail?e._e():t("zoom-buttons",{staticClass:"zoom-buttons"}),t("div",{staticClass:"map-container"},[t("div",{staticClass:"mymap",attrs:{id:e.mapId}}),t("div",{directives:[{name:"show",rawName:"v-show",value:!e.thumbnail&&e.loadingText,expression:"!thumbnail && loadingText"}],staticClass:"status-blob"},[t("p",[e._v(e._s(e.loadingText))])]),!e.thumbnail&&!e.loadingText?t("div",{staticClass:"lower-left"},[t("div",{staticClass:"subheading"},[e._v(e._s(e.$t("lineWidths")))]),t("scale-slider",{staticClass:"scale-slider",attrs:{stops:e.scaleValues,initialValue:e.currentScale},on:{change:e.bounceScaleSlider}}),t("div",{staticClass:"subheading"},[e._v(e._s(e.$t("hide")))]),t("line-filter-slider",{staticClass:"scale-slider",attrs:{initialValue:e.lineFilter},on:{change:e.bounceLineFilter}})],1):e._e(),!e.thumbnail&&!e.isMobile?t("div",{staticClass:"lower-right"},[t("legend-box",{staticClass:"complication",attrs:{rows:e.legendRows}}),t("scale-box",{staticClass:"complication",attrs:{rows:e.scaleRows}})],1):e._e()]),e.thumbnail?e._e():t("div",{staticClass:"widgets",style:{padding:e.yamlConfig?"0 0.5rem 0.5rem 0.5rem":"0 0"}},[this.headers.length>2?t("div",{staticClass:"widget-column",staticStyle:{"min-width":"8rem"}},[t("h4",{staticClass:"heading"},[e._v(e._s(e.$t("time")))]),t("b-checkbox",{staticClass:"checkbox",model:{value:e.showTimeRange,callback:function(s){e.showTimeRange=s},expression:"showTimeRange"}},[e._v(e._s(e.$t("duration")))]),t("time-slider",{staticClass:"xtime-slider",attrs:{useRange:e.showTimeRange,stops:e.headers,all:e.allTimeBinsLabel},on:{change:e.bounceTimeSlider}})],1):e._e(),t("div",{staticClass:"widget-column"},[t("h4",{staticClass:"heading"},[e._v(e._s(e.$t("circle")))]),t("b-checkbox",{staticClass:"checkbox",model:{value:e.showCentroids,callback:function(s){e.showCentroids=s},expression:"showCentroids"}},[e._v("\xA0"+e._s(e.$t("showCentroids")))]),t("b-checkbox",{staticClass:"checkbox",model:{value:e.showCentroidLabels,callback:function(s){e.showCentroidLabels=s},expression:"showCentroidLabels"}},[e._v("\xA0"+e._s(e.$t("showNumbers")))])],1),t("div",{staticClass:"widget-column",staticStyle:{margin:"0 0 0 auto"}},[t("h4",{staticClass:"heading"},[e._v(e._s(e.$t("total")))]),t("b-button",{staticClass:"is-small",class:{"is-link":e.isOrigin,"is-active":e.isOrigin},on:{click:e.clickedOrigins}},[e._v(e._s(e.$t("origins")))]),t("b-button",{staticClass:"is-small",class:{"is-link":!e.isOrigin,"is-active":!e.isOrigin},attrs:{hint:"Hide"},on:{click:e.clickedDestinations}},[e._v(e._s(e.$t("dest")))])],1)])],1)},Ce=[];const k={};var Se=c(ve,be,Ce,!1,we,"1fc636f8",null,null);function we(e){for(let i in k)this[i]=k[i]}var Ae=function(){return Se.exports}();export{Ae as default};
//# sourceMappingURL=AggregateOd.ea5ab5fc.js.map
